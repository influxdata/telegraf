{
  "version": "2.0",
  "service": "Definition of the public APIs exposed by SageMaker",
  "operations": {
    "AddTags": "<p>Adds or overwrites one or more tags for the specified Amazon SageMaker resource. You can add tags to notebook instances, training jobs, models, endpoint configurations, and endpoints. </p> <p>Each tag consists of a key and an optional value. Tag keys must be unique per resource. For more information about tags, see <a href=\"http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. </p>",
    "CreateEndpoint": "<p>Creates an endpoint using the endpoint configuration specified in the request. Amazon SageMaker uses the endpoint to provision resources and deploy models. You create the endpoint configuration with the <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpointConfig.html\">CreateEndpointConfig</a> API. </p> <note> <p> Use this API only for hosting models using Amazon SageMaker hosting services. </p> </note> <p>The endpoint name must be unique within an AWS Region in your AWS account. </p> <p>When it receives the request, Amazon SageMaker creates the endpoint, launches the resources (ML compute instances), and deploys the model(s) on them. </p> <p>When Amazon SageMaker receives the request, it sets the endpoint status to <code>Creating</code>. After it creates the endpoint, it sets the status to <code>InService</code>. Amazon SageMaker can then process incoming requests for inferences. To check the status of an endpoint, use the <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/API_DescribeEndpoint.html\">DescribeEndpoint</a> API.</p> <p>For an example, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/ex1.html\">Exercise 1: Using the K-Means Algorithm Provided by Amazon SageMaker</a>. </p> <p>If any of the models hosted at this endpoint get model data from an Amazon S3 location, Amazon SageMaker uses AWS Security Token Service to download model artifacts from the S3 path you provided. AWS STS is activated in your IAM user account by default. If you previously deactivated AWS STS for a region, you need to reactivate AWS STS for that region. For more information, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html\">Activating and Deactivating AWS STS i an AWS Region</a> in the <i>AWS Identity and Access Management User Guide</i>.</p>",
    "CreateEndpointConfig": "<p>Creates an endpoint configuration that Amazon SageMaker hosting services uses to deploy models. In the configuration, you identify one or more models, created using the <code>CreateModel</code> API, to deploy and the resources that you want Amazon SageMaker to provision. Then you call the <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpoint.html\">CreateEndpoint</a> API.</p> <note> <p> Use this API only if you want to use Amazon SageMaker hosting services to deploy models into production. </p> </note> <p>In the request, you define one or more <code>ProductionVariant</code>s, each of which identifies a model. Each <code>ProductionVariant</code> parameter also describes the resources that you want Amazon SageMaker to provision. This includes the number and type of ML compute instances to deploy. </p> <p>If you are hosting multiple models, you also assign a <code>VariantWeight</code> to specify how much traffic you want to allocate to each model. For example, suppose that you want to host two models, A and B, and you assign traffic weight 2 for model A and 1 for model B. Amazon SageMaker distributes two-thirds of the traffic to Model A, and one-third to model B. </p>",
    "CreateHyperParameterTuningJob": "<p>Starts a hyperparameter tuning job.</p>",
    "CreateModel": "<p>Creates a model in Amazon SageMaker. In the request, you name the model and describe one or more containers. For each container, you specify the docker image containing inference code, artifacts (from prior training), and custom environment map that the inference code uses when you deploy the model into production. </p> <p>Use this API to create a model only if you want to use Amazon SageMaker hosting services. To host your model, you create an endpoint configuration with the <code>CreateEndpointConfig</code> API, and then create an endpoint with the <code>CreateEndpoint</code> API. </p> <p>Amazon SageMaker then deploys all of the containers that you defined for the model in the hosting environment. </p> <p>In the <code>CreateModel</code> request, you must define a container with the <code>PrimaryContainer</code> parameter. </p> <p>In the request, you also provide an IAM role that Amazon SageMaker can assume to access model artifacts and docker image for deployment on ML compute hosting instances. In addition, you also use the IAM role to manage permissions the inference code needs. For example, if the inference code access any other AWS resources, you grant necessary permissions via this role.</p>",
    "CreateNotebookInstance": "<p>Creates an Amazon SageMaker notebook instance. A notebook instance is a machine learning (ML) compute instance running on a Jupyter notebook. </p> <p>In a <code>CreateNotebookInstance</code> request, specify the type of ML compute instance that you want to run. Amazon SageMaker launches the instance, installs common libraries that you can use to explore datasets for model training, and attaches an ML storage volume to the notebook instance. </p> <p>Amazon SageMaker also provides a set of example notebooks. Each notebook demonstrates how to use Amazon SageMaker with a specific algorithm or with a machine learning framework. </p> <p>After receiving the request, Amazon SageMaker does the following:</p> <ol> <li> <p>Creates a network interface in the Amazon SageMaker VPC.</p> </li> <li> <p>(Option) If you specified <code>SubnetId</code>, Amazon SageMaker creates a network interface in your own VPC, which is inferred from the subnet ID that you provide in the input. When creating this network interface, Amazon SageMaker attaches the security group that you specified in the request to the network interface that it creates in your VPC.</p> </li> <li> <p>Launches an EC2 instance of the type specified in the request in the Amazon SageMaker VPC. If you specified <code>SubnetId</code> of your VPC, Amazon SageMaker specifies both network interfaces when launching this instance. This enables inbound traffic from your own VPC to the notebook instance, assuming that the security groups allow it.</p> </li> </ol> <p>After creating the notebook instance, Amazon SageMaker returns its Amazon Resource Name (ARN).</p> <p>After Amazon SageMaker creates the notebook instance, you can connect to the Jupyter server and work in Jupyter notebooks. For example, you can write code to explore a dataset that you can use for model training, train a model, host models by creating Amazon SageMaker endpoints, and validate hosted models. </p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/how-it-works.html\">How It Works</a>. </p>",
    "CreateNotebookInstanceLifecycleConfig": "<p>Creates a lifecycle configuration that you can associate with a notebook instance. A <i>lifecycle configuration</i> is a collection of shell scripts that run when you create or start a notebook instance.</p> <p>Each lifecycle configuration script has a limit of 16384 characters.</p> <p>The value of the <code>$PATH</code> environment variable that is available to both scripts is <code>/sbin:bin:/usr/sbin:/usr/bin</code>.</p> <p>View CloudWatch Logs for notebook instance lifecycle configurations in log group <code>/aws/sagemaker/NotebookInstances</code> in log stream <code>[notebook-instance-name]/[LifecycleConfigHook]</code>.</p> <p>Lifecycle configuration scripts cannot run for longer than 5 minutes. If a script runs for longer than 5 minutes, it fails and the notebook instance is not created or started.</p> <p>For information about notebook instance lifestyle configurations, see <a>notebook-lifecycle-config</a>.</p>",
    "CreatePresignedNotebookInstanceUrl": "<p>Returns a URL that you can use to connect to the Jupyter server from a notebook instance. In the Amazon SageMaker console, when you choose <code>Open</code> next to a notebook instance, Amazon SageMaker opens a new tab showing the Jupyter server home page from the notebook instance. The console uses this API to get the URL and show the page. </p>",
    "CreateTrainingJob": "<p>Starts a model training job. After training completes, Amazon SageMaker saves the resulting model artifacts to an Amazon S3 location that you specify. </p> <p>If you choose to host your model using Amazon SageMaker hosting services, you can use the resulting model artifacts as part of the model. You can also use the artifacts in a deep learning service other than Amazon SageMaker, provided that you know how to use them for inferences. </p> <p>In the request body, you provide the following: </p> <ul> <li> <p> <code>AlgorithmSpecification</code> - Identifies the training algorithm to use. </p> </li> <li> <p> <code>HyperParameters</code> - Specify these algorithm-specific parameters to influence the quality of the final model. For a list of hyperparameters for each training algorithm provided by Amazon SageMaker, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\">Algorithms</a>. </p> </li> <li> <p> <code>InputDataConfig</code> - Describes the training dataset and the Amazon S3 location where it is stored.</p> </li> <li> <p> <code>OutputDataConfig</code> - Identifies the Amazon S3 location where you want Amazon SageMaker to save the results of model training. </p> <p/> </li> <li> <p> <code>ResourceConfig</code> - Identifies the resources, ML compute instances, and ML storage volumes to deploy for model training. In distributed training, you specify more than one instance. </p> </li> <li> <p> <code>RoleARN</code> - The Amazon Resource Number (ARN) that Amazon SageMaker assumes to perform tasks on your behalf during model training. You must grant this role the necessary permissions so that Amazon SageMaker can successfully complete model training. </p> </li> <li> <p> <code>StoppingCondition</code> - Sets a duration for training. Use this parameter to cap model training costs. </p> </li> </ul> <p> For more information about Amazon SageMaker, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/how-it-works.html\">How It Works</a>. </p>",
    "CreateTransformJob": "<p>Starts a transform job. After the results are obtained, Amazon SageMaker saves them to an Amazon S3 location that you specify.</p> <p>To perform batch transformations, you create a transform job and use the data that you have readily available.</p> <p>In the request body, you provide the following:</p> <ul> <li> <p> <code>TransformJobName</code> - Identifies the transform job. The name must be unique within an AWS Region in an AWS account.</p> </li> <li> <p> <code>ModelName</code> - Identifies the model to use.</p> </li> <li> <p> <code>TransformInput</code> - Describes the dataset to be transformed and the Amazon S3 location where it is stored.</p> </li> <li> <p> <code>TransformOutput</code> - Identifies the Amazon S3 location where you want Amazon SageMaker to save the results from the transform job.</p> </li> <li> <p> <code>TransformResources</code> - Identifies the ML compute instances for the transform job.</p> </li> </ul> <p> For more information about how batch transformation works Amazon SageMaker, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform.html\">How It Works</a>. </p>",
    "DeleteEndpoint": "<p>Deletes an endpoint. Amazon SageMaker frees up all of the resources that were deployed when the endpoint was created. </p>",
    "DeleteEndpointConfig": "<p>Deletes an endpoint configuration. The <code>DeleteEndpointConfig</code> API deletes only the specified configuration. It does not delete endpoints created using the configuration. </p>",
    "DeleteModel": "<p>Deletes a model. The <code>DeleteModel</code> API deletes only the model entry that was created in Amazon SageMaker when you called the <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateModel.html\">CreateModel</a> API. It does not delete model artifacts, inference code, or the IAM role that you specified when creating the model. </p>",
    "DeleteNotebookInstance": "<p> Deletes an Amazon SageMaker notebook instance. Before you can delete a notebook instance, you must call the <code>StopNotebookInstance</code> API. </p> <important> <p>When you delete a notebook instance, you lose all of your data. Amazon SageMaker removes the ML compute instance, and deletes the ML storage volume and the network interface associated with the notebook instance. </p> </important>",
    "DeleteNotebookInstanceLifecycleConfig": "<p>Deletes a notebook instance lifecycle configuration.</p>",
    "DeleteTags": "<p>Deletes the specified tags from an Amazon SageMaker resource.</p> <p>To list a resource's tags, use the <code>ListTags</code> API. </p>",
    "DescribeEndpoint": "<p>Returns the description of an endpoint.</p>",
    "DescribeEndpointConfig": "<p>Returns the description of an endpoint configuration created using the <code>CreateEndpointConfig</code> API.</p>",
    "DescribeHyperParameterTuningJob": "<p>Gets a description of a hyperparameter tuning job.</p>",
    "DescribeModel": "<p>Describes a model that you created using the <code>CreateModel</code> API.</p>",
    "DescribeNotebookInstance": "<p>Returns information about a notebook instance.</p>",
    "DescribeNotebookInstanceLifecycleConfig": "<p>Returns a description of a notebook instance lifecycle configuration.</p> <p>For information about notebook instance lifestyle configurations, see <a>notebook-lifecycle-config</a>.</p>",
    "DescribeTrainingJob": "<p>Returns information about a training job.</p>",
    "DescribeTransformJob": "<p>Returns information about a transform job.</p>",
    "ListEndpointConfigs": "<p>Lists endpoint configurations.</p>",
    "ListEndpoints": "<p>Lists endpoints.</p>",
    "ListHyperParameterTuningJobs": "<p>Gets a list of <a>HyperParameterTuningJobSummary</a> objects that describe the hyperparameter tuning jobs launched in your account.</p>",
    "ListModels": "<p>Lists models created with the <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateModel.html\">CreateModel</a> API.</p>",
    "ListNotebookInstanceLifecycleConfigs": "<p>Lists notebook instance lifestyle configurations created with the <a>CreateNotebookInstanceLifecycleConfig</a> API.</p>",
    "ListNotebookInstances": "<p>Returns a list of the Amazon SageMaker notebook instances in the requester's account in an AWS Region. </p>",
    "ListTags": "<p>Returns the tags for the specified Amazon SageMaker resource.</p>",
    "ListTrainingJobs": "<p>Lists training jobs.</p>",
    "ListTrainingJobsForHyperParameterTuningJob": "<p>Gets a list of <a>TrainingJobSummary</a> objects that describe the training jobs that a hyperparameter tuning job launched.</p>",
    "ListTransformJobs": "<p>Lists transform jobs.</p>",
    "StartNotebookInstance": "<p>Launches an ML compute instance with the latest version of the libraries and attaches your ML storage volume. After configuring the notebook instance, Amazon SageMaker sets the notebook instance status to <code>InService</code>. A notebook instance's status must be <code>InService</code> before you can connect to your Jupyter notebook. </p>",
    "StopHyperParameterTuningJob": "<p>Stops a running hyperparameter tuning job and all running training jobs that the tuning job launched.</p> <p>All model artifacts output from the training jobs are stored in Amazon Simple Storage Service (Amazon S3). All data that the training jobs write to Amazon CloudWatch Logs are still available in CloudWatch. After the tuning job moves to the <code>Stopped</code> state, it releases all reserved resources for the tuning job.</p>",
    "StopNotebookInstance": "<p>Terminates the ML compute instance. Before terminating the instance, Amazon SageMaker disconnects the ML storage volume from it. Amazon SageMaker preserves the ML storage volume. </p> <p>To access data on the ML storage volume for a notebook instance that has been terminated, call the <code>StartNotebookInstance</code> API. <code>StartNotebookInstance</code> launches another ML compute instance, configures it, and attaches the preserved ML storage volume so you can continue your work. </p>",
    "StopTrainingJob": "<p>Stops a training job. To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms might use this 120-second window to save the model artifacts, so the results of the training is not lost. </p> <p>Training algorithms provided by Amazon SageMaker save the intermediate results of a model training job. This intermediate data is a valid model artifact. You can use the model artifacts that are saved when Amazon SageMaker stops a training job to create a model. </p> <p>When it receives a <code>StopTrainingJob</code> request, Amazon SageMaker changes the status of the job to <code>Stopping</code>. After Amazon SageMaker stops the job, it sets the status to <code>Stopped</code>.</p>",
    "StopTransformJob": "<p>Stops a transform job.</p> <p>When Amazon SageMaker receives a <code>StopTransformJob</code> request, the status of the job changes to <code>Stopping</code>. After Amazon SageMaker stops the job, the status is set to <code>Stopped</code>. When you stop a transform job before it is completed, Amazon SageMaker doesn't store the job's output in Amazon S3.</p>",
    "UpdateEndpoint": "<p> Deploys the new <code>EndpointConfig</code> specified in the request, switches to using newly created endpoint, and then deletes resources provisioned for the endpoint using the previous <code>EndpointConfig</code> (there is no availability loss). </p> <p>When Amazon SageMaker receives the request, it sets the endpoint status to <code>Updating</code>. After updating the endpoint, it sets the status to <code>InService</code>. To check the status of an endpoint, use the <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/API_DescribeEndpoint.html\">DescribeEndpoint</a> API. </p> <note> <p>You cannot update an endpoint with the current <code>EndpointConfig</code>. To update an endpoint, you must create a new <code>EndpointConfig</code>.</p> </note>",
    "UpdateEndpointWeightsAndCapacities": "<p>Updates variant weight of one or more variants associated with an existing endpoint, or capacity of one variant associated with an existing endpoint. When it receives the request, Amazon SageMaker sets the endpoint status to <code>Updating</code>. After updating the endpoint, it sets the status to <code>InService</code>. To check the status of an endpoint, use the <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/API_DescribeEndpoint.html\">DescribeEndpoint</a> API. </p>",
    "UpdateNotebookInstance": "<p>Updates a notebook instance. NotebookInstance updates include upgrading or downgrading the ML compute instance used for your notebook instance to accommodate changes in your workload requirements. You can also update the VPC security groups.</p>",
    "UpdateNotebookInstanceLifecycleConfig": "<p>Updates a notebook instance lifecycle configuration created with the <a>CreateNotebookInstanceLifecycleConfig</a> API.</p>"
  },
  "shapes": {
    "Accept": {
      "base": null,
      "refs": {
        "TransformOutput$Accept": "<p>The MIME type used to specify the output data. Amazon SageMaker uses the MIME type with each http call to transfer data from the transform job.</p>"
      }
    },
    "AddTagsInput": {
      "base": null,
      "refs": {
      }
    },
    "AddTagsOutput": {
      "base": null,
      "refs": {
      }
    },
    "AlgorithmImage": {
      "base": null,
      "refs": {
        "AlgorithmSpecification$TrainingImage": "<p>The registry path of the Docker image that contains the training algorithm. For information about docker registry paths for built-in algorithms, see <a>sagemaker-algo-docker-registry-paths</a>.</p>",
        "HyperParameterAlgorithmSpecification$TrainingImage": "<p> The registry path of the Docker image that contains the training algorithm. For information about Docker registry paths for built-in algorithms, see <a>sagemaker-algo-docker-registry-paths</a>.</p>"
      }
    },
    "AlgorithmSpecification": {
      "base": "<p>Specifies the training algorithm to use in a <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateTrainingJob.html\">CreateTrainingJob</a> request.</p> <p>For more information about algorithms provided by Amazon SageMaker, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\">Algorithms</a>. For information about using your own algorithms, see <a>your-algorithms</a>. </p>",
      "refs": {
        "CreateTrainingJobRequest$AlgorithmSpecification": "<p>The registry path of the Docker image that contains the training algorithm and algorithm-specific metadata, including the input mode. For more information about algorithms provided by Amazon SageMaker, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\">Algorithms</a>. For information about providing your own algorithms, see <a>your-algorithms</a>. </p>",
        "DescribeTrainingJobResponse$AlgorithmSpecification": "<p>Information about the algorithm used for training, and algorithm metadata. </p>"
      }
    },
    "AssemblyType": {
      "base": null,
      "refs": {
        "TransformOutput$AssembleWith": "<p>Defines how to assemble the results of the transform job as a single S3 object. You should select a format that is most convienant to you. To concatenate the results in binary format, specify <code>None</code>. To add a newline character at the end of every transformed record, specify <code>Line</code>. To assemble the output in RecordIO format, specify <code>RecordIO</code>. The default value is <code>None</code>.</p> <p>For information about the <code>RecordIO</code> format, see <a href=\"http://mxnet.io/architecture/note_data_loading.html#data-format\">Data Format</a>.</p>"
      }
    },
    "BatchStrategy": {
      "base": null,
      "refs": {
        "CreateTransformJobRequest$BatchStrategy": "<p>Determins the number of records included in a single batch. <code>SingleRecord</code> means only one record is used per batch. <code>MultiRecord</code> means a batch is set to contain as many records that could possibly fit within the <code>MaxPayloadInMB</code> limit.</p>",
        "DescribeTransformJobResponse$BatchStrategy": "<p>SingleRecord means only one record was used per a batch. &lt;code&gt;MultiRecord&lt;/code&gt; means batches contained as many records that could possibly fit within the <code>MaxPayloadInMB</code> limit.</p>"
      }
    },
    "CategoricalParameterRange": {
      "base": "<p>A list of categorical hyperparameters to tune.</p>",
      "refs": {
        "CategoricalParameterRanges$member": null
      }
    },
    "CategoricalParameterRanges": {
      "base": null,
      "refs": {
        "ParameterRanges$CategoricalParameterRanges": "<p>The array of <a>CategoricalParameterRange</a> objects that specify ranges of categorical hyperparameters that a hyperparameter tuning job searches.</p>"
      }
    },
    "Channel": {
      "base": "<p>A channel is a named input source that training algorithms can consume. </p>",
      "refs": {
        "InputDataConfig$member": null
      }
    },
    "ChannelName": {
      "base": null,
      "refs": {
        "Channel$ChannelName": "<p>The name of the channel. </p>"
      }
    },
    "CompressionType": {
      "base": null,
      "refs": {
        "Channel$CompressionType": "<p>If training data is compressed, the compression type. The default value is <code>None</code>. <code>CompressionType</code> is used only in Pipe input mode. In File mode, leave this field unset or set it to None.</p>",
        "TransformInput$CompressionType": "<p>Compressing data helps save on storage space. If your transform data is compressed, specify the compression type.and Amazon SageMaker will automatically decompress the data for the transform job accordingly. The default value is <code>None</code>.</p>"
      }
    },
    "ContainerDefinition": {
      "base": "<p>Describes the container, as part of model definition.</p>",
      "refs": {
        "CreateModelInput$PrimaryContainer": "<p>The location of the primary docker image containing inference code, associated artifacts, and custom environment map that the inference code uses when the model is deployed into production. </p>",
        "DescribeModelOutput$PrimaryContainer": "<p>The location of the primary inference code, associated artifacts, and custom environment map that the inference code uses when it is deployed in production. </p>"
      }
    },
    "ContainerHostname": {
      "base": null,
      "refs": {
        "ContainerDefinition$ContainerHostname": "<p>The DNS host name for the container after Amazon SageMaker deploys it.</p>"
      }
    },
    "ContentType": {
      "base": null,
      "refs": {
        "Channel$ContentType": "<p>The MIME type of the data.</p>",
        "TransformInput$ContentType": "<p>The multipurpose internet mail extension (MIME) type of the data. Amazon SageMaker uses the MIME type with each http call to transfer data to the transform job.</p>"
      }
    },
    "ContinuousParameterRange": {
      "base": "<p>A list of continuous hyperparameters to tune.</p>",
      "refs": {
        "ContinuousParameterRanges$member": null
      }
    },
    "ContinuousParameterRanges": {
      "base": null,
      "refs": {
        "ParameterRanges$ContinuousParameterRanges": "<p>The array of <a>ContinuousParameterRange</a> objects that specify ranges of continuous hyperparameters that a hyperparameter tuning job searches.</p>"
      }
    },
    "CreateEndpointConfigInput": {
      "base": null,
      "refs": {
      }
    },
    "CreateEndpointConfigOutput": {
      "base": null,
      "refs": {
      }
    },
    "CreateEndpointInput": {
      "base": null,
      "refs": {
      }
    },
    "CreateEndpointOutput": {
      "base": null,
      "refs": {
      }
    },
    "CreateHyperParameterTuningJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateHyperParameterTuningJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateModelInput": {
      "base": null,
      "refs": {
      }
    },
    "CreateModelOutput": {
      "base": null,
      "refs": {
      }
    },
    "CreateNotebookInstanceInput": {
      "base": null,
      "refs": {
      }
    },
    "CreateNotebookInstanceLifecycleConfigInput": {
      "base": null,
      "refs": {
      }
    },
    "CreateNotebookInstanceLifecycleConfigOutput": {
      "base": null,
      "refs": {
      }
    },
    "CreateNotebookInstanceOutput": {
      "base": null,
      "refs": {
      }
    },
    "CreatePresignedNotebookInstanceUrlInput": {
      "base": null,
      "refs": {
      }
    },
    "CreatePresignedNotebookInstanceUrlOutput": {
      "base": null,
      "refs": {
      }
    },
    "CreateTrainingJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateTrainingJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateTransformJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateTransformJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreationTime": {
      "base": null,
      "refs": {
        "DescribeNotebookInstanceLifecycleConfigOutput$CreationTime": "<p>A timestamp that tells when the lifecycle configuration was created.</p>",
        "DescribeNotebookInstanceOutput$CreationTime": "<p>A timestamp. Use this parameter to return the time when the notebook instance was created</p>",
        "ListNotebookInstanceLifecycleConfigsInput$CreationTimeBefore": "<p>A filter that returns only lifecycle configurations that were created before the specified time (timestamp).</p>",
        "ListNotebookInstanceLifecycleConfigsInput$CreationTimeAfter": "<p>A filter that returns only lifecycle configurations that were created after the specified time (timestamp).</p>",
        "ListNotebookInstancesInput$CreationTimeBefore": "<p>A filter that returns only notebook instances that were created before the specified time (timestamp). </p>",
        "ListNotebookInstancesInput$CreationTimeAfter": "<p>A filter that returns only notebook instances that were created after the specified time (timestamp).</p>",
        "NotebookInstanceLifecycleConfigSummary$CreationTime": "<p>A timestamp that tells when the lifecycle configuration was created.</p>",
        "NotebookInstanceSummary$CreationTime": "<p>A timestamp that shows when the notebook instance was created.</p>"
      }
    },
    "DataSource": {
      "base": "<p>Describes the location of the channel data.</p>",
      "refs": {
        "Channel$DataSource": "<p>The location of the channel data.</p>"
      }
    },
    "DeleteEndpointConfigInput": {
      "base": null,
      "refs": {
      }
    },
    "DeleteEndpointInput": {
      "base": null,
      "refs": {
      }
    },
    "DeleteModelInput": {
      "base": null,
      "refs": {
      }
    },
    "DeleteNotebookInstanceInput": {
      "base": null,
      "refs": {
      }
    },
    "DeleteNotebookInstanceLifecycleConfigInput": {
      "base": null,
      "refs": {
      }
    },
    "DeleteTagsInput": {
      "base": null,
      "refs": {
      }
    },
    "DeleteTagsOutput": {
      "base": null,
      "refs": {
      }
    },
    "DeployedImage": {
      "base": "<p>Gets the Amazon EC2 Container Registry path of the docker image of the model that is hosted in this <a>ProductionVariant</a>.</p> <p>If you used the <code>registry/repository[:tag]</code> form to to specify the image path of the primary container when you created the model hosted in this <code>ProductionVariant</code>, the path resolves to a path of the form <code>registry/repository[@digest]</code>. A digest is a hash value that identifies a specific version of an image. For information about Amazon ECR paths, see <a href=\"http://docs.aws.amazon.com//AmazonECR/latest/userguide/docker-pull-ecr-image.html\">Pulling an Image</a> in the <i>Amazon ECR User Guide</i>.</p>",
      "refs": {
        "DeployedImages$member": null
      }
    },
    "DeployedImages": {
      "base": null,
      "refs": {
        "ProductionVariantSummary$DeployedImages": "<p>An array of <code>DeployedImage</code> objects that specify the Amazon EC2 Container Registry paths of the inference images deployed on instances of this <code>ProductionVariant</code>.</p>"
      }
    },
    "DescribeEndpointConfigInput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeEndpointConfigOutput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeEndpointInput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeEndpointOutput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeHyperParameterTuningJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeHyperParameterTuningJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeModelInput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeModelOutput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeNotebookInstanceInput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeNotebookInstanceLifecycleConfigInput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeNotebookInstanceLifecycleConfigOutput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeNotebookInstanceOutput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeTrainingJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeTrainingJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeTransformJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeTransformJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "DesiredWeightAndCapacity": {
      "base": "<p>Specifies weight and capacity values for a production variant.</p>",
      "refs": {
        "DesiredWeightAndCapacityList$member": null
      }
    },
    "DesiredWeightAndCapacityList": {
      "base": null,
      "refs": {
        "UpdateEndpointWeightsAndCapacitiesInput$DesiredWeightsAndCapacities": "<p>An object that provides new capacity and weight values for a variant.</p>"
      }
    },
    "DirectInternetAccess": {
      "base": null,
      "refs": {
        "CreateNotebookInstanceInput$DirectInternetAccess": "<p>Sets whether Amazon SageMaker provides internet access to the notebook instance. If you set this to <code>Disabled</code> this notebook instance will be able to access resources only in your VPC, and will not be able to connect to Amazon SageMaker training and endpoint services unless your configure a NAT Gateway in your VPC.</p> <p>For more information, see <a>appendix-notebook-and-internet-access</a>. You can set the value of this parameter to <code>Disabled</code> only if you set a value for the <code>SubnetId</code> parameter.</p>",
        "DescribeNotebookInstanceOutput$DirectInternetAccess": "<p>Describes whether Amazon SageMaker provides internet access to the notebook instance. If this value is set to <i>Disabled, he notebook instance does not have internet access, and cannot connect to Amazon SageMaker training and endpoint services</i>.</p> <p>For more information, see <a>appendix-notebook-and-internet-access</a>.</p>"
      }
    },
    "EndpointArn": {
      "base": null,
      "refs": {
        "CreateEndpointOutput$EndpointArn": "<p>The Amazon Resource Name (ARN) of the endpoint.</p>",
        "DescribeEndpointOutput$EndpointArn": "<p>The Amazon Resource Name (ARN) of the endpoint.</p>",
        "EndpointSummary$EndpointArn": "<p>The Amazon Resource Name (ARN) of the endpoint.</p>",
        "UpdateEndpointOutput$EndpointArn": "<p>The Amazon Resource Name (ARN) of the endpoint.</p>",
        "UpdateEndpointWeightsAndCapacitiesOutput$EndpointArn": "<p>The Amazon Resource Name (ARN) of the updated endpoint.</p>"
      }
    },
    "EndpointConfigArn": {
      "base": null,
      "refs": {
        "CreateEndpointConfigOutput$EndpointConfigArn": "<p>The Amazon Resource Name (ARN) of the endpoint configuration. </p>",
        "DescribeEndpointConfigOutput$EndpointConfigArn": "<p>The Amazon Resource Name (ARN) of the endpoint configuration.</p>",
        "EndpointConfigSummary$EndpointConfigArn": "<p>The Amazon Resource Name (ARN) of the endpoint configuration.</p>"
      }
    },
    "EndpointConfigName": {
      "base": null,
      "refs": {
        "CreateEndpointConfigInput$EndpointConfigName": "<p>The name of the endpoint configuration. You specify this name in a <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpoint.html\">CreateEndpoint</a> request. </p>",
        "CreateEndpointInput$EndpointConfigName": "<p>The name of an endpoint configuration. For more information, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpointConfig.html\">CreateEndpointConfig</a>. </p>",
        "DeleteEndpointConfigInput$EndpointConfigName": "<p>The name of the endpoint configuration that you want to delete.</p>",
        "DescribeEndpointConfigInput$EndpointConfigName": "<p>The name of the endpoint configuration.</p>",
        "DescribeEndpointConfigOutput$EndpointConfigName": "<p>Name of the Amazon SageMaker endpoint configuration.</p>",
        "DescribeEndpointOutput$EndpointConfigName": "<p>The name of the endpoint configuration associated with this endpoint.</p>",
        "EndpointConfigSummary$EndpointConfigName": "<p>The name of the endpoint configuration.</p>",
        "UpdateEndpointInput$EndpointConfigName": "<p>The name of the new endpoint configuration.</p>"
      }
    },
    "EndpointConfigNameContains": {
      "base": null,
      "refs": {
        "ListEndpointConfigsInput$NameContains": "<p>A string in the endpoint configuration name. This filter returns only endpoint configurations whose name contains the specified string. </p>"
      }
    },
    "EndpointConfigSortKey": {
      "base": null,
      "refs": {
        "ListEndpointConfigsInput$SortBy": "<p>The field to sort results by. The default is <code>CreationTime</code>.</p>"
      }
    },
    "EndpointConfigSummary": {
      "base": "<p>Provides summary information for an endpoint configuration.</p>",
      "refs": {
        "EndpointConfigSummaryList$member": null
      }
    },
    "EndpointConfigSummaryList": {
      "base": null,
      "refs": {
        "ListEndpointConfigsOutput$EndpointConfigs": "<p>An array of endpoint configurations.</p>"
      }
    },
    "EndpointName": {
      "base": null,
      "refs": {
        "CreateEndpointInput$EndpointName": "<p>The name of the endpoint. The name must be unique within an AWS Region in your AWS account.</p>",
        "DeleteEndpointInput$EndpointName": "<p>The name of the endpoint that you want to delete.</p>",
        "DescribeEndpointInput$EndpointName": "<p>The name of the endpoint.</p>",
        "DescribeEndpointOutput$EndpointName": "<p>Name of the endpoint.</p>",
        "EndpointSummary$EndpointName": "<p>The name of the endpoint.</p>",
        "UpdateEndpointInput$EndpointName": "<p>The name of the endpoint whose configuration you want to update.</p>",
        "UpdateEndpointWeightsAndCapacitiesInput$EndpointName": "<p>The name of an existing Amazon SageMaker endpoint.</p>"
      }
    },
    "EndpointNameContains": {
      "base": null,
      "refs": {
        "ListEndpointsInput$NameContains": "<p>A string in endpoint names. This filter returns only endpoints whose name contains the specified string.</p>"
      }
    },
    "EndpointSortKey": {
      "base": null,
      "refs": {
        "ListEndpointsInput$SortBy": "<p>Sorts the list of results. The default is <code>CreationTime</code>.</p>"
      }
    },
    "EndpointStatus": {
      "base": null,
      "refs": {
        "DescribeEndpointOutput$EndpointStatus": "<p>The status of the endpoint.</p>",
        "EndpointSummary$EndpointStatus": "<p>The status of the endpoint.</p>",
        "ListEndpointsInput$StatusEquals": "<p> A filter that returns only endpoints with the specified status. </p>"
      }
    },
    "EndpointSummary": {
      "base": "<p>Provides summary information for an endpoint.</p>",
      "refs": {
        "EndpointSummaryList$member": null
      }
    },
    "EndpointSummaryList": {
      "base": null,
      "refs": {
        "ListEndpointsOutput$Endpoints": "<p> An array or endpoint objects. </p>"
      }
    },
    "EnvironmentKey": {
      "base": null,
      "refs": {
        "EnvironmentMap$key": null
      }
    },
    "EnvironmentMap": {
      "base": null,
      "refs": {
        "ContainerDefinition$Environment": "<p>The environment variables to set in the Docker container. Each key and value in the <code>Environment</code> string to string map can have length of up to 1024. We support up to 16 entries in the map. </p>"
      }
    },
    "EnvironmentValue": {
      "base": null,
      "refs": {
        "EnvironmentMap$value": null
      }
    },
    "FailureReason": {
      "base": null,
      "refs": {
        "DescribeEndpointOutput$FailureReason": "<p>If the status of the endpoint is <code>Failed</code>, the reason why it failed. </p>",
        "DescribeHyperParameterTuningJobResponse$FailureReason": "<p>If the tuning job failed, the reason it failed.</p>",
        "DescribeNotebookInstanceOutput$FailureReason": "<p>If status is failed, the reason it failed.</p>",
        "DescribeTrainingJobResponse$FailureReason": "<p>If the training job failed, the reason it failed. </p>",
        "DescribeTransformJobResponse$FailureReason": "<p>If the transform job failed, the reason that it failed.</p>",
        "HyperParameterTrainingJobSummary$FailureReason": "<p>The reason that the training job failed. </p>",
        "ResourceInUse$Message": null,
        "ResourceLimitExceeded$Message": null,
        "ResourceNotFound$Message": null,
        "TransformJobSummary$FailureReason": "<p>If the transform job failed, the reason it failed.</p>"
      }
    },
    "FinalHyperParameterTuningJobObjectiveMetric": {
      "base": "<p>Shows the final value for the objective metric for a training job that was launched by a hyperparameter tuning job. You define the objective metric in the <code>HyperParameterTuningJobObjective</code> parameter of <a>HyperParameterTuningJobConfig</a>.</p>",
      "refs": {
        "HyperParameterTrainingJobSummary$FinalHyperParameterTuningJobObjectiveMetric": "<p>The <a>FinalHyperParameterTuningJobObjectiveMetric</a> object that specifies the value of the objective metric of the tuning job that launched this training job.</p>"
      }
    },
    "HyperParameterAlgorithmSpecification": {
      "base": "<p>Specifies which training algorithm to use for training jobs that a hyperparameter tuning job launches and the metrics to monitor.</p>",
      "refs": {
        "HyperParameterTrainingJobDefinition$AlgorithmSpecification": "<p>The <a>HyperParameterAlgorithmSpecification</a> object that specifies the algorithm to use for the training jobs that the tuning job launches.</p>"
      }
    },
    "HyperParameterTrainingJobDefinition": {
      "base": "<p>Defines the training jobs launched by a hyperparameter tuning job.</p>",
      "refs": {
        "CreateHyperParameterTuningJobRequest$TrainingJobDefinition": "<p>The <a>HyperParameterTrainingJobDefinition</a> object that describes the training jobs that this tuning job launches, including static hyperparameters, input data configuration, output data configuration, resource configuration, and stopping condition.</p>",
        "DescribeHyperParameterTuningJobResponse$TrainingJobDefinition": "<p>The <a>HyperParameterTrainingJobDefinition</a> object that specifies the definition of the training jobs that this tuning job launches.</p>"
      }
    },
    "HyperParameterTrainingJobSummaries": {
      "base": null,
      "refs": {
        "ListTrainingJobsForHyperParameterTuningJobResponse$TrainingJobSummaries": "<p>A list of <a>TrainingJobSummary</a> objects that describe the training jobs that the <code>ListTrainingJobsForHyperParameterTuningJob</code> request returned.</p>"
      }
    },
    "HyperParameterTrainingJobSummary": {
      "base": "<p>Specifies summary information about a training job.</p>",
      "refs": {
        "DescribeHyperParameterTuningJobResponse$BestTrainingJob": "<p>A <a>TrainingJobSummary</a> object that describes the training job that completed with the best current <a>HyperParameterTuningJobObjective</a>.</p>",
        "HyperParameterTrainingJobSummaries$member": null
      }
    },
    "HyperParameterTuningJobArn": {
      "base": null,
      "refs": {
        "CreateHyperParameterTuningJobResponse$HyperParameterTuningJobArn": "<p>The Amazon Resource Name (ARN) of the tuning job.</p>",
        "DescribeHyperParameterTuningJobResponse$HyperParameterTuningJobArn": "<p>The Amazon Resource Name (ARN) of the tuning job.</p>",
        "DescribeTrainingJobResponse$TuningJobArn": "<p>The Amazon Resource Name (ARN) of the associated hyperparameter tuning job if the training job was launched by a hyperparameter tuning job.</p>",
        "HyperParameterTuningJobSummary$HyperParameterTuningJobArn": "<p>The Amazon Resource Name (ARN) of the tuning job.</p>"
      }
    },
    "HyperParameterTuningJobConfig": {
      "base": "<p>Configures a hyperparameter tuning job.</p>",
      "refs": {
        "CreateHyperParameterTuningJobRequest$HyperParameterTuningJobConfig": "<p>The <a>HyperParameterTuningJobConfig</a> object that describes the tuning job, including the search strategy, metric used to evaluate training jobs, ranges of parameters to search, and resource limits for the tuning job.</p>",
        "DescribeHyperParameterTuningJobResponse$HyperParameterTuningJobConfig": "<p>The <a>HyperParameterTuningJobConfig</a> object that specifies the configuration of the tuning job.</p>"
      }
    },
    "HyperParameterTuningJobName": {
      "base": null,
      "refs": {
        "CreateHyperParameterTuningJobRequest$HyperParameterTuningJobName": "<p>The name of the tuning job. This name is the prefix for the names of all training jobs that this tuning job launches. The name must be unique within the same AWS account and AWS Region. Names are not case sensitive, and must be between 1-32 characters.</p>",
        "DescribeHyperParameterTuningJobRequest$HyperParameterTuningJobName": "<p>The name of the tuning job to describe.</p>",
        "DescribeHyperParameterTuningJobResponse$HyperParameterTuningJobName": "<p>The name of the tuning job.</p>",
        "HyperParameterTuningJobSummary$HyperParameterTuningJobName": "<p>The name of the tuning job.</p>",
        "ListTrainingJobsForHyperParameterTuningJobRequest$HyperParameterTuningJobName": "<p>The name of the tuning job whose training jobs you want to list.</p>",
        "StopHyperParameterTuningJobRequest$HyperParameterTuningJobName": "<p>The name of the tuning job to stop.</p>"
      }
    },
    "HyperParameterTuningJobObjective": {
      "base": "<p>Defines the objective metric for a hyperparameter tuning job. Hyperparameter tuning uses the value of this metric to evaluate the training jobs it launches, and returns the training job that results in either the highest or lowest value for this metric, depending on the value you specify for the <code>Type</code> parameter.</p>",
      "refs": {
        "HyperParameterTuningJobConfig$HyperParameterTuningJobObjective": "<p>The <a>HyperParameterTuningJobObjective</a> object that specifies the objective metric for this tuning job.</p>"
      }
    },
    "HyperParameterTuningJobObjectiveType": {
      "base": null,
      "refs": {
        "FinalHyperParameterTuningJobObjectiveMetric$Type": "<p>Whether to minimize or maximize the objective metric. Valid values are Minimize and Maximize.</p>",
        "HyperParameterTuningJobObjective$Type": "<p>Whether to minimize or maximize the objective metric.</p>"
      }
    },
    "HyperParameterTuningJobSortByOptions": {
      "base": null,
      "refs": {
        "ListHyperParameterTuningJobsRequest$SortBy": "<p>The field to sort results by. The default is <code>Name</code>.</p>"
      }
    },
    "HyperParameterTuningJobStatus": {
      "base": null,
      "refs": {
        "DescribeHyperParameterTuningJobResponse$HyperParameterTuningJobStatus": "<p>The status of the tuning job: InProgress, Completed, Failed, Stopping, or Stopped.</p>",
        "HyperParameterTuningJobSummary$HyperParameterTuningJobStatus": "<p>The status of the tuning job.</p>",
        "ListHyperParameterTuningJobsRequest$StatusEquals": "<p>A filter that returns only tuning jobs with the specified status.</p>"
      }
    },
    "HyperParameterTuningJobStrategyType": {
      "base": "<p>The strategy hyperparameter tuning uses to find the best combination of hyperparameters for your model. Currently, the only supported value is <code>Bayesian</code>.</p>",
      "refs": {
        "HyperParameterTuningJobConfig$Strategy": "<p>Specifies the search strategy for hyperparameters. Currently, the only valid value is <code>Bayesian</code>.</p>",
        "HyperParameterTuningJobSummary$Strategy": "<p>Specifies the search strategy hyperparameter tuning uses to choose which hyperparameters to use for each iteration. Currently, the only valid value is Bayesian.</p>"
      }
    },
    "HyperParameterTuningJobSummaries": {
      "base": null,
      "refs": {
        "ListHyperParameterTuningJobsResponse$HyperParameterTuningJobSummaries": "<p>A list of <a>HyperParameterTuningJobSummary</a> objects that describe the tuning jobs that the <code>ListHyperParameterTuningJobs</code> request returned.</p>"
      }
    },
    "HyperParameterTuningJobSummary": {
      "base": "<p>Provides summary information about a hyperparameter tuning job.</p>",
      "refs": {
        "HyperParameterTuningJobSummaries$member": null
      }
    },
    "HyperParameters": {
      "base": null,
      "refs": {
        "CreateTrainingJobRequest$HyperParameters": "<p>Algorithm-specific parameters that influence the quality of the model. You set hyperparameters before you start the learning process. For a list of hyperparameters for each training algorithm provided by Amazon SageMaker, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\">Algorithms</a>. </p> <p>You can specify a maximum of 100 hyperparameters. Each hyperparameter is a key-value pair. Each key and value is limited to 256 characters, as specified by the <code>Length Constraint</code>. </p>",
        "DescribeTrainingJobResponse$HyperParameters": "<p>Algorithm-specific parameters. </p>",
        "HyperParameterTrainingJobDefinition$StaticHyperParameters": "<p>Specifies the values of hyperparameters that do not change for the tuning job.</p>",
        "HyperParameterTrainingJobSummary$TunedHyperParameters": "<p>A list of the hyperparameters for which you specified ranges to search.</p>"
      }
    },
    "Image": {
      "base": null,
      "refs": {
        "ContainerDefinition$Image": "<p>The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored. If you are using your own custom algorithm instead of an algorithm provided by Amazon SageMaker, the inference code must meet Amazon SageMaker requirements. Amazon SageMaker supports both <code>registry/repository[:tag]</code> and <code>registry/repository[@digest]</code> image path formats. For more information, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html\">Using Your Own Algorithms with Amazon SageMaker</a> </p>",
        "DeployedImage$SpecifiedImage": "<p>The image path you specified when you created the model.</p>",
        "DeployedImage$ResolvedImage": "<p>The specific digest path of the image hosted in this <code>ProductionVariant</code>.</p>"
      }
    },
    "InputDataConfig": {
      "base": null,
      "refs": {
        "CreateTrainingJobRequest$InputDataConfig": "<p>An array of <code>Channel</code> objects. Each channel is a named input source. <code>InputDataConfig</code> describes the input data and its location. </p> <p>Algorithms can accept input data from one or more channels. For example, an algorithm might have two channels of input data, <code>training_data</code> and <code>validation_data</code>. The configuration for each channel provides the S3 location where the input data is stored. It also provides information about the stored data: the MIME type, compression method, and whether the data is wrapped in RecordIO format. </p> <p>Depending on the input mode that the algorithm supports, Amazon SageMaker either copies input data files from an S3 bucket to a local directory in the Docker container, or makes it available as input streams. </p>",
        "DescribeTrainingJobResponse$InputDataConfig": "<p>An array of <code>Channel</code> objects that describes each data input channel. </p>",
        "HyperParameterTrainingJobDefinition$InputDataConfig": "<p>An array of <a>Channel</a> objects that specify the input for the training jobs that the tuning job launches.</p>"
      }
    },
    "InstanceType": {
      "base": null,
      "refs": {
        "CreateNotebookInstanceInput$InstanceType": "<p>The type of ML compute instance to launch for the notebook instance.</p>",
        "DescribeNotebookInstanceOutput$InstanceType": "<p>The type of ML compute instance running on the notebook instance.</p>",
        "NotebookInstanceSummary$InstanceType": "<p>The type of ML compute instance that the notebook instance is running on.</p>",
        "UpdateNotebookInstanceInput$InstanceType": "<p>The Amazon ML compute instance type.</p>"
      }
    },
    "IntegerParameterRange": {
      "base": "<p>For a hyperparameter of the integer type, specifies the range that a hyperparameter tuning job searches.</p>",
      "refs": {
        "IntegerParameterRanges$member": null
      }
    },
    "IntegerParameterRanges": {
      "base": null,
      "refs": {
        "ParameterRanges$IntegerParameterRanges": "<p>The array of <a>IntegerParameterRange</a> objects that specify ranges of integer hyperparameters that a hyperparameter tuning job searches.</p>"
      }
    },
    "KmsKeyId": {
      "base": null,
      "refs": {
        "CreateEndpointConfigInput$KmsKeyId": "<p>The Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.</p>",
        "CreateNotebookInstanceInput$KmsKeyId": "<p> If you provide a AWS KMS key ID, Amazon SageMaker uses it to encrypt data at rest on the ML storage volume that is attached to your notebook instance. </p>",
        "DescribeEndpointConfigOutput$KmsKeyId": "<p>AWS KMS key ID Amazon SageMaker uses to encrypt data when storing it on the ML storage volume attached to the instance.</p>",
        "DescribeNotebookInstanceOutput$KmsKeyId": "<p> AWS KMS key ID Amazon SageMaker uses to encrypt data when storing it on the ML storage volume attached to the instance. </p>",
        "OutputDataConfig$KmsKeyId": "<p>The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption. </p> <note> <p>If you don't provide the KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role's account. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html\">KMS-Managed Encryption Keys</a> in Amazon Simple Storage Service developer guide.</p> </note> <note> <p> The KMS key policy must grant permission to the IAM role you specify in your <code>CreateTrainingJob</code> request. <a href=\"http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html\">Using Key Policies in AWS KMS</a> in the AWS Key Management Service Developer Guide. </p> </note>",
        "ResourceConfig$VolumeKmsKeyId": "<p>The Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the training job.</p>",
        "TransformOutput$KmsKeyId": "<p>The AWS Key Management Service (AWS KMS) key for Amazon S3 server-side encryption that Amazon SageMaker uses to encrypt the transformed data.</p> <p>If you don't provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role's account. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html\">KMS-Managed Encryption Keys</a> in the <i>Amazon Simple Storage Service Developer Guide.</i> </p> <p>The KMS key policy must grant permission to the IAM role that you specify in your <code>CreateTramsformJob</code> request. For more information, see <a href=\"http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html\">Using Key Policies in AWS KMS</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>"
      }
    },
    "LastModifiedTime": {
      "base": null,
      "refs": {
        "DescribeNotebookInstanceLifecycleConfigOutput$LastModifiedTime": "<p>A timestamp that tells when the lifecycle configuration was last modified.</p>",
        "DescribeNotebookInstanceOutput$LastModifiedTime": "<p>A timestamp. Use this parameter to retrieve the time when the notebook instance was last modified. </p>",
        "ListNotebookInstanceLifecycleConfigsInput$LastModifiedTimeBefore": "<p>A filter that returns only lifecycle configurations that were modified before the specified time (timestamp).</p>",
        "ListNotebookInstanceLifecycleConfigsInput$LastModifiedTimeAfter": "<p>A filter that returns only lifecycle configurations that were modified after the specified time (timestamp).</p>",
        "ListNotebookInstancesInput$LastModifiedTimeBefore": "<p>A filter that returns only notebook instances that were modified before the specified time (timestamp).</p>",
        "ListNotebookInstancesInput$LastModifiedTimeAfter": "<p>A filter that returns only notebook instances that were modified after the specified time (timestamp).</p>",
        "NotebookInstanceLifecycleConfigSummary$LastModifiedTime": "<p>A timestamp that tells when the lifecycle configuration was last modified.</p>",
        "NotebookInstanceSummary$LastModifiedTime": "<p>A timestamp that shows when the notebook instance was last modified.</p>"
      }
    },
    "ListEndpointConfigsInput": {
      "base": null,
      "refs": {
      }
    },
    "ListEndpointConfigsOutput": {
      "base": null,
      "refs": {
      }
    },
    "ListEndpointsInput": {
      "base": null,
      "refs": {
      }
    },
    "ListEndpointsOutput": {
      "base": null,
      "refs": {
      }
    },
    "ListHyperParameterTuningJobsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListHyperParameterTuningJobsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListModelsInput": {
      "base": null,
      "refs": {
      }
    },
    "ListModelsOutput": {
      "base": null,
      "refs": {
      }
    },
    "ListNotebookInstanceLifecycleConfigsInput": {
      "base": null,
      "refs": {
      }
    },
    "ListNotebookInstanceLifecycleConfigsOutput": {
      "base": null,
      "refs": {
      }
    },
    "ListNotebookInstancesInput": {
      "base": null,
      "refs": {
      }
    },
    "ListNotebookInstancesOutput": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsInput": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsMaxResults": {
      "base": null,
      "refs": {
        "ListTagsInput$MaxResults": "<p>Maximum number of tags to return.</p>"
      }
    },
    "ListTagsOutput": {
      "base": null,
      "refs": {
      }
    },
    "ListTrainingJobsForHyperParameterTuningJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListTrainingJobsForHyperParameterTuningJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListTrainingJobsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListTrainingJobsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListTransformJobsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListTransformJobsResponse": {
      "base": null,
      "refs": {
      }
    },
    "MaxConcurrentTransforms": {
      "base": null,
      "refs": {
        "CreateTransformJobRequest$MaxConcurrentTransforms": "<p>The maximum number of parallel requests on each instance node that can be launched in a transform job. The default value is <code>1</code>. To allow Amazon SageMaker to determine the appropriate number for <code>MaxConcurrentTransforms</code>, set the value to <code>0</code>.</p>",
        "DescribeTransformJobResponse$MaxConcurrentTransforms": "<p>The maximum number of parallel requests on each instance node that can be launched in a transform job. The default value is 1.</p>"
      }
    },
    "MaxNumberOfTrainingJobs": {
      "base": null,
      "refs": {
        "ResourceLimits$MaxNumberOfTrainingJobs": "<p>The maximum number of training jobs that a hyperparameter tuning job can launch.</p>"
      }
    },
    "MaxParallelTrainingJobs": {
      "base": null,
      "refs": {
        "ResourceLimits$MaxParallelTrainingJobs": "<p>The maximum number of concurrent training jobs that a hyperparameter tuning job can launch.</p>"
      }
    },
    "MaxPayloadInMB": {
      "base": null,
      "refs": {
        "CreateTransformJobRequest$MaxPayloadInMB": "<p>The maximum payload size allowed, in MB. A payload is the data portion of a record (without metadata). The value in <code>MaxPayloadInMB</code> must be greater than the size of a single record.You can approximate the size of a record by dividing the size of your dataset by the number of records. The value you enter should be proportional to the number of records you want per batch. It is recommended to enter a slightly higher value to ensure the records will fit within the maximum payload size. The default value is <code>6</code> MB. For an unlimited payload size, set the value to <code>0</code>.</p>",
        "DescribeTransformJobResponse$MaxPayloadInMB": "<p>The maximum payload size , in MB used in the transform job.</p>"
      }
    },
    "MaxResults": {
      "base": null,
      "refs": {
        "ListEndpointConfigsInput$MaxResults": "<p>The maximum number of training jobs to return in the response.</p>",
        "ListEndpointsInput$MaxResults": "<p>The maximum number of endpoints to return in the response.</p>",
        "ListHyperParameterTuningJobsRequest$MaxResults": "<p>The maximum number of tuning jobs to return. The default value is 10.</p>",
        "ListModelsInput$MaxResults": "<p>The maximum number of models to return in the response.</p>",
        "ListNotebookInstanceLifecycleConfigsInput$MaxResults": "<p>The maximum number of lifecycle configurations to return in the response.</p>",
        "ListNotebookInstancesInput$MaxResults": "<p>The maximum number of notebook instances to return.</p>",
        "ListTrainingJobsForHyperParameterTuningJobRequest$MaxResults": "<p>The maximum number of training jobs to return. The default value is 10.</p>",
        "ListTrainingJobsRequest$MaxResults": "<p>The maximum number of training jobs to return in the response.</p>",
        "ListTransformJobsRequest$MaxResults": "<p>The maximum number of transform jobs to return in the response. The default value is <code>10</code>.</p>"
      }
    },
    "MaxRuntimeInSeconds": {
      "base": null,
      "refs": {
        "StoppingCondition$MaxRuntimeInSeconds": "<p>The maximum length of time, in seconds, that the training job can run. If model training does not complete during this time, Amazon SageMaker ends the job. If value is not specified, default value is 1 day. Maximum value is 5 days.</p>"
      }
    },
    "MetricDefinition": {
      "base": "<p>Specifies a metric that the training algorithm writes to <code>stderr</code> or <code>stdout</code>. Amazon SageMakerHyperparamter tuning captures all defined metrics. You specify one metric that a hyperparameter tuning job uses as its objective metric to choose the best training job.</p>",
      "refs": {
        "MetricDefinitionList$member": null
      }
    },
    "MetricDefinitionList": {
      "base": null,
      "refs": {
        "HyperParameterAlgorithmSpecification$MetricDefinitions": "<p>An array of <a>MetricDefinition</a> objects that specify the metrics that the algorithm emits.</p>"
      }
    },
    "MetricName": {
      "base": null,
      "refs": {
        "FinalHyperParameterTuningJobObjectiveMetric$MetricName": "<p>The name of the objective metric.</p>",
        "HyperParameterTuningJobObjective$MetricName": "<p>The name of the metric to use for the objective metric.</p>",
        "MetricDefinition$Name": "<p>The name of the metric.</p>"
      }
    },
    "MetricRegex": {
      "base": null,
      "refs": {
        "MetricDefinition$Regex": "<p>A regular expression that searches the output of a training job and gets the value of the metric. For more information about using regular expressions to define metrics, see <a>automatic-model-tuning-define-metrics</a>.</p>"
      }
    },
    "MetricValue": {
      "base": null,
      "refs": {
        "FinalHyperParameterTuningJobObjectiveMetric$Value": "<p>The value of the objective metric.</p>"
      }
    },
    "ModelArn": {
      "base": null,
      "refs": {
        "CreateModelOutput$ModelArn": "<p>The ARN of the model created in Amazon SageMaker.</p>",
        "DescribeModelOutput$ModelArn": "<p>The Amazon Resource Name (ARN) of the model.</p>",
        "ModelSummary$ModelArn": "<p>The Amazon Resource Name (ARN) of the model.</p>"
      }
    },
    "ModelArtifacts": {
      "base": "<p>Provides information about the location that is configured for storing model artifacts. </p>",
      "refs": {
        "DescribeTrainingJobResponse$ModelArtifacts": "<p>Information about the Amazon S3 location that is configured for storing model artifacts. </p>"
      }
    },
    "ModelName": {
      "base": null,
      "refs": {
        "CreateModelInput$ModelName": "<p>The name of the new model.</p>",
        "CreateTransformJobRequest$ModelName": "<p>The name of the model that you want to use for the transform job.</p>",
        "DeleteModelInput$ModelName": "<p>The name of the model to delete.</p>",
        "DescribeModelInput$ModelName": "<p>The name of the model.</p>",
        "DescribeModelOutput$ModelName": "<p>Name of the Amazon SageMaker model.</p>",
        "DescribeTransformJobResponse$ModelName": "<p>The name of the model used in the transform job.</p>",
        "ModelSummary$ModelName": "<p>The name of the model that you want a summary for.</p>",
        "ProductionVariant$ModelName": "<p>The name of the model that you want to host. This is the name that you specified when creating the model.</p>"
      }
    },
    "ModelNameContains": {
      "base": null,
      "refs": {
        "ListModelsInput$NameContains": "<p>A string in the training job name. This filter returns only models in the training job whose name contains the specified string.</p>"
      }
    },
    "ModelSortKey": {
      "base": null,
      "refs": {
        "ListModelsInput$SortBy": "<p>Sorts the list of results. The default is <code>CreationTime</code>.</p>"
      }
    },
    "ModelSummary": {
      "base": "<p>Provides summary information about a model.</p>",
      "refs": {
        "ModelSummaryList$member": null
      }
    },
    "ModelSummaryList": {
      "base": null,
      "refs": {
        "ListModelsOutput$Models": "<p>An array of <code>ModelSummary</code> objects, each of which lists a model.</p>"
      }
    },
    "NameContains": {
      "base": null,
      "refs": {
        "ListHyperParameterTuningJobsRequest$NameContains": "<p>A string in the tuning job name. This filter returns only tuning jobs whose name contains the specified string.</p>",
        "ListTrainingJobsRequest$NameContains": "<p>A string in the training job name. This filter returns only training jobs whose name contains the specified string.</p>",
        "ListTransformJobsRequest$NameContains": "<p>A string in the transform job name. This filter returns only transform jobs whose name contains the specified string.</p>"
      }
    },
    "NetworkInterfaceId": {
      "base": null,
      "refs": {
        "DescribeNotebookInstanceOutput$NetworkInterfaceId": "<p> Network interface IDs that Amazon SageMaker created at the time of creating the instance. </p>"
      }
    },
    "NextToken": {
      "base": null,
      "refs": {
        "ListHyperParameterTuningJobsRequest$NextToken": "<p>If the result of the previous <code>ListHyperParameterTuningJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of tuning jobs, use the token in the next request.</p>",
        "ListHyperParameterTuningJobsResponse$NextToken": "<p>If the result of this <code>ListHyperParameterTuningJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of tuning jobs, use the token in the next request.</p>",
        "ListNotebookInstanceLifecycleConfigsInput$NextToken": "<p>If the result of a <code>ListNotebookInstanceLifecycleConfigs</code> request was truncated, the response includes a <code>NextToken</code>. To get the next set of lifecycle configurations, use the token in the next request.</p>",
        "ListNotebookInstanceLifecycleConfigsOutput$NextToken": "<p>If the response is truncated, Amazon SageMaker returns this token. To get the next set of lifecycle configurations, use it in the next request. </p>",
        "ListNotebookInstancesInput$NextToken": "<p> If the previous call to the <code>ListNotebookInstances</code> is truncated, the response includes a <code>NextToken</code>. You can use this token in your subsequent <code>ListNotebookInstances</code> request to fetch the next set of notebook instances. </p> <note> <p> You might specify a filter or a sort order in your request. When response is truncated, you must use the same values for the filer and sort order in the next request. </p> </note>",
        "ListNotebookInstancesOutput$NextToken": "<p>If the response to the previous <code>ListNotebookInstances</code> request was truncated, Amazon SageMaker returns this token. To retrieve the next set of notebook instances, use the token in the next request.</p>",
        "ListTagsInput$NextToken": "<p> If the response to the previous <code>ListTags</code> request is truncated, Amazon SageMaker returns this token. To retrieve the next set of tags, use it in the subsequent request. </p>",
        "ListTagsOutput$NextToken": "<p> If response is truncated, Amazon SageMaker includes a token in the response. You can use this token in your subsequent request to fetch next set of tokens. </p>",
        "ListTrainingJobsForHyperParameterTuningJobRequest$NextToken": "<p>If the result of the previous <code>ListTrainingJobsForHyperParameterTuningJob</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of training jobs, use the token in the next request.</p>",
        "ListTrainingJobsForHyperParameterTuningJobResponse$NextToken": "<p>If the result of this <code>ListTrainingJobsForHyperParameterTuningJob</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of training jobs, use the token in the next request.</p>",
        "ListTrainingJobsRequest$NextToken": "<p>If the result of the previous <code>ListTrainingJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of training jobs, use the token in the next request. </p>",
        "ListTrainingJobsResponse$NextToken": "<p>If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of training jobs, use it in the subsequent request.</p>",
        "ListTransformJobsRequest$NextToken": "<p>If the result of the previous <code>ListTransformJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of transform jobs, use the token in the next request.</p>",
        "ListTransformJobsResponse$NextToken": "<p>If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of transform jobs, use it in the next request.</p>"
      }
    },
    "NotebookInstanceArn": {
      "base": null,
      "refs": {
        "CreateNotebookInstanceOutput$NotebookInstanceArn": "<p>The Amazon Resource Name (ARN) of the notebook instance. </p>",
        "DescribeNotebookInstanceOutput$NotebookInstanceArn": "<p>The Amazon Resource Name (ARN) of the notebook instance.</p>",
        "NotebookInstanceSummary$NotebookInstanceArn": "<p>The Amazon Resource Name (ARN) of the notebook instance.</p>"
      }
    },
    "NotebookInstanceLifecycleConfigArn": {
      "base": null,
      "refs": {
        "CreateNotebookInstanceLifecycleConfigOutput$NotebookInstanceLifecycleConfigArn": "<p>The Amazon Resource Name (ARN) of the lifecycle configuration.</p>",
        "DescribeNotebookInstanceLifecycleConfigOutput$NotebookInstanceLifecycleConfigArn": "<p>The Amazon Resource Name (ARN) of the lifecycle configuration.</p>",
        "NotebookInstanceLifecycleConfigSummary$NotebookInstanceLifecycleConfigArn": "<p>The Amazon Resource Name (ARN) of the lifecycle configuration.</p>"
      }
    },
    "NotebookInstanceLifecycleConfigContent": {
      "base": null,
      "refs": {
        "NotebookInstanceLifecycleHook$Content": "<p>A base64-encoded string that contains a shell script for a notebook instance lifecycle configuration.</p>"
      }
    },
    "NotebookInstanceLifecycleConfigList": {
      "base": null,
      "refs": {
        "CreateNotebookInstanceLifecycleConfigInput$OnCreate": "<p>A shell script that runs only once, when you create a notebook instance.</p>",
        "CreateNotebookInstanceLifecycleConfigInput$OnStart": "<p>A shell script that runs every time you start a notebook instance, including when you create the notebook instance.</p>",
        "DescribeNotebookInstanceLifecycleConfigOutput$OnCreate": "<p>The shell script that runs only once, when you create a notebook instance.</p>",
        "DescribeNotebookInstanceLifecycleConfigOutput$OnStart": "<p>The shell script that runs every time you start a notebook instance, including when you create the notebook instance.</p>",
        "UpdateNotebookInstanceLifecycleConfigInput$OnCreate": "<p>The shell script that runs only once, when you create a notebook instance</p>",
        "UpdateNotebookInstanceLifecycleConfigInput$OnStart": "<p>The shell script that runs every time you start a notebook instance, including when you create the notebook instance.</p>"
      }
    },
    "NotebookInstanceLifecycleConfigName": {
      "base": null,
      "refs": {
        "CreateNotebookInstanceInput$LifecycleConfigName": "<p>The name of a lifecycle configuration to associate with the notebook instance. For information about lifestyle configurations, see <a>notebook-lifecycle-config</a>.</p>",
        "CreateNotebookInstanceLifecycleConfigInput$NotebookInstanceLifecycleConfigName": "<p>The name of the lifecycle configuration.</p>",
        "DeleteNotebookInstanceLifecycleConfigInput$NotebookInstanceLifecycleConfigName": "<p>The name of the lifecycle configuration to delete.</p>",
        "DescribeNotebookInstanceLifecycleConfigInput$NotebookInstanceLifecycleConfigName": "<p>The name of the lifecycle configuration to describe.</p>",
        "DescribeNotebookInstanceLifecycleConfigOutput$NotebookInstanceLifecycleConfigName": "<p>The name of the lifecycle configuration.</p>",
        "DescribeNotebookInstanceOutput$NotebookInstanceLifecycleConfigName": "<p>Returns the name of a notebook instance lifecycle configuration.</p> <p>For information about notebook instance lifestyle configurations, see <a>notebook-lifecycle-config</a>.</p>",
        "ListNotebookInstancesInput$NotebookInstanceLifecycleConfigNameContains": "<p>A string in the name of a notebook instances lifecycle configuration associated with this notebook instance. This filter returns only notebook instances associated with a lifecycle configuration with a name that contains the specified string.</p>",
        "NotebookInstanceLifecycleConfigSummary$NotebookInstanceLifecycleConfigName": "<p>The name of the lifecycle configuration.</p>",
        "NotebookInstanceSummary$NotebookInstanceLifecycleConfigName": "<p>The name of a notebook instance lifecycle configuration associated with this notebook instance.</p> <p>For information about notebook instance lifestyle configurations, see <a>notebook-lifecycle-config</a>.</p>",
        "UpdateNotebookInstanceLifecycleConfigInput$NotebookInstanceLifecycleConfigName": "<p>The name of the lifecycle configuration.</p>"
      }
    },
    "NotebookInstanceLifecycleConfigNameContains": {
      "base": null,
      "refs": {
        "ListNotebookInstanceLifecycleConfigsInput$NameContains": "<p>A string in the lifecycle configuration name. This filter returns only lifecycle configurations whose name contains the specified string.</p>"
      }
    },
    "NotebookInstanceLifecycleConfigSortKey": {
      "base": null,
      "refs": {
        "ListNotebookInstanceLifecycleConfigsInput$SortBy": "<p>Sorts the list of results. The default is <code>CreationTime</code>.</p>"
      }
    },
    "NotebookInstanceLifecycleConfigSortOrder": {
      "base": null,
      "refs": {
        "ListNotebookInstanceLifecycleConfigsInput$SortOrder": "<p>The sort order for results.</p>"
      }
    },
    "NotebookInstanceLifecycleConfigSummary": {
      "base": "<p>Provides a summary of a notebook instance lifecycle configuration.</p>",
      "refs": {
        "NotebookInstanceLifecycleConfigSummaryList$member": null
      }
    },
    "NotebookInstanceLifecycleConfigSummaryList": {
      "base": null,
      "refs": {
        "ListNotebookInstanceLifecycleConfigsOutput$NotebookInstanceLifecycleConfigs": "<p>An array of <code>NotebookInstanceLifecycleConfiguration</code> objects, each listing a lifecycle configuration.</p>"
      }
    },
    "NotebookInstanceLifecycleHook": {
      "base": "<p>Contains the notebook instance lifecycle configuration script.</p> <p>Each lifecycle configuration script has a limit of 16384 characters.</p> <p>The value of the <code>$PATH</code> environment variable that is available to both scripts is <code>/sbin:bin:/usr/sbin:/usr/bin</code>.</p> <p>View CloudWatch Logs for notebook instance lifecycle configurations in log group <code>/aws/sagemaker/NotebookInstances</code> in log stream <code>[notebook-instance-name]/[LifecycleConfigHook]</code>.</p> <p>Lifecycle configuration scripts cannot run for longer than 5 minutes. If a script runs for longer than 5 minutes, it fails and the notebook instance is not created or started.</p> <p>For information about notebook instance lifestyle configurations, see <a>notebook-lifecycle-config</a>.</p>",
      "refs": {
        "NotebookInstanceLifecycleConfigList$member": null
      }
    },
    "NotebookInstanceName": {
      "base": null,
      "refs": {
        "CreateNotebookInstanceInput$NotebookInstanceName": "<p>The name of the new notebook instance.</p>",
        "CreatePresignedNotebookInstanceUrlInput$NotebookInstanceName": "<p>The name of the notebook instance.</p>",
        "DeleteNotebookInstanceInput$NotebookInstanceName": "<p>The name of the Amazon SageMaker notebook instance to delete.</p>",
        "DescribeNotebookInstanceInput$NotebookInstanceName": "<p>The name of the notebook instance that you want information about.</p>",
        "DescribeNotebookInstanceOutput$NotebookInstanceName": "<p> Name of the Amazon SageMaker notebook instance. </p>",
        "NotebookInstanceSummary$NotebookInstanceName": "<p>The name of the notebook instance that you want a summary for.</p>",
        "StartNotebookInstanceInput$NotebookInstanceName": "<p>The name of the notebook instance to start.</p>",
        "StopNotebookInstanceInput$NotebookInstanceName": "<p>The name of the notebook instance to terminate.</p>",
        "UpdateNotebookInstanceInput$NotebookInstanceName": "<p>The name of the notebook instance to update.</p>"
      }
    },
    "NotebookInstanceNameContains": {
      "base": null,
      "refs": {
        "ListNotebookInstancesInput$NameContains": "<p>A string in the notebook instances' name. This filter returns only notebook instances whose name contains the specified string.</p>"
      }
    },
    "NotebookInstanceSortKey": {
      "base": null,
      "refs": {
        "ListNotebookInstancesInput$SortBy": "<p>The field to sort results by. The default is <code>Name</code>.</p>"
      }
    },
    "NotebookInstanceSortOrder": {
      "base": null,
      "refs": {
        "ListNotebookInstancesInput$SortOrder": "<p>The sort order for results. </p>"
      }
    },
    "NotebookInstanceStatus": {
      "base": null,
      "refs": {
        "DescribeNotebookInstanceOutput$NotebookInstanceStatus": "<p>The status of the notebook instance.</p>",
        "ListNotebookInstancesInput$StatusEquals": "<p>A filter that returns only notebook instances with the specified status.</p>",
        "NotebookInstanceSummary$NotebookInstanceStatus": "<p>The status of the notebook instance.</p>"
      }
    },
    "NotebookInstanceSummary": {
      "base": "<p>Provides summary information for an Amazon SageMaker notebook instance.</p>",
      "refs": {
        "NotebookInstanceSummaryList$member": null
      }
    },
    "NotebookInstanceSummaryList": {
      "base": null,
      "refs": {
        "ListNotebookInstancesOutput$NotebookInstances": "<p>An array of <code>NotebookInstanceSummary</code> objects, one for each notebook instance.</p>"
      }
    },
    "NotebookInstanceUrl": {
      "base": null,
      "refs": {
        "CreatePresignedNotebookInstanceUrlOutput$AuthorizedUrl": "<p>A JSON object that contains the URL string. </p>",
        "DescribeNotebookInstanceOutput$Url": "<p>The URL that you use to connect to the Jupyter notebook that is running in your notebook instance. </p>",
        "NotebookInstanceSummary$Url": "<p>The URL that you use to connect to the Jupyter instance running in your notebook instance. </p>"
      }
    },
    "ObjectiveStatus": {
      "base": null,
      "refs": {
        "HyperParameterTrainingJobSummary$ObjectiveStatus": "<p>The status of the objective metric for the training job:</p> <ul> <li> <p>Succeeded: The final objective metric for the training job was evaluated by the hyperparameter tuning job and used in the hyperparameter tuning process.</p> </li> </ul> <ul> <li> <p>Pending: The training job is in progress and evaluation of its final objective metric is pending.</p> </li> </ul> <ul> <li> <p>Failed: The final objective metric for the training job was not evaluated, and was not used in the hyperparameter tuning process. This typically occurs when the training job failed or did not emit an objective metric.</p> </li> </ul>"
      }
    },
    "ObjectiveStatusCounter": {
      "base": null,
      "refs": {
        "ObjectiveStatusCounters$Succeeded": "<p>The number of training jobs whose final objective metric was evaluated by the hyperparameter tuning job and used in the hyperparameter tuning process.</p>",
        "ObjectiveStatusCounters$Pending": "<p>The number of training jobs that are in progress and pending evaluation of their final objective metric.</p>",
        "ObjectiveStatusCounters$Failed": "<p>The number of training jobs whose final objective metric was not evaluated and used in the hyperparameter tuning process. This typically occurs when the training job failed or did not emit an objective metric.</p>"
      }
    },
    "ObjectiveStatusCounters": {
      "base": "<p>Specifies the number of training jobs that this hyperparameter tuning job launched, categorized by the status of their objective metric. The objective metric status shows whether the final objective metric for the training job has been evaluated by the tuning job and used in the hyperparameter tuning process.</p>",
      "refs": {
        "DescribeHyperParameterTuningJobResponse$ObjectiveStatusCounters": "<p>The <a>ObjectiveStatusCounters</a> object that specifies the number of training jobs, categorized by the status of their final objective metric, that this tuning job launched.</p>",
        "HyperParameterTuningJobSummary$ObjectiveStatusCounters": "<p>The <a>ObjectiveStatusCounters</a> object that specifies the numbers of training jobs, categorized by objective metric status, that this tuning job launched.</p>"
      }
    },
    "OrderKey": {
      "base": null,
      "refs": {
        "ListEndpointConfigsInput$SortOrder": "<p>The sort order for results. The default is <code>Ascending</code>.</p>",
        "ListEndpointsInput$SortOrder": "<p>The sort order for results. The default is <code>Ascending</code>.</p>",
        "ListModelsInput$SortOrder": "<p>The sort order for results. The default is <code>Ascending</code>.</p>"
      }
    },
    "OutputDataConfig": {
      "base": "<p>Provides information about how to store model training results (model artifacts).</p>",
      "refs": {
        "CreateTrainingJobRequest$OutputDataConfig": "<p>Specifies the path to the S3 bucket where you want to store model artifacts. Amazon SageMaker creates subfolders for the artifacts. </p>",
        "DescribeTrainingJobResponse$OutputDataConfig": "<p>The S3 path where model artifacts that you configured when creating the job are stored. Amazon SageMaker creates subfolders for model artifacts. </p>",
        "HyperParameterTrainingJobDefinition$OutputDataConfig": "<p>Specifies the path to the Amazon S3 bucket where you store model artifacts from the training jobs that the tuning job launches.</p>"
      }
    },
    "PaginationToken": {
      "base": null,
      "refs": {
        "ListEndpointConfigsInput$NextToken": "<p>If the result of the previous <code>ListEndpointConfig</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of endpoint configurations, use the token in the next request. </p>",
        "ListEndpointConfigsOutput$NextToken": "<p> If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of endpoint configurations, use it in the subsequent request </p>",
        "ListEndpointsInput$NextToken": "<p>If the result of a <code>ListEndpoints</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of endpoints, use the token in the next request.</p>",
        "ListEndpointsOutput$NextToken": "<p> If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of training jobs, use it in the subsequent request. </p>",
        "ListModelsInput$NextToken": "<p>If the response to a previous <code>ListModels</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of models, use the token in the next request.</p>",
        "ListModelsOutput$NextToken": "<p> If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of models, use it in the subsequent request. </p>"
      }
    },
    "ParameterKey": {
      "base": null,
      "refs": {
        "CategoricalParameterRange$Name": "<p>The name of the categorical hyperparameter to tune.</p>",
        "ContinuousParameterRange$Name": "<p>The name of the continuous hyperparameter to tune.</p>",
        "HyperParameters$key": null,
        "IntegerParameterRange$Name": "<p>The name of the hyperparameter to search.</p>"
      }
    },
    "ParameterRanges": {
      "base": "<p>Specifies ranges of integer, continuous, and categorical hyperparameters that a hyperparameter tuning job searches.</p>",
      "refs": {
        "HyperParameterTuningJobConfig$ParameterRanges": "<p>The <a>ParameterRanges</a> object that specifies the ranges of hyperparameters that this tuning job searches.</p>"
      }
    },
    "ParameterValue": {
      "base": null,
      "refs": {
        "ContinuousParameterRange$MinValue": "<p>The minimum value for the hyperparameter. The tuning job uses floating-point values between this value and <code>MaxValue</code>for tuning.</p>",
        "ContinuousParameterRange$MaxValue": "<p>The maximum value for the hyperparameter. The tuning job uses floating-point values between <code>MinValue</code> value and this value for tuning.</p>",
        "HyperParameters$value": null,
        "IntegerParameterRange$MinValue": "<p>The minimum value of the hyperparameter to search.</p>",
        "IntegerParameterRange$MaxValue": "<p>The maximum value of the hyperparameter to search.</p>",
        "ParameterValues$member": null
      }
    },
    "ParameterValues": {
      "base": null,
      "refs": {
        "CategoricalParameterRange$Values": "<p>A list of the categories for the hyperparameter.</p>"
      }
    },
    "ProductionVariant": {
      "base": "<p>Identifies a model that you want to host and the resources to deploy for hosting it. If you are deploying multiple models, tell Amazon SageMaker how to distribute traffic among the models by specifying variant weights. </p>",
      "refs": {
        "ProductionVariantList$member": null
      }
    },
    "ProductionVariantInstanceType": {
      "base": null,
      "refs": {
        "ProductionVariant$InstanceType": "<p>The ML compute instance type.</p>"
      }
    },
    "ProductionVariantList": {
      "base": null,
      "refs": {
        "CreateEndpointConfigInput$ProductionVariants": "<p>An array of <code>ProductionVariant</code> objects, one for each model that you want to host at this endpoint.</p>",
        "DescribeEndpointConfigOutput$ProductionVariants": "<p>An array of <code>ProductionVariant</code> objects, one for each model that you want to host at this endpoint.</p>"
      }
    },
    "ProductionVariantSummary": {
      "base": "<p>Describes weight and capacities for a production variant associated with an endpoint. If you sent a request to the <code>UpdateEndpointWeightsAndCapacities</code> API and the endpoint status is <code>Updating</code>, you get different desired and current values. </p>",
      "refs": {
        "ProductionVariantSummaryList$member": null
      }
    },
    "ProductionVariantSummaryList": {
      "base": null,
      "refs": {
        "DescribeEndpointOutput$ProductionVariants": "<p> An array of <a>ProductionVariantSummary</a> objects, one for each model hosted behind this endpoint. </p>"
      }
    },
    "RecordWrapper": {
      "base": null,
      "refs": {
        "Channel$RecordWrapperType": "<p/> <p>Specify RecordIO as the value when input data is in raw format but the training algorithm requires the RecordIO format, in which case, Amazon SageMaker wraps each individual S3 object in a RecordIO record. If the input data is already in RecordIO format, you don't need to set this attribute. For more information, see <a href=\"https://mxnet.incubator.apache.org/how_to/recordio.html?highlight=im2rec\">Create a Dataset Using RecordIO</a>. </p> <p>In FILE mode, leave this field unset or set it to None.</p> <p/>"
      }
    },
    "ResourceArn": {
      "base": null,
      "refs": {
        "AddTagsInput$ResourceArn": "<p>The Amazon Resource Name (ARN) of the resource that you want to tag.</p>",
        "DeleteTagsInput$ResourceArn": "<p>The Amazon Resource Name (ARN) of the resource whose tags you want to delete.</p>",
        "ListTagsInput$ResourceArn": "<p>The Amazon Resource Name (ARN) of the resource whose tags you want to retrieve.</p>"
      }
    },
    "ResourceConfig": {
      "base": "<p>Describes the resources, including ML compute instances and ML storage volumes, to use for model training. </p>",
      "refs": {
        "CreateTrainingJobRequest$ResourceConfig": "<p>The resources, including the ML compute instances and ML storage volumes, to use for model training. </p> <p>ML storage volumes store model artifacts and incremental states. Training algorithms might also use ML storage volumes for scratch space. If you want Amazon SageMaker to use the ML storage volume to store the training data, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. For distributed training algorithms, specify an instance count greater than 1.</p>",
        "DescribeTrainingJobResponse$ResourceConfig": "<p>Resources, including ML compute instances and ML storage volumes, that are configured for model training. </p>",
        "HyperParameterTrainingJobDefinition$ResourceConfig": "<p>The resources, including the compute instances and storage volumes, to use for the training jobs that the tuning job launches.</p> <p>Storage volumes store model artifacts and incremental states. Training algorithms might also use storage volumes for scratch space. If you want Amazon SageMaker to use the storage volume to store the training data, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. For distributed training algorithms, specify an instance count greater than 1.</p>"
      }
    },
    "ResourceInUse": {
      "base": "<p>Resource being accessed is in use.</p>",
      "refs": {
      }
    },
    "ResourceLimitExceeded": {
      "base": "<p> You have exceeded an Amazon SageMaker resource limit. For example, you might have too many training jobs created. </p>",
      "refs": {
      }
    },
    "ResourceLimits": {
      "base": "<p>Specifies the maximum number of training jobs and parallel training jobs that a hyperparameter tuning job can launch.</p>",
      "refs": {
        "HyperParameterTuningJobConfig$ResourceLimits": "<p>The <a>ResourceLimits</a> object that specifies the maximum number of training jobs and parallel training jobs for this tuning job.</p>",
        "HyperParameterTuningJobSummary$ResourceLimits": "<p>The <a>ResourceLimits</a> object that specifies the maximum number of training jobs and parallel training jobs allowed for this tuning job.</p>"
      }
    },
    "ResourceNotFound": {
      "base": "<p>Resource being access is not found.</p>",
      "refs": {
      }
    },
    "RoleArn": {
      "base": null,
      "refs": {
        "CreateModelInput$ExecutionRoleArn": "<p>The Amazon Resource Name (ARN) of the IAM role that Amazon SageMaker can assume to access model artifacts and docker image for deployment on ML compute instances. Deploying on ML compute instances is part of model hosting. For more information, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html\">Amazon SageMaker Roles</a>. </p> <note> <p>To be able to pass this role to Amazon SageMaker, the caller of this API must have the <code>iam:PassRole</code> permission.</p> </note>",
        "CreateNotebookInstanceInput$RoleArn": "<p> When you send any requests to AWS resources from the notebook instance, Amazon SageMaker assumes this role to perform tasks on your behalf. You must grant this role necessary permissions so Amazon SageMaker can perform these tasks. The policy must allow the Amazon SageMaker service principal (sagemaker.amazonaws.com) permissions to assume this role. For more information, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html\">Amazon SageMaker Roles</a>. </p> <note> <p>To be able to pass this role to Amazon SageMaker, the caller of this API must have the <code>iam:PassRole</code> permission.</p> </note>",
        "CreateTrainingJobRequest$RoleArn": "<p>The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf. </p> <p>During model training, Amazon SageMaker needs your permission to read input data from an S3 bucket, download a Docker image that contains training code, write model artifacts to an S3 bucket, write logs to Amazon CloudWatch Logs, and publish metrics to Amazon CloudWatch. You grant permissions for all of these tasks to an IAM role. For more information, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html\">Amazon SageMaker Roles</a>. </p> <note> <p>To be able to pass this role to Amazon SageMaker, the caller of this API must have the <code>iam:PassRole</code> permission.</p> </note>",
        "DescribeModelOutput$ExecutionRoleArn": "<p>The Amazon Resource Name (ARN) of the IAM role that you specified for the model.</p>",
        "DescribeNotebookInstanceOutput$RoleArn": "<p> Amazon Resource Name (ARN) of the IAM role associated with the instance. </p>",
        "DescribeTrainingJobResponse$RoleArn": "<p>The AWS Identity and Access Management (IAM) role configured for the training job. </p>",
        "HyperParameterTrainingJobDefinition$RoleArn": "<p>The Amazon Resource Name (ARN) of the IAM role associated with the training jobs that the tuning job launches.</p>",
        "UpdateNotebookInstanceInput$RoleArn": "<p>The Amazon Resource Name (ARN) of the IAM role that Amazon SageMaker can assume to access the notebook instance. For more information, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html\">Amazon SageMaker Roles</a>. </p> <note> <p>To be able to pass this role to Amazon SageMaker, the caller of this API must have the <code>iam:PassRole</code> permission.</p> </note>"
      }
    },
    "S3DataDistribution": {
      "base": null,
      "refs": {
        "S3DataSource$S3DataDistributionType": "<p>If you want Amazon SageMaker to replicate the entire dataset on each ML compute instance that is launched for model training, specify <code>FullyReplicated</code>. </p> <p>If you want Amazon SageMaker to replicate a subset of data on each ML compute instance that is launched for model training, specify <code>ShardedByS3Key</code>. If there are <i>n</i> ML compute instances launched for a training job, each instance gets approximately 1/<i>n</i> of the number of S3 objects. In this case, model training on each machine uses only the subset of training data. </p> <p>Don't choose more ML compute instances for training than available S3 objects. If you do, some nodes won't get any data and you will pay for nodes that aren't getting any training data. This applies in both FILE and PIPE modes. Keep this in mind when developing algorithms. </p> <p>In distributed training, where you use multiple ML compute EC2 instances, you might choose <code>ShardedByS3Key</code>. If the algorithm requires copying training data to the ML storage volume (when <code>TrainingInputMode</code> is set to <code>File</code>), this copies 1/<i>n</i> of the number of objects. </p>"
      }
    },
    "S3DataSource": {
      "base": "<p>Describes the S3 data source.</p>",
      "refs": {
        "DataSource$S3DataSource": "<p>The S3 location of the data source that is associated with a channel.</p>"
      }
    },
    "S3DataType": {
      "base": null,
      "refs": {
        "S3DataSource$S3DataType": "<p>If you choose <code>S3Prefix</code>, <code>S3Uri</code> identifies a key name prefix. Amazon SageMaker uses all objects with the specified key name prefix for model training. </p> <p>If you choose <code>ManifestFile</code>, <code>S3Uri</code> identifies an object that is a manifest file containing a list of object keys that you want Amazon SageMaker to use for model training. </p>",
        "TransformS3DataSource$S3DataType": "<p>If you choose <code>S3Prefix</code>, <code>S3Uri</code> identifies a key name prefix. Amazon SageMaker uses all objects with the specified key name prefix for batch transform. </p> <p>If you choose <code>ManifestFile</code>, <code>S3Uri</code> identifies an object that is a manifest file containing a list of object keys that you want Amazon SageMaker to use for batch transform. </p>"
      }
    },
    "S3Uri": {
      "base": null,
      "refs": {
        "ModelArtifacts$S3ModelArtifacts": "<p>The path of the S3 object that contains the model artifacts. For example, <code>s3://bucket-name/keynameprefix/model.tar.gz</code>.</p>",
        "OutputDataConfig$S3OutputPath": "<p>Identifies the S3 path where you want Amazon SageMaker to store the model artifacts. For example, <code>s3://bucket-name/key-name-prefix</code>. </p>",
        "S3DataSource$S3Uri": "<p>Depending on the value specified for the <code>S3DataType</code>, identifies either a key name prefix or a manifest. For example: </p> <ul> <li> <p> A key name prefix might look like this: <code>s3://bucketname/exampleprefix</code>. </p> </li> <li> <p> A manifest might look like this: <code>s3://bucketname/example.manifest</code> </p> <p> The manifest is an S3 object which is a JSON file with the following format: </p> <p> <code>[</code> </p> <p> <code> {\"prefix\": \"s3://customer_bucket/some/prefix/\"},</code> </p> <p> <code> \"relative/path/to/custdata-1\",</code> </p> <p> <code> \"relative/path/custdata-2\",</code> </p> <p> <code> ...</code> </p> <p> <code> ]</code> </p> <p> The preceding JSON matches the following <code>s3Uris</code>: </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/to/custdata-1</code> </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/custdata-1</code> </p> <p> <code>...</code> </p> <p> The complete set of <code>s3uris</code> in this manifest constitutes the input data for the channel for this datasource. The object that each <code>s3uris</code> points to must readable by the IAM role that Amazon SageMaker uses to perform tasks on your behalf. </p> </li> </ul>",
        "TransformOutput$S3OutputPath": "<p>The Amazon S3 path where you want Amazon SageMaker to store the results of the transform job. For example, <code>s3://bucket-name/key-name-prefix</code>.</p> <p>For every S3 object used as input for the transform job, the transformed data is stored in a corresponding subfolder in the location under the output prefix.For example, the input data <code>s3://bucket-name/input-name-prefix/dataset01/data.csv</code> will have the transformed data stored at <code>s3://bucket-name/key-name-prefix/dataset01/</code>, based on the original name, as a series of .part files (.part0001, part0002, etc).</p>",
        "TransformS3DataSource$S3Uri": "<p>Depending on the value specified for the <code>S3DataType</code>, identifies either a key name prefix or a manifest. For example:</p> <ul> <li> <p> A key name prefix might look like this: <code>s3://bucketname/exampleprefix</code>. </p> </li> <li> <p> A manifest might look like this: <code>s3://bucketname/example.manifest</code> </p> <p> The manifest is an S3 object which is a JSON file with the following format: </p> <p> <code>[</code> </p> <p> <code> {\"prefix\": \"s3://customer_bucket/some/prefix/\"},</code> </p> <p> <code> \"relative/path/to/custdata-1\",</code> </p> <p> <code> \"relative/path/custdata-2\",</code> </p> <p> <code> ...</code> </p> <p> <code> ]</code> </p> <p> The preceding JSON matches the following <code>S3Uris</code>: </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/to/custdata-1</code> </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/custdata-1</code> </p> <p> <code>...</code> </p> <p> The complete set of <code>S3Uris</code> in this manifest constitutes the input data for the channel for this datasource. The object that each <code>S3Uris</code> points to must be readable by the IAM role that Amazon SageMaker uses to perform tasks on your behalf.</p> </li> </ul>"
      }
    },
    "SecondaryStatus": {
      "base": null,
      "refs": {
        "DescribeTrainingJobResponse$SecondaryStatus": "<p> Provides granular information about the system state. For more information, see <code>TrainingJobStatus</code>. </p>"
      }
    },
    "SecurityGroupId": {
      "base": null,
      "refs": {
        "SecurityGroupIds$member": null,
        "VpcSecurityGroupIds$member": null
      }
    },
    "SecurityGroupIds": {
      "base": null,
      "refs": {
        "CreateNotebookInstanceInput$SecurityGroupIds": "<p>The VPC security group IDs, in the form sg-xxxxxxxx. The security groups must be for the same VPC as specified in the subnet. </p>",
        "DescribeNotebookInstanceOutput$SecurityGroups": "<p>The IDs of the VPC security groups.</p>"
      }
    },
    "SessionExpirationDurationInSeconds": {
      "base": null,
      "refs": {
        "CreatePresignedNotebookInstanceUrlInput$SessionExpirationDurationInSeconds": "<p>The duration of the session, in seconds. The default is 12 hours.</p>"
      }
    },
    "SortBy": {
      "base": null,
      "refs": {
        "ListTrainingJobsRequest$SortBy": "<p>The field to sort results by. The default is <code>CreationTime</code>.</p>",
        "ListTransformJobsRequest$SortBy": "<p>The field to sort results by. The default is <code>CreationTime</code>.</p>"
      }
    },
    "SortOrder": {
      "base": null,
      "refs": {
        "ListHyperParameterTuningJobsRequest$SortOrder": "<p>The sort order for results. The default is <code>Ascending</code>.</p>",
        "ListTrainingJobsForHyperParameterTuningJobRequest$SortOrder": "<p>The sort order for results. The default is <code>Ascending</code>.</p>",
        "ListTrainingJobsRequest$SortOrder": "<p>The sort order for results. The default is <code>Ascending</code>.</p>",
        "ListTransformJobsRequest$SortOrder": "<p>The sort order for results. The default is <code>Descending</code>.</p>"
      }
    },
    "SplitType": {
      "base": null,
      "refs": {
        "TransformInput$SplitType": "<p>The method to use to split the transform job's data into smaller batches. The default value is <code>None</code>. If you don't want to split the data, specify (<code>None</code>). If you want to split records on a newline character boundary, specify <code>Line</code>. To split records according to the RecordIO format, specify <code>RecordIO</code>.</p> <p>Amazon SageMaker will send maximum number of records per batch in each request up to the MaxPayloadInMB limit. For more information, see <a href=\"http://mxnet.io/architecture/note_data_loading.html#data-format\">RecordIO data format</a>.</p> <note> <p>For information about the <code>RecordIO</code> format, see <a href=\"http://mxnet.io/architecture/note_data_loading.html#data-format\">Data Format</a>.</p> </note>"
      }
    },
    "StartNotebookInstanceInput": {
      "base": null,
      "refs": {
      }
    },
    "StopHyperParameterTuningJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "StopNotebookInstanceInput": {
      "base": null,
      "refs": {
      }
    },
    "StopTrainingJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "StopTransformJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "StoppingCondition": {
      "base": "<p>Specifies how long model training can run. When model training reaches the limit, Amazon SageMaker ends the training job. Use this API to cap model training cost.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for120 seconds. Algorithms might use this 120-second window to save the model artifacts, so the results of training is not lost. </p> <p>Training algorithms provided by Amazon SageMaker automatically saves the intermediate results of a model training job (it is best effort case, as model might not be ready to save as some stages, for example training just started). This intermediate data is a valid model artifact. You can use it to create a model (<code>CreateModel</code>). </p>",
      "refs": {
        "CreateTrainingJobRequest$StoppingCondition": "<p>Sets a duration for training. Use this parameter to cap model training costs. To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms might use this 120-second window to save the model artifacts. </p> <p>When Amazon SageMaker terminates a job because the stopping condition has been met, training algorithms provided by Amazon SageMaker save the intermediate results of the job. This intermediate data is a valid model artifact. You can use it to create a model using the <code>CreateModel</code> API. </p>",
        "DescribeTrainingJobResponse$StoppingCondition": "<p>The condition under which to stop the training job. </p>",
        "HyperParameterTrainingJobDefinition$StoppingCondition": "<p>Sets a maximum duration for the training jobs that the tuning job launches. Use this parameter to limit model training costs. </p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal. This delays job termination for 120 seconds. Algorithms might use this 120-second window to save the model artifacts.</p> <p>When Amazon SageMaker terminates a job because the stopping condition has been met, training algorithms provided by Amazon SageMaker save the intermediate results of the job.</p>"
      }
    },
    "SubnetId": {
      "base": null,
      "refs": {
        "CreateNotebookInstanceInput$SubnetId": "<p>The ID of the subnet in a VPC to which you would like to have a connectivity from your ML compute instance. </p>",
        "DescribeNotebookInstanceOutput$SubnetId": "<p>The ID of the VPC subnet.</p>",
        "Subnets$member": null
      }
    },
    "Subnets": {
      "base": null,
      "refs": {
        "VpcConfig$Subnets": "<p>The ID of the subnets in the VPC to which you want to connect your training job or model.</p>"
      }
    },
    "Tag": {
      "base": "<p>Describes a tag. </p>",
      "refs": {
        "TagList$member": null
      }
    },
    "TagKey": {
      "base": null,
      "refs": {
        "Tag$Key": "<p>The tag key.</p>",
        "TagKeyList$member": null
      }
    },
    "TagKeyList": {
      "base": null,
      "refs": {
        "DeleteTagsInput$TagKeys": "<p>An array or one or more tag keys to delete.</p>"
      }
    },
    "TagList": {
      "base": null,
      "refs": {
        "AddTagsInput$Tags": "<p>An array of <code>Tag</code> objects. Each tag is a key-value pair. Only the <code>key</code> parameter is required. If you don't specify a value, Amazon SageMaker sets the value to an empty string. </p>",
        "AddTagsOutput$Tags": "<p>A list of tags associated with the Amazon SageMaker resource.</p>",
        "CreateEndpointConfigInput$Tags": "<p>An array of key-value pairs. For more information, see <a href=\"http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. </p>",
        "CreateEndpointInput$Tags": "<p>An array of key-value pairs. For more information, see <a href=\"http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what\">Using Cost Allocation Tags</a>in the <i>AWS Billing and Cost Management User Guide</i>. </p>",
        "CreateHyperParameterTuningJobRequest$Tags": "<p>An array of key-value pairs. You can use tags to categorize your AWS resources in different ways, for example, by purpose, owner, or environment. For more information, see <a href=\"http://docs.aws.amazon.com//awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.</p>",
        "CreateModelInput$Tags": "<p>An array of key-value pairs. For more information, see <a href=\"http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. </p>",
        "CreateNotebookInstanceInput$Tags": "<p>A list of tags to associate with the notebook instance. You can add tags later by using the <code>CreateTags</code> API.</p>",
        "CreateTrainingJobRequest$Tags": "<p>An array of key-value pairs. For more information, see <a href=\"http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. </p>",
        "CreateTransformJobRequest$Tags": "<p>An array of key-value pairs. Adding tags is optional. For more information, see <a href=\"http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.</p>",
        "ListTagsOutput$Tags": "<p>An array of <code>Tag</code> objects, each with a tag key and a value.</p>"
      }
    },
    "TagValue": {
      "base": null,
      "refs": {
        "Tag$Value": "<p>The tag value.</p>"
      }
    },
    "TaskCount": {
      "base": null,
      "refs": {
        "DesiredWeightAndCapacity$DesiredInstanceCount": "<p>The variant's capacity.</p>",
        "ProductionVariant$InitialInstanceCount": "<p>Number of instances to launch initially.</p>",
        "ProductionVariantSummary$CurrentInstanceCount": "<p>The number of instances associated with the variant.</p>",
        "ProductionVariantSummary$DesiredInstanceCount": "<p>The number of instances requested in the <code>UpdateEndpointWeightsAndCapacities</code> request. </p>"
      }
    },
    "Timestamp": {
      "base": null,
      "refs": {
        "DeployedImage$ResolutionTime": "<p>The date and time when the image path for the model resolved to the <code>ResolvedImage</code> </p>",
        "DescribeEndpointConfigOutput$CreationTime": "<p>A timestamp that shows when the endpoint configuration was created.</p>",
        "DescribeEndpointOutput$CreationTime": "<p>A timestamp that shows when the endpoint was created.</p>",
        "DescribeEndpointOutput$LastModifiedTime": "<p>A timestamp that shows when the endpoint was last modified.</p>",
        "DescribeHyperParameterTuningJobResponse$CreationTime": "<p>The date and time that the tuning job started.</p>",
        "DescribeHyperParameterTuningJobResponse$HyperParameterTuningEndTime": "<p>The date and time that the tuning job ended.</p>",
        "DescribeHyperParameterTuningJobResponse$LastModifiedTime": "<p>The date and time that the status of the tuning job was modified. </p>",
        "DescribeModelOutput$CreationTime": "<p>A timestamp that shows when the model was created.</p>",
        "DescribeTrainingJobResponse$CreationTime": "<p>A timestamp that indicates when the training job was created.</p>",
        "DescribeTrainingJobResponse$TrainingStartTime": "<p>Indicates the time when the training job starts on training instances. You are billed for the time interval between this time and the value of <code>TrainingEndTime</code>. The start time in CloudWatch Logs might be later than this time. The difference is due to the time it takes to download the training data and to the size of the training container.</p>",
        "DescribeTrainingJobResponse$TrainingEndTime": "<p>Indicates the time when the training job ends on training instances. You are billed for the time interval between the value of <code>TrainingStartTime</code> and this time. For successful jobs and stopped jobs, this is the time after model artifacts are uploaded. For failed jobs, this is the time when Amazon SageMaker detects a job failure.</p>",
        "DescribeTrainingJobResponse$LastModifiedTime": "<p>A timestamp that indicates when the status of the training job was last modified.</p>",
        "DescribeTransformJobResponse$CreationTime": "<p>A timestamp that shows when the transform Job was created.</p>",
        "DescribeTransformJobResponse$TransformStartTime": "<p>Indicates when the transform job starts on ML instances. You are billed for the time interval between this time and the value of <code>TransformEndTime</code>.</p>",
        "DescribeTransformJobResponse$TransformEndTime": "<p>Indicates when the transform job is <code>Completed</code>, <code>Stopped</code>, or <code>Failed</code>. You are billed for the time interval between this time and the value of <code>TransformStartTime</code>.</p>",
        "EndpointConfigSummary$CreationTime": "<p>A timestamp that shows when the endpoint configuration was created.</p>",
        "EndpointSummary$CreationTime": "<p>A timestamp that shows when the endpoint was created.</p>",
        "EndpointSummary$LastModifiedTime": "<p>A timestamp that shows when the endpoint was last modified.</p>",
        "HyperParameterTrainingJobSummary$CreationTime": "<p>The date and time that the training job was created.</p>",
        "HyperParameterTrainingJobSummary$TrainingStartTime": "<p>The date and time that the training job started.</p>",
        "HyperParameterTrainingJobSummary$TrainingEndTime": "<p>The date and time that the training job ended.</p>",
        "HyperParameterTuningJobSummary$CreationTime": "<p>The date and time that the tuning job was created.</p>",
        "HyperParameterTuningJobSummary$HyperParameterTuningEndTime": "<p>The date and time that the tuning job ended.</p>",
        "HyperParameterTuningJobSummary$LastModifiedTime": "<p>The date and time that the tuning job was modified.</p>",
        "ListEndpointConfigsInput$CreationTimeBefore": "<p>A filter that returns only endpoint configurations created before the specified time (timestamp).</p>",
        "ListEndpointConfigsInput$CreationTimeAfter": "<p>A filter that returns only endpoint configurations created after the specified time (timestamp).</p>",
        "ListEndpointsInput$CreationTimeBefore": "<p>A filter that returns only endpoints that were created before the specified time (timestamp).</p>",
        "ListEndpointsInput$CreationTimeAfter": "<p>A filter that returns only endpoints that were created after the specified time (timestamp).</p>",
        "ListEndpointsInput$LastModifiedTimeBefore": "<p> A filter that returns only endpoints that were modified before the specified timestamp. </p>",
        "ListEndpointsInput$LastModifiedTimeAfter": "<p> A filter that returns only endpoints that were modified after the specified timestamp. </p>",
        "ListHyperParameterTuningJobsRequest$CreationTimeAfter": "<p>A filter that returns only tuning jobs that were created after the specified time.</p>",
        "ListHyperParameterTuningJobsRequest$CreationTimeBefore": "<p>A filter that returns only tuning jobs that were created before the specified time.</p>",
        "ListHyperParameterTuningJobsRequest$LastModifiedTimeAfter": "<p>A filter that returns only tuning jobs that were modified after the specified time.</p>",
        "ListHyperParameterTuningJobsRequest$LastModifiedTimeBefore": "<p>A filter that returns only tuning jobs that were modified before the specified time.</p>",
        "ListModelsInput$CreationTimeBefore": "<p>A filter that returns only models created before the specified time (timestamp).</p>",
        "ListModelsInput$CreationTimeAfter": "<p>A filter that returns only models created after the specified time (timestamp).</p>",
        "ListTrainingJobsRequest$CreationTimeAfter": "<p>A filter that returns only training jobs created after the specified time (timestamp).</p>",
        "ListTrainingJobsRequest$CreationTimeBefore": "<p>A filter that returns only training jobs created before the specified time (timestamp).</p>",
        "ListTrainingJobsRequest$LastModifiedTimeAfter": "<p>A filter that returns only training jobs modified after the specified time (timestamp).</p>",
        "ListTrainingJobsRequest$LastModifiedTimeBefore": "<p>A filter that returns only training jobs modified before the specified time (timestamp).</p>",
        "ListTransformJobsRequest$CreationTimeAfter": "<p>A filter that returns only transform jobs created after the specified time.</p>",
        "ListTransformJobsRequest$CreationTimeBefore": "<p>A filter that returns only transform jobs created before the specified time.</p>",
        "ListTransformJobsRequest$LastModifiedTimeAfter": "<p>A filter that returns only transform jobs modified after the specified time.</p>",
        "ListTransformJobsRequest$LastModifiedTimeBefore": "<p>A filter that returns only transform jobs modified before the specified time.</p>",
        "ModelSummary$CreationTime": "<p>A timestamp that indicates when the model was created.</p>",
        "TrainingJobSummary$CreationTime": "<p>A timestamp that shows when the training job was created.</p>",
        "TrainingJobSummary$TrainingEndTime": "<p>A timestamp that shows when the training job ended. This field is set only if the training job has one of the terminal statuses (<code>Completed</code>, <code>Failed</code>, or <code>Stopped</code>). </p>",
        "TrainingJobSummary$LastModifiedTime": "<p> Timestamp when the training job was last modified. </p>",
        "TransformJobSummary$CreationTime": "<p>A timestamp that shows when the transform Job was created.</p>",
        "TransformJobSummary$TransformEndTime": "<p>Indicates when the transform job ends on compute instances. For successful jobs and stopped jobs, this is the exact time recorded after the results are uploaded. For failed jobs, this is when Amazon SageMaker detected that the job failed.</p>",
        "TransformJobSummary$LastModifiedTime": "<p>Indicates when the transform job was last modified.</p>"
      }
    },
    "TrainingInputMode": {
      "base": null,
      "refs": {
        "AlgorithmSpecification$TrainingInputMode": "<p>The input mode that the algorithm supports. For the input modes that Amazon SageMaker algorithms support, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\">Algorithms</a>. If an algorithm supports the <code>File</code> input mode, Amazon SageMaker downloads the training data from S3 to the provisioned ML storage Volume, and mounts the directory to docker volume for training container. If an algorithm supports the <code>Pipe</code> input mode, Amazon SageMaker streams data directly from S3 to the container. </p> <p> In File mode, make sure you provision ML storage volume with sufficient capacity to accommodate the data download from S3. In addition to the training data, the ML storage volume also stores the output model. The algorithm container use ML storage volume to also store intermediate information, if any. </p> <p> For distributed algorithms using File mode, training data is distributed uniformly, and your training duration is predictable if the input data objects size is approximately same. Amazon SageMaker does not split the files any further for model training. If the object sizes are skewed, training won't be optimal as the data distribution is also skewed where one host in a training cluster is overloaded, thus becoming bottleneck in training. </p>",
        "HyperParameterAlgorithmSpecification$TrainingInputMode": "<p>The input mode that the algorithm supports: File or Pipe. In File input mode, Amazon SageMaker downloads the training data from Amazon S3 to the storage volume that is attached to the training instance and mounts the directory to the Docker volume for the training container. In Pipe input mode, Amazon SageMaker streams data directly from Amazon S3 to the container. </p> <p>If you specify File mode, make sure that you provision the storage volume that is attached to the training instance with enough capacity to accommodate the training data downloaded from Amazon S3, the model artifacts, and intermediate information.</p> <p/> <p>For more information about input modes, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\">Algorithms</a>. </p>"
      }
    },
    "TrainingInstanceCount": {
      "base": null,
      "refs": {
        "ResourceConfig$InstanceCount": "<p>The number of ML compute instances to use. For distributed training, provide a value greater than 1. </p>"
      }
    },
    "TrainingInstanceType": {
      "base": null,
      "refs": {
        "ResourceConfig$InstanceType": "<p>The ML compute instance type. </p>"
      }
    },
    "TrainingJobArn": {
      "base": null,
      "refs": {
        "CreateTrainingJobResponse$TrainingJobArn": "<p>The Amazon Resource Name (ARN) of the training job.</p>",
        "DescribeTrainingJobResponse$TrainingJobArn": "<p>The Amazon Resource Name (ARN) of the training job.</p>",
        "HyperParameterTrainingJobSummary$TrainingJobArn": "<p>The Amazon Resource Name (ARN) of the training job.</p>",
        "TrainingJobSummary$TrainingJobArn": "<p>The Amazon Resource Name (ARN) of the training job.</p>"
      }
    },
    "TrainingJobName": {
      "base": null,
      "refs": {
        "CreateTrainingJobRequest$TrainingJobName": "<p>The name of the training job. The name must be unique within an AWS Region in an AWS account. </p>",
        "DescribeTrainingJobRequest$TrainingJobName": "<p>The name of the training job.</p>",
        "DescribeTrainingJobResponse$TrainingJobName": "<p> Name of the model training job. </p>",
        "HyperParameterTrainingJobSummary$TrainingJobName": "<p>The name of the training job.</p>",
        "StopTrainingJobRequest$TrainingJobName": "<p>The name of the training job to stop.</p>",
        "TrainingJobSummary$TrainingJobName": "<p>The name of the training job that you want a summary for.</p>"
      }
    },
    "TrainingJobSortByOptions": {
      "base": null,
      "refs": {
        "ListTrainingJobsForHyperParameterTuningJobRequest$SortBy": "<p>The field to sort results by. The default is <code>Name</code>.</p> <p>If the value of this field is <code>FinalObjectiveMetricValue</code>, any training jobs that did not return an objective metric are not listed.</p>"
      }
    },
    "TrainingJobStatus": {
      "base": null,
      "refs": {
        "DescribeTrainingJobResponse$TrainingJobStatus": "<p>The status of the training job. </p> <p>For the <code>InProgress</code> status, Amazon SageMaker can return these secondary statuses:</p> <ul> <li> <p>Starting - Preparing for training.</p> </li> <li> <p>Downloading - Optional stage for algorithms that support File training input mode. It indicates data is being downloaded to ML storage volumes.</p> </li> <li> <p>Training - Training is in progress.</p> </li> <li> <p>Uploading - Training is complete and model upload is in progress.</p> </li> </ul> <p>For the <code>Stopped</code> training status, Amazon SageMaker can return these secondary statuses:</p> <ul> <li> <p>MaxRuntimeExceeded - Job stopped as a result of maximum allowed runtime exceeded.</p> </li> </ul>",
        "HyperParameterTrainingJobSummary$TrainingJobStatus": "<p>The status of the training job.</p>",
        "ListTrainingJobsForHyperParameterTuningJobRequest$StatusEquals": "<p>A filter that returns only training jobs with the specified status.</p>",
        "ListTrainingJobsRequest$StatusEquals": "<p>A filter that retrieves only training jobs with a specific status.</p>",
        "TrainingJobSummary$TrainingJobStatus": "<p>The status of the training job.</p>"
      }
    },
    "TrainingJobStatusCounter": {
      "base": null,
      "refs": {
        "TrainingJobStatusCounters$Completed": "<p>The number of completed training jobs launched by a hyperparameter tuning job.</p>",
        "TrainingJobStatusCounters$InProgress": "<p>The number of in-progress training jobs launched by a hyperparameter tuning job.</p>",
        "TrainingJobStatusCounters$RetryableError": "<p>The number of training jobs that failed, but can be retried. A failed training job can be retried only if it failed because an internal service error occurred.</p>",
        "TrainingJobStatusCounters$NonRetryableError": "<p>The number of training jobs that failed and can't be retried. A failed training job can't be retried if it failed because a client error occurred.</p>",
        "TrainingJobStatusCounters$Stopped": "<p>The number of training jobs launched by a hyperparameter tuning job that were manually stopped.</p>"
      }
    },
    "TrainingJobStatusCounters": {
      "base": "<p>The numbers of training jobs launched by a hyperparameter tuning job, categorized by status.</p>",
      "refs": {
        "DescribeHyperParameterTuningJobResponse$TrainingJobStatusCounters": "<p>The <a>TrainingJobStatusCounters</a> object that specifies the number of training jobs, categorized by status, that this tuning job launched.</p>",
        "HyperParameterTuningJobSummary$TrainingJobStatusCounters": "<p>The <a>TrainingJobStatusCounters</a> object that specifies the numbers of training jobs, categorized by status, that this tuning job launched.</p>"
      }
    },
    "TrainingJobSummaries": {
      "base": null,
      "refs": {
        "ListTrainingJobsResponse$TrainingJobSummaries": "<p>An array of <code>TrainingJobSummary</code> objects, each listing a training job.</p>"
      }
    },
    "TrainingJobSummary": {
      "base": "<p>Provides summary information about a training job.</p>",
      "refs": {
        "TrainingJobSummaries$member": null
      }
    },
    "TransformDataSource": {
      "base": "<p>Describes the location of the channel data.</p>",
      "refs": {
        "TransformInput$DataSource": "<p>Describes the location of the channel data, meaning the S3 location of the input data that the model can consume.</p>"
      }
    },
    "TransformEnvironmentKey": {
      "base": null,
      "refs": {
        "TransformEnvironmentMap$key": null
      }
    },
    "TransformEnvironmentMap": {
      "base": null,
      "refs": {
        "CreateTransformJobRequest$Environment": "<p>The environment variables to set in the Docker container. We support up to 16 key and values entries in the map.</p>",
        "DescribeTransformJobResponse$Environment": "<p/>"
      }
    },
    "TransformEnvironmentValue": {
      "base": null,
      "refs": {
        "TransformEnvironmentMap$value": null
      }
    },
    "TransformInput": {
      "base": "<p>Describes the input source of a transform job and the way the transform job consumes it.</p>",
      "refs": {
        "CreateTransformJobRequest$TransformInput": "<p>Describes the input source and the way the transform job consumes it.</p>",
        "DescribeTransformJobResponse$TransformInput": "<p>Describes the dataset to be transformed and the Amazon S3 location where it is stored.</p>"
      }
    },
    "TransformInstanceCount": {
      "base": null,
      "refs": {
        "TransformResources$InstanceCount": "<p>The number of ML compute instances to use in the transform job. For distributed transform, provide a value greater than 1. The default value is <code>1</code>.</p>"
      }
    },
    "TransformInstanceType": {
      "base": null,
      "refs": {
        "TransformResources$InstanceType": "<p>The ML compute instance type for the transform job. For using built-in algorithms to transform moderately sized datasets, ml.m4.xlarge or <code>ml.m5.large</code> should suffice. There is no default value for <code>InstanceType</code>.</p>"
      }
    },
    "TransformJobArn": {
      "base": null,
      "refs": {
        "CreateTransformJobResponse$TransformJobArn": "<p>The Amazon Resource Name (ARN) of the transform job.</p>",
        "DescribeTransformJobResponse$TransformJobArn": "<p>The Amazon Resource Name (ARN) of the transform job.</p>",
        "TransformJobSummary$TransformJobArn": "<p>The Amazon Resource Name (ARN) of the transform job.</p>"
      }
    },
    "TransformJobName": {
      "base": null,
      "refs": {
        "CreateTransformJobRequest$TransformJobName": "<p>The name of the transform job. The name must be unique within an AWS Region in an AWS account. </p>",
        "DescribeTransformJobRequest$TransformJobName": "<p>The name of the transform job that you want to view details of.</p>",
        "DescribeTransformJobResponse$TransformJobName": "<p>The name of the transform job.</p>",
        "StopTransformJobRequest$TransformJobName": "<p>The name of the transform job to stop.</p>",
        "TransformJobSummary$TransformJobName": "<p>The name of the transform job.</p>"
      }
    },
    "TransformJobStatus": {
      "base": null,
      "refs": {
        "DescribeTransformJobResponse$TransformJobStatus": "<p>The status of the transform job. If the transform job failed, the reason is returned in the <code>FailureReason</code> field.</p>",
        "ListTransformJobsRequest$StatusEquals": "<p>A filter that retrieves only transform jobs with a specific status.</p>",
        "TransformJobSummary$TransformJobStatus": "<p>The status of the transform job.</p>"
      }
    },
    "TransformJobSummaries": {
      "base": null,
      "refs": {
        "ListTransformJobsResponse$TransformJobSummaries": "<p>An array of <code>TransformJobSummary</code> objects.</p>"
      }
    },
    "TransformJobSummary": {
      "base": "<p>Provides a summary information for a transform job. Multiple TransformJobSummary objects are returned as a list after calling <a>ListTransformJobs</a>.</p>",
      "refs": {
        "TransformJobSummaries$member": null
      }
    },
    "TransformOutput": {
      "base": "<p>Describes the results of a transform job output.</p>",
      "refs": {
        "CreateTransformJobRequest$TransformOutput": "<p>Describes the results of the transform job.</p>",
        "DescribeTransformJobResponse$TransformOutput": "<p>Identifies the Amazon S3 location where you want Amazon SageMaker to save the results from the transform job.</p>"
      }
    },
    "TransformResources": {
      "base": "<p>Describes the resources, including ML instance types and ML instance count, to use for transform job.</p>",
      "refs": {
        "CreateTransformJobRequest$TransformResources": "<p>Describes the resources, including ML instance types and ML instance count, to use for the transform job.</p>",
        "DescribeTransformJobResponse$TransformResources": "<p>Describes the resources, including ML instance types and ML instance count, to use for the transform job.</p>"
      }
    },
    "TransformS3DataSource": {
      "base": "<p>Describes the S3 data source.</p>",
      "refs": {
        "TransformDataSource$S3DataSource": "<p>The S3 location of the data source that is associated with a channel.</p>"
      }
    },
    "UpdateEndpointInput": {
      "base": null,
      "refs": {
      }
    },
    "UpdateEndpointOutput": {
      "base": null,
      "refs": {
      }
    },
    "UpdateEndpointWeightsAndCapacitiesInput": {
      "base": null,
      "refs": {
      }
    },
    "UpdateEndpointWeightsAndCapacitiesOutput": {
      "base": null,
      "refs": {
      }
    },
    "UpdateNotebookInstanceInput": {
      "base": null,
      "refs": {
      }
    },
    "UpdateNotebookInstanceLifecycleConfigInput": {
      "base": null,
      "refs": {
      }
    },
    "UpdateNotebookInstanceLifecycleConfigOutput": {
      "base": null,
      "refs": {
      }
    },
    "UpdateNotebookInstanceOutput": {
      "base": null,
      "refs": {
      }
    },
    "Url": {
      "base": null,
      "refs": {
        "ContainerDefinition$ModelDataUrl": "<p>The S3 path where the model artifacts, which result from model training, are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix). </p> <p>If you provide a value for this parameter, Amazon SageMaker uses AWS Security Token Service to download model artifacts from the S3 path you provide. AWS STS is activated in your IAM user account by default. If you previously deactivated AWS STS for a region, you need to reactivate AWS STS for that region. For more information, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html\">Activating and Deactivating AWS STS i an AWS Region</a> in the <i>AWS Identity and Access Management User Guide</i>.</p>"
      }
    },
    "VariantName": {
      "base": null,
      "refs": {
        "DesiredWeightAndCapacity$VariantName": "<p>The name of the variant to update.</p>",
        "ProductionVariant$VariantName": "<p>The name of the production variant.</p>",
        "ProductionVariantSummary$VariantName": "<p>The name of the variant.</p>"
      }
    },
    "VariantWeight": {
      "base": null,
      "refs": {
        "DesiredWeightAndCapacity$DesiredWeight": "<p>The variant's weight.</p>",
        "ProductionVariant$InitialVariantWeight": "<p>Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. The traffic to a production variant is determined by the ratio of the <code>VariantWeight</code> to the sum of all <code>VariantWeight</code> values across all ProductionVariants. If unspecified, it defaults to 1.0. </p>",
        "ProductionVariantSummary$CurrentWeight": "<p>The weight associated with the variant.</p>",
        "ProductionVariantSummary$DesiredWeight": "<p>The requested weight, as specified in the <code>UpdateEndpointWeightsAndCapacities</code> request. </p>"
      }
    },
    "VolumeSizeInGB": {
      "base": null,
      "refs": {
        "ResourceConfig$VolumeSizeInGB": "<p>The size of the ML storage volume that you want to provision. </p> <p>ML storage volumes store model artifacts and incremental states. Training algorithms might also use the ML storage volume for scratch space. If you want to store the training data in the ML storage volume, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. </p> <p>You must specify sufficient ML storage for your scenario. </p> <note> <p> Amazon SageMaker supports only the General Purpose SSD (gp2) ML storage volume type. </p> </note>"
      }
    },
    "VpcConfig": {
      "base": "<p>Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see <a>host-vpc</a> and <a>train-vpc</a>.</p>",
      "refs": {
        "CreateModelInput$VpcConfig": "<p>A <a>VpcConfig</a> object that specifies the VPC that you want your model to connect to. Control access to and from your model container by configuring the VPC. For more information, see <a>host-vpc</a>.</p>",
        "CreateTrainingJobRequest$VpcConfig": "<p>A <a>VpcConfig</a> object that specifies the VPC that you want your training job to connect to. Control access to and from your training container by configuring the VPC. For more information, see <a>train-vpc</a> </p>",
        "DescribeModelOutput$VpcConfig": "<p>A <a>VpcConfig</a> object that specifies the VPC that this model has access to. For more information, see <a>host-vpc</a> </p>",
        "DescribeTrainingJobResponse$VpcConfig": "<p>A <a>VpcConfig</a> object that specifies the VPC that this training job has access to. For more information, see <a>train-vpc</a>.</p>",
        "HyperParameterTrainingJobDefinition$VpcConfig": "<p>The <a>VpcConfig</a> object that specifies the VPC that you want the training jobs that this hyperparameter tuning job launches to connect to. Control access to and from your training container by configuring the VPC. For more information, see <a>train-vpc</a>.</p>"
      }
    },
    "VpcSecurityGroupIds": {
      "base": null,
      "refs": {
        "VpcConfig$SecurityGroupIds": "<p>The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the <code>Subnets</code> field.</p>"
      }
    }
  }
}
