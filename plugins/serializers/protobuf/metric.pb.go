// Code generated by protoc-gen-go. DO NOT EDIT.
// source: metric.proto

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	metric.proto

It has these top-level messages:
	FieldValue
	Metric
*/
package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FieldValue struct {
	// Types that are valid to be assigned to Value:
	//	*FieldValue_StringValue
	//	*FieldValue_FloatValue
	//	*FieldValue_IntValue
	//	*FieldValue_BoolValue
	Value isFieldValue_Value `protobuf_oneof:"value"`
}

func (m *FieldValue) Reset()                    { *m = FieldValue{} }
func (m *FieldValue) String() string            { return proto.CompactTextString(m) }
func (*FieldValue) ProtoMessage()               {}
func (*FieldValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isFieldValue_Value interface {
	isFieldValue_Value()
}

type FieldValue_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,oneof"`
}
type FieldValue_FloatValue struct {
	FloatValue float64 `protobuf:"fixed64,2,opt,name=float_value,json=floatValue,oneof"`
}
type FieldValue_IntValue struct {
	IntValue int64 `protobuf:"varint,3,opt,name=int_value,json=intValue,oneof"`
}
type FieldValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,4,opt,name=bool_value,json=boolValue,oneof"`
}

func (*FieldValue_StringValue) isFieldValue_Value() {}
func (*FieldValue_FloatValue) isFieldValue_Value()  {}
func (*FieldValue_IntValue) isFieldValue_Value()    {}
func (*FieldValue_BoolValue) isFieldValue_Value()   {}

func (m *FieldValue) GetValue() isFieldValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *FieldValue) GetStringValue() string {
	if x, ok := m.GetValue().(*FieldValue_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *FieldValue) GetFloatValue() float64 {
	if x, ok := m.GetValue().(*FieldValue_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (m *FieldValue) GetIntValue() int64 {
	if x, ok := m.GetValue().(*FieldValue_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (m *FieldValue) GetBoolValue() bool {
	if x, ok := m.GetValue().(*FieldValue_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FieldValue) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FieldValue_OneofMarshaler, _FieldValue_OneofUnmarshaler, _FieldValue_OneofSizer, []interface{}{
		(*FieldValue_StringValue)(nil),
		(*FieldValue_FloatValue)(nil),
		(*FieldValue_IntValue)(nil),
		(*FieldValue_BoolValue)(nil),
	}
}

func _FieldValue_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FieldValue)
	// value
	switch x := m.Value.(type) {
	case *FieldValue_StringValue:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.StringValue)
	case *FieldValue_FloatValue:
		b.EncodeVarint(2<<3 | proto.WireFixed64)
		b.EncodeFixed64(math.Float64bits(x.FloatValue))
	case *FieldValue_IntValue:
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.IntValue))
	case *FieldValue_BoolValue:
		t := uint64(0)
		if x.BoolValue {
			t = 1
		}
		b.EncodeVarint(4<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("FieldValue.Value has unexpected type %T", x)
	}
	return nil
}

func _FieldValue_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FieldValue)
	switch tag {
	case 1: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Value = &FieldValue_StringValue{x}
		return true, err
	case 2: // value.float_value
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.Value = &FieldValue_FloatValue{math.Float64frombits(x)}
		return true, err
	case 3: // value.int_value
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &FieldValue_IntValue{int64(x)}
		return true, err
	case 4: // value.bool_value
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &FieldValue_BoolValue{x != 0}
		return true, err
	default:
		return false, nil
	}
}

func _FieldValue_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FieldValue)
	// value
	switch x := m.Value.(type) {
	case *FieldValue_StringValue:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.StringValue)))
		n += len(x.StringValue)
	case *FieldValue_FloatValue:
		n += proto.SizeVarint(2<<3 | proto.WireFixed64)
		n += 8
	case *FieldValue_IntValue:
		n += proto.SizeVarint(3<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.IntValue))
	case *FieldValue_BoolValue:
		n += proto.SizeVarint(4<<3 | proto.WireVarint)
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Metric struct {
	Name      string                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Tags      map[string]string      `protobuf:"bytes,2,rep,name=tags" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Fields    map[string]*FieldValue `protobuf:"bytes,3,rep,name=fields" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp int64                  `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *Metric) Reset()                    { *m = Metric{} }
func (m *Metric) String() string            { return proto.CompactTextString(m) }
func (*Metric) ProtoMessage()               {}
func (*Metric) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Metric) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Metric) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Metric) GetFields() map[string]*FieldValue {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *Metric) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*FieldValue)(nil), "protobuf.field_value")
	proto.RegisterType((*Metric)(nil), "protobuf.metric")
}

func init() { proto.RegisterFile("metric.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x5f, 0x4b, 0xc3, 0x30,
	0x14, 0xc5, 0x9b, 0x66, 0xce, 0xe6, 0x66, 0x0f, 0x12, 0x14, 0x4a, 0x99, 0x58, 0xe7, 0x4b, 0x41,
	0xe8, 0xc3, 0x14, 0x14, 0x1f, 0x05, 0xa5, 0x8f, 0x12, 0xc4, 0x57, 0x49, 0xb5, 0x2d, 0xc1, 0xfe,
	0x19, 0x6d, 0x26, 0xec, 0xcb, 0xf8, 0x05, 0xfc, 0x92, 0xb2, 0x9b, 0xcc, 0x15, 0xf4, 0xa9, 0xc9,
	0x3d, 0xbf, 0xd3, 0x7b, 0x4e, 0x0b, 0xb3, 0xa6, 0x30, 0xbd, 0x7e, 0x4b, 0x57, 0x7d, 0x67, 0x3a,
	0x11, 0xe0, 0x23, 0x5f, 0x97, 0x8b, 0x2f, 0x02, 0xbc, 0xd4, 0x45, 0xfd, 0xfe, 0xfa, 0xa9, 0xea,
	0x75, 0x21, 0x2e, 0x60, 0x36, 0x98, 0x5e, 0xb7, 0x95, 0xbd, 0x87, 0x24, 0x26, 0x09, 0xcb, 0x3c,
	0xc9, 0xed, 0xf4, 0x05, 0xa1, 0x73, 0xe0, 0x65, 0xdd, 0x29, 0xe3, 0x18, 0x3f, 0x26, 0x09, 0xc9,
	0x3c, 0x09, 0x38, 0xb4, 0xc8, 0x29, 0x30, 0xdd, 0xee, 0x00, 0x1a, 0x93, 0x84, 0x66, 0x9e, 0x0c,
	0x74, 0xeb, 0xe4, 0x33, 0x80, 0xbc, 0xeb, 0x6a, 0xa7, 0x4f, 0x62, 0x92, 0x04, 0x99, 0x27, 0xd9,
	0x76, 0x86, 0xc0, 0xfd, 0x21, 0x1c, 0xa0, 0xb6, 0xf8, 0xf6, 0x61, 0x6a, 0xb3, 0x0b, 0x01, 0x93,
	0x56, 0x35, 0x2e, 0x93, 0xc4, 0xb3, 0x48, 0x61, 0x62, 0x54, 0x35, 0x84, 0x7e, 0x4c, 0x13, 0xbe,
	0x8c, 0xd2, 0x5d, 0xb1, 0xd4, 0xf5, 0x7d, 0x56, 0xd5, 0xf0, 0xd0, 0x9a, 0x7e, 0x23, 0x91, 0x13,
	0xd7, 0x30, 0xc5, 0xba, 0x43, 0x48, 0xd1, 0x31, 0xff, 0xe3, 0x78, 0x44, 0xd9, 0x7a, 0x1c, 0x2b,
	0xe6, 0xc0, 0x8c, 0x6e, 0x8a, 0xc1, 0xa8, 0x66, 0x85, 0x69, 0xa9, 0xdc, 0x0f, 0xa2, 0x1b, 0x60,
	0xbf, 0x6b, 0xc4, 0x11, 0xd0, 0x8f, 0x62, 0xe3, 0x32, 0x6e, 0x8f, 0xe2, 0xd8, 0x55, 0xc1, 0xef,
	0xc4, 0xa4, 0xbd, 0xdc, 0xf9, 0xb7, 0x24, 0x7a, 0x02, 0x3e, 0xda, 0xf6, 0x8f, 0xf5, 0x72, 0x6c,
	0xe5, 0xcb, 0x93, 0x7d, 0xd8, 0xd1, 0x3f, 0x1b, 0xbd, 0x31, 0x9f, 0x22, 0x70, 0xf5, 0x13, 0x00,
	0x00, 0xff, 0xff, 0x29, 0xfb, 0x14, 0x9d, 0xef, 0x01, 0x00, 0x00,
}
