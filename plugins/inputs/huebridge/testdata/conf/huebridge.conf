  ## The Hue bridges to query, each identified via an URL of the following form:
  ## <locator scheme>://<bridge id>:<user name>@<locator dependent address>/
  ## where:
  ## <locator scheme> is one of
  ##   address: To identify the bridge via the DNS name or ip address within the URLs address part (see example below).
  ##   cloud: To identify the bridge via its cloud registration. The address part defines the discovery endpoint. If empty the standard endpoint https://discovery.meethue.com/ is used.
  ##   mdns: To identify the bridge via mDNS. The URL's address part is always empty in this case.
  ##   remote: To identify the bridge via the Cloud Remote API. The address part defines the cloud API endpoint. If empty the standard endpoint https://api.meethue.com/ is used.
  ## <bridge id> is the unique bridge id as returned in
  ##   curl -k https://<bridge address>/api/config/0
  ## <user name> is the secret user name returned during application authentication. To create a new user name issue the following command after pressing the bridge's link button:
  ##   curl -k -X POST http://<bridge address>/api -H 'Content-Type: application/json' -d '{"devicetype":"huebridge-telegraf-plugin"}'
  ## Examples:
  ##   "address://0123456789ABCDEF:sFlEGnMAFXO6RtZV17aViNUB95G2uXWw64texDzD@mybridge.mydomain/"
  ##   "cloud://0123456789ABCDEF:sFlEGnMAFXO6RtZV17aViNUB95G2uXWw64texDzD@/"
  ##   "mdns://0123456789ABCDEF:sFlEGnMAFXO6RtZV17aViNUB95G2uXWw64texDzD@/"
  ##   "remote://0123456789ABCDEF:sFlEGnMAFXO6RtZV17aViNUB95G2uXWw64texDzD@/"
  bridges = [
    "address://0123456789ABCDEF:sFlEGnMAFXO6RtZV17aViNUB95G2uXWw64texDzD@mybridgenameorip/",
    "cloud://0123456789ABCDEF:sFlEGnMAFXO6RtZV17aViNUB95G2uXWw64texDzD@discovery.meethue.com/",
    "mdns://0123456789ABCDEF:sFlEGnMAFXO6RtZV17aViNUB95G2uXWw64texDzD@/",
    "remote://0123456789ABCDEF:sFlEGnMAFXO6RtZV17aViNUB95G2uXWw64texDzD@api.meethue.com/",
  ]
  
  ## The remote parameters to use to access a bridge remotely.
  ## To access a bridge remotely a Hue Developer Account is required, a Remote
  ## App must be registered and the corresponding Authorization flow must be
  ## completed. See https://developers.meethue.com/develop/hue-api-v2/cloud2cloud-getting-started/
  ## for further details.
  ## The Remote App's client id, client secret and callback url must be entered
  ## here exactly as used within the App registration.
  ## The remote_token_dir points to the directory receiving the token data.
  remote_client_id = "client"
  remote_client_secret = "secret"
  remote_callback_url = "url"
  remote_token_dir = "dir"
  
  ## Manual device to room assignments to consider during status evaluation.
  ## In case a device cannot be assigned to a room (e.g. a motion sensor), this table allows manual assignment.
  ## Each entry consists of two names. First is the name of the device and 2nd is the name of the room, the device is assigned to.
  ## Example:
  ##   [ ["Device 1", "Room A"] ]
  room_assignments = [
    [ "Device 1", "Room A" ],
    [ "Device 2", "Room B" ],
  ]
  
  ## The http timeout to use (in seconds).
  timeout = "1m"
  
  ## Optional TLS Config
  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"
  tls_key_pwd = "secret"
  ## Use TLS but skip chain & host verification
  insecure_skip_verify = true