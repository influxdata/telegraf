//  The MIT License (MIT)
//
//  Copyright (c) 2014 Christopher Gilbert
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.

//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.

syntax = "proto2";
package riemanngoproto;
option go_package = ".;riemanngoproto";

message State {
  optional int64 time = 1;
  optional string state = 2;
  optional string service = 3;
  optional string host = 4;
  optional string description = 5;
  optional bool once = 6;
  repeated string tags = 7;
  optional float ttl = 8;
}

message Event {
  optional int64 time = 1;
  optional string state = 2;
  optional string service = 3;
  optional string host = 4;
  optional string description = 5;
  repeated string tags = 7;
  optional float ttl = 8;
  repeated Attribute attributes = 9;
  optional int64 time_micros = 10;
  optional sint64 metric_sint64 = 13;
  optional double metric_d = 14;
  optional float metric_f = 15;
}

message Query {
  optional string string = 1;
}

message Msg {
  optional bool ok = 2;
  optional string error = 3;
  repeated State states = 4;
  optional Query query = 5;
  repeated Event events = 6;
}

message Attribute {
  required string key = 1;
  optional string value = 2;
}
