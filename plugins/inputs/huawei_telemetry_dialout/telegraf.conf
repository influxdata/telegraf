# Telegraf 全局配置
# 更新于 2025-10-17
[agent]
  ## 收集间隔
  interval = "10s"
  ## 轮询超时
  round_interval = true
  ## 指标发送间隔
  metric_batch_size = 1000
  ## 缓冲区大小
  metric_buffer_limit = 10000
  ## 收集器名称
  hostname = ""
  ## 如果为 true，则不设置主机标签
  omit_hostname = false


# 华为 Telemetry Dialin 模式 - 主动订阅设备数据
#[[inputs.huawei_telemetry_dialin]]
  # 可配置多个 router
#  [[inputs.huawei_telemetry_dialin.routers]]
#    address = "xxxxx:20000"    # 改为设备地址
#    sample_interval = 1000           # 毫秒
#    encoding = "gpb"                 # "gpb" 或 "json"
#    suppress_redundant = true
#    request_id = 1024

#    [inputs.huawei_telemetry_dialin.routers.aaa]
#      username = "ceshiyonghu"
#      password = "xxxxx"

#    [[inputs.huawei_telemetry_dialin.routers.Paths]]
#      depth = 1
#      path = 'huawei-ifm:ifm/interfaces/interface[ifName="100GE1/0/1"]/ifStatistics'
#     path = 'huawei-ifm:ifm/interfaces/interface/ifStatistics'

#    [[inputs.huawei_telemetry_dialin.routers.Paths]]
#      depth = 1
#      path = "huawei-devm:devm/cpuInfos/cpuInfo"
#
#    [[inputs.huawei_telemetry_dialin.routers.Paths]]
#      depth = 1
#      path = "huawei-devm:devm/memoryInfos/memoryInfo"
#
# 华为 Telemetry Dialout 模式 - 被动接收设备推送
[[inputs.huawei_telemetry_dialout]]
  ## 监听地址和端口
  service_address = "0.0.0.0:57000"
  ## 传输协议
  transport = "grpc"
  ## 最大消息大小(字节)
#  max_msg_size = 4194304

  # 将接口统计的字符串计数转换为数值，便于 Prometheus 正确导出为指标
[[processors.converter]]
  namepass = ["huawei-ifm:ifm/interfaces/interface/ifStatistics"]

  [processors.converter.fields]
    integer = [
      "interfaces.interface.0.ifStatistics.receiveByte",
      "interfaces.interface.0.ifStatistics.receivePacket",
      "interfaces.interface.0.ifStatistics.rcvUniPacket",
      "interfaces.interface.0.ifStatistics.rcvMutiPacket",
      "interfaces.interface.0.ifStatistics.rcvBroadPacket",
      "interfaces.interface.0.ifStatistics.rcvErrorPacket",
      "interfaces.interface.0.ifStatistics.sendByte",
      "interfaces.interface.0.ifStatistics.sendPacket",
      "interfaces.interface.0.ifStatistics.sendUniPacket",
      "interfaces.interface.0.ifStatistics.sendMutiPacket",
      "interfaces.interface.0.ifStatistics.sendBroadPacket",
      "interfaces.interface.0.ifStatistics.sendDropPacket",
      "interfaces.interface.0.ifStatistics.sendErrorPacket",
      "interfaces.interface.0.ifStatistics.in_realtime_bit_rate",
      "interfaces.interface.0.ifStatistics.out_realtime_bit_rate"
    ]

# 处理器 - 字段过滤和字段转标签
[[processors.metric_match]]
  namepass = ["huawei-ifm:ifm/interfaces/interface/ifStatistics"]
  ## 过滤方式: "include" 或 "exclude"
  
  [processors.metric_match.approach]
  approach = "include"

  ## 字段转标签规则
  [processors.metric_match.tag]
  # 将这些字段转换为标签
  "huawei-ifm:ifm/interfaces/interface/ifStatistics" = ["node_id_str"]
#  "huawei-ifm:ifm/interfaces/interface/ifStatistics" = ["interfaces.interface.0.ifName", "interfaces.interface.0.ifMainIfDescr"]
  ## 字段过滤规则
  [processors.metric_match.field_filter]
  # 只保留这些字段
  "huawei-ifm:ifm/interfaces/interface/ifStatistics" = [
    "receiveByte",
    "receivePacket",
    "rcvUniPacket",
    "rcvMutiPacket",
    "rcvBroadPacket",
    "rcvErrorPacket",
    "sendByte",
    "sendPacket",
    "sendUniPacket",
    "sendMutiPacket",
    "sendBroadPacket",
    "sendDropPacket",
    "sendErrorPacket",
    "in_realtime_bit_rate",
    "out_realtime_bit_rate",

  ]

#  "huawei-ifm:ifm/interfaces/interface/ifStatistics" = [
#    "interfaces.interface.0.ifStatistics.receiveByte",
#    "interfaces.interface.0.ifStatistics.receivePacket",
#    "interfaces.interface.0.ifStatistics.rcvUniPacket",
#    "interfaces.interface.0.ifStatistics.rcvMutiPacket",
#    "interfaces.interface.0.ifStatistics.rcvBroadPacket",
#    "interfaces.interface.0.ifStatistics.rcvErrorPacket",
#    "interfaces.interface.0.ifStatistics.sendByte",
#    "interfaces.interface.0.ifStatistics.sendPacket",
#    "interfaces.interface.0.ifStatistics.sendUniPacket",
#    "interfaces.interface.0.ifStatistics.sendMutiPacket",
#    "interfaces.interface.0.ifStatistics.sendBroadPacket",
#    "interfaces.interface.0.ifStatistics.sendDropPacket",
#    "interfaces.interface.0.ifStatistics.sendErrorPacket",
#    "interfaces.interface.0.ifStatistics.in_realtime_bit_rate",
#    "interfaces.interface.0.ifStatistics.out_realtime_bit_rate"
#  ]

[[processors.metric_match]]
  namepass = ["huawei-devm:devm/cpuInfos/cpuInfo"]

 [processors.metric_match.approach]
  approach = "include"

  # 将位置与实体索引当作标签（Prometheus 显示为 labels）
  [processors.metric_match.tag]
  "huawei-devm:devm/cpuInfos/cpuInfo" = ["node_id_str"]

  # 仅保留这些数值字段（按字段名后缀匹配）
  [processors.metric_match.field_filter]
  "huawei-devm:devm/cpuInfos/cpuInfo" = [
    "systemCpuUsage"
  ]

[[processors.metric_match]]
  namepass = ["huawei-devm:devm/memoryInfos/memoryInfo"]

  [processors.metric_match.approach]
  approach = "include"

  [processors.metric_match.tag]
  "huawei-devm:devm/memoryInfos/memoryInfo" = ["node_id_str"]

  [processors.metric_match.field_filter]
  "huawei-devm:devm/memoryInfos/memoryInfo" = [
    "osMemoryTotal",
    "osMemoryFree",
    "osMemoryUsage"
  ]

# 丢弃头部字段，避免 *_current_period 指标导出
[[processors.filter]]
  namepass = [
    "huawei-ifm:ifm/interfaces/interface/ifStatistics",
    "huawei-devm:devm/cpuInfos/cpuInfo",
    "huawei-devm:devm/memoryInfos/memoryInfo"
  ]
  fieldexclude = ["current_period"]

# 接口统计：改测量名 + 改字段名
[[processors.rename]]
  namepass = ["huawei-ifm:ifm/interfaces/interface/ifStatistics"]

  # 测量改短名
  [[processors.rename.replace]]
    measurement = "huawei-ifm:ifm/interfaces/interface/ifStatistics"
    dest = "huawei_ifm_ifstats"

  # 字段改短名（按需列你关心的项）
  [[processors.rename.replace]]
    field = "interfaces.interface.0.ifStatistics.receiveByte"
    dest = "rx_bytes_total"
  [[processors.rename.replace]]
    field = "interfaces.interface.0.ifStatistics.receivePacket"
    dest = "receivePacket"
  [[processors.rename.replace]]
    field = "interfaces.interface.0.ifStatistics.rcvUniPacket"
    dest = "rcvUniPacket"
  [[processors.rename.replace]]
    field = "interfaces.interface.0.ifStatistics.rcvMutiPacket"
    dest = "rcvMutiPacket"
  [[processors.rename.replace]]
    field = "interfaces.interface.0.ifStatistics.rcvBroadPacket"
    dest = "rcvBroadPacket"
  [[processors.rename.replace]]
    field = "interfaces.interface.0.ifStatistics.rcvErrorPacket"
    dest = "rcvErrorPacket"
  [[processors.rename.replace]]
    field = "interfaces.interface.0.ifStatistics.sendByte"
    dest = "sendByte"
  [[processors.rename.replace]]
    field = "interfaces.interface.0.ifStatistics.sendPacket"
    dest = "sendPacket"
  [[processors.rename.replace]]
    field = "interfaces.interface.0.ifStatistics.sendUniPacket"
    dest = "sendUniPacket"
  [[processors.rename.replace]]
    field = "interfaces.interface.0.ifStatistics.sendMutiPacket"
    dest = "sendMutiPacket"
  [[processors.rename.replace]]
    field = "interfaces.interface.0.ifStatistics.sendBroadPacket"
    dest = "sendBroadPacket"
  [[processors.rename.replace]]
    field = "interfaces.interface.0.ifStatistics.sendDropPacket"
    dest = "sendDropPacket"
  [[processors.rename.replace]]
    field = "interfaces.interface.0.ifStatistics.sendErrorPacket"
    dest = "sendErrorPacket"
  [[processors.rename.replace]]
    field = "interfaces.interface.0.ifStatistics.in_realtime_bit_rate"
    dest = "in_realtime_bit_rate"
  [[processors.rename.replace]]
    field = "interfaces.interface.0.ifStatistics.out_realtime_bit_rate"
    dest = "out_realtime_bit_rate"
# CPU
[[processors.rename]]
  namepass = ["huawei-devm:devm/cpuInfos/cpuInfo"]
  [[processors.rename.replace]]
    measurement = "huawei-devm:devm/cpuInfos/cpuInfo"
    dest = "huawei_devm_cpu"
  [[processors.rename.replace]]
    field = "cpuInfos.cpuInfo.0.systemCpuUsage"
    dest = "systemCpuUsage"

# Memory
[[processors.rename]]
  namepass = ["huawei-devm:devm/memoryInfos/memoryInfo"]
  [[processors.rename.replace]]
    measurement = "huawei-devm:devm/memoryInfos/memoryInfo"
    dest = "huawei_devm_mem"
  [[processors.rename.replace]]
    field = "memoryInfos.memoryInfo.0.osMemoryTotal"
    dest = "osMemoryTotal"
  [[processors.rename.replace]]
    field = "memoryInfos.memoryInfo.0.osMemoryFree"
    dest = "osMemoryFree"
  [[processors.rename.replace]]
    field = "memoryInfos.memoryInfo.0.osMemoryUsage"
    dest = "osMemoryUsage"

# 输出到标准输出(用于调试和查看数据)
#[[outputs.file]]
  ## 输出到标准输出
#  files = ["stdout"]
  ## 数据格式
#  data_format = "influx"

# Prometheus 暴露 /metrics（供 Prometheus 抓取）
[[outputs.prometheus_client]]
  listen = ":9273"
  path = "/metrics"
  metric_version = 2
  export_timestamp = true
  # 如需将字符串字段转成标签（谨慎，可能升高基数）
  # string_as_label = true