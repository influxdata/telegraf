// Code generated by mockery v2.0.4. DO NOT EDIT.

package mocks

import (
	http "net/http"
	time "time"

	mock "github.com/stretchr/testify/mock"

	url "net/url"
)

// Request is an autogenerated mock type for the Request type
type Request struct {
	mock.Mock
}

// LastRequest provides a mock function with given fields:
func (_m *Request) LastRequest() time.Time {
	ret := _m.Called()

	var r0 time.Time
	if rf, ok := ret.Get(0).(func() time.Time); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	return r0
}

// MarkTriggered provides a mock function with given fields:
func (_m *Request) MarkTriggered() {
	_m.Called()
}

// Send provides a mock function with given fields: client
func (_m *Request) Send(client *http.Client) (map[string]interface{}, error) {
	ret := _m.Called(client)

	var r0 map[string]interface{}
	if rf, ok := ret.Get(0).(func(*http.Client) map[string]interface{}); ok {
		r0 = rf(client)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*http.Client) error); ok {
		r1 = rf(client)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Tags provides a mock function with given fields:
func (_m *Request) Tags() map[string]string {
	ret := _m.Called()

	var r0 map[string]string
	if rf, ok := ret.Get(0).(func() map[string]string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]string)
		}
	}

	return r0
}

// URL provides a mock function with given fields:
func (_m *Request) URL() *url.URL {
	ret := _m.Called()

	var r0 *url.URL
	if rf, ok := ret.Get(0).(func() *url.URL); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*url.URL)
		}
	}

	return r0
}
