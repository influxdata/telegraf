// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: huawei-devm.proto

package huawei_devm

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Devm_CpuInfos_CpuInfo_CurrentOverloadState int32

const (
	Devm_CpuInfos_CpuInfo_Unoverload Devm_CpuInfos_CpuInfo_CurrentOverloadState = 0
	Devm_CpuInfos_CpuInfo_Overload   Devm_CpuInfos_CpuInfo_CurrentOverloadState = 1
)

// Enum value maps for Devm_CpuInfos_CpuInfo_CurrentOverloadState.
var (
	Devm_CpuInfos_CpuInfo_CurrentOverloadState_name = map[int32]string{
		0: "Unoverload",
		1: "Overload",
	}
	Devm_CpuInfos_CpuInfo_CurrentOverloadState_value = map[string]int32{
		"Unoverload": 0,
		"Overload":   1,
	}
)

func (x Devm_CpuInfos_CpuInfo_CurrentOverloadState) Enum() *Devm_CpuInfos_CpuInfo_CurrentOverloadState {
	p := new(Devm_CpuInfos_CpuInfo_CurrentOverloadState)
	*p = x
	return p
}

func (x Devm_CpuInfos_CpuInfo_CurrentOverloadState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Devm_CpuInfos_CpuInfo_CurrentOverloadState) Descriptor() protoreflect.EnumDescriptor {
	return file_huawei_devm_proto_enumTypes[0].Descriptor()
}

func (Devm_CpuInfos_CpuInfo_CurrentOverloadState) Type() protoreflect.EnumType {
	return &file_huawei_devm_proto_enumTypes[0]
}

func (x Devm_CpuInfos_CpuInfo_CurrentOverloadState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Devm_CpuInfos_CpuInfo_CurrentOverloadState.Descriptor instead.
func (Devm_CpuInfos_CpuInfo_CurrentOverloadState) EnumDescriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

type Devm_MemoryInfos_MemoryInfo_CurrentOverloadState int32

const (
	Devm_MemoryInfos_MemoryInfo_Unoverload Devm_MemoryInfos_MemoryInfo_CurrentOverloadState = 0
	Devm_MemoryInfos_MemoryInfo_Overload   Devm_MemoryInfos_MemoryInfo_CurrentOverloadState = 1
)

// Enum value maps for Devm_MemoryInfos_MemoryInfo_CurrentOverloadState.
var (
	Devm_MemoryInfos_MemoryInfo_CurrentOverloadState_name = map[int32]string{
		0: "Unoverload",
		1: "Overload",
	}
	Devm_MemoryInfos_MemoryInfo_CurrentOverloadState_value = map[string]int32{
		"Unoverload": 0,
		"Overload":   1,
	}
)

func (x Devm_MemoryInfos_MemoryInfo_CurrentOverloadState) Enum() *Devm_MemoryInfos_MemoryInfo_CurrentOverloadState {
	p := new(Devm_MemoryInfos_MemoryInfo_CurrentOverloadState)
	*p = x
	return p
}

func (x Devm_MemoryInfos_MemoryInfo_CurrentOverloadState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Devm_MemoryInfos_MemoryInfo_CurrentOverloadState) Descriptor() protoreflect.EnumDescriptor {
	return file_huawei_devm_proto_enumTypes[1].Descriptor()
}

func (Devm_MemoryInfos_MemoryInfo_CurrentOverloadState) Type() protoreflect.EnumType {
	return &file_huawei_devm_proto_enumTypes[1]
}

func (x Devm_MemoryInfos_MemoryInfo_CurrentOverloadState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Devm_MemoryInfos_MemoryInfo_CurrentOverloadState.Descriptor instead.
func (Devm_MemoryInfos_MemoryInfo_CurrentOverloadState) EnumDescriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 2, 0, 0}
}

type Devm_TemperatureInfos_TemperatureInfo_State int32

const (
	Devm_TemperatureInfos_TemperatureInfo_State_UNKNOWN      Devm_TemperatureInfos_TemperatureInfo_State = 0
	Devm_TemperatureInfos_TemperatureInfo_State_NORMAL       Devm_TemperatureInfos_TemperatureInfo_State = 1
	Devm_TemperatureInfos_TemperatureInfo_State_MINOR        Devm_TemperatureInfos_TemperatureInfo_State = 2
	Devm_TemperatureInfos_TemperatureInfo_State_MAJOR        Devm_TemperatureInfos_TemperatureInfo_State = 3
	Devm_TemperatureInfos_TemperatureInfo_State_FATAL        Devm_TemperatureInfos_TemperatureInfo_State = 4
	Devm_TemperatureInfos_TemperatureInfo_State_ABNORMAL     Devm_TemperatureInfos_TemperatureInfo_State = 5
	Devm_TemperatureInfos_TemperatureInfo_State_UPPER        Devm_TemperatureInfos_TemperatureInfo_State = 6
	Devm_TemperatureInfos_TemperatureInfo_State_LOWER        Devm_TemperatureInfos_TemperatureInfo_State = 7
	Devm_TemperatureInfos_TemperatureInfo_State_NOTSUPPORTED Devm_TemperatureInfos_TemperatureInfo_State = 8
)

// Enum value maps for Devm_TemperatureInfos_TemperatureInfo_State.
var (
	Devm_TemperatureInfos_TemperatureInfo_State_name = map[int32]string{
		0: "State_UNKNOWN",
		1: "State_NORMAL",
		2: "State_MINOR",
		3: "State_MAJOR",
		4: "State_FATAL",
		5: "State_ABNORMAL",
		6: "State_UPPER",
		7: "State_LOWER",
		8: "State_NOTSUPPORTED",
	}
	Devm_TemperatureInfos_TemperatureInfo_State_value = map[string]int32{
		"State_UNKNOWN":      0,
		"State_NORMAL":       1,
		"State_MINOR":        2,
		"State_MAJOR":        3,
		"State_FATAL":        4,
		"State_ABNORMAL":     5,
		"State_UPPER":        6,
		"State_LOWER":        7,
		"State_NOTSUPPORTED": 8,
	}
)

func (x Devm_TemperatureInfos_TemperatureInfo_State) Enum() *Devm_TemperatureInfos_TemperatureInfo_State {
	p := new(Devm_TemperatureInfos_TemperatureInfo_State)
	*p = x
	return p
}

func (x Devm_TemperatureInfos_TemperatureInfo_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Devm_TemperatureInfos_TemperatureInfo_State) Descriptor() protoreflect.EnumDescriptor {
	return file_huawei_devm_proto_enumTypes[2].Descriptor()
}

func (Devm_TemperatureInfos_TemperatureInfo_State) Type() protoreflect.EnumType {
	return &file_huawei_devm_proto_enumTypes[2]
}

func (x Devm_TemperatureInfos_TemperatureInfo_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Devm_TemperatureInfos_TemperatureInfo_State.Descriptor instead.
func (Devm_TemperatureInfos_TemperatureInfo_State) EnumDescriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 4, 0, 0}
}

type Devm_SysEnergyInfo_SysPowerCycle int32

const (
	Devm_SysEnergyInfo_SysPowerCycle_FIFTEENMINUTES Devm_SysEnergyInfo_SysPowerCycle = 0
	Devm_SysEnergyInfo_SysPowerCycle_THIRTYMINUTES  Devm_SysEnergyInfo_SysPowerCycle = 1
	Devm_SysEnergyInfo_SysPowerCycle_ONEHOUR        Devm_SysEnergyInfo_SysPowerCycle = 2
	Devm_SysEnergyInfo_SysPowerCycle_ONEDAY         Devm_SysEnergyInfo_SysPowerCycle = 3
	Devm_SysEnergyInfo_SysPowerCycle_ONEWEEK        Devm_SysEnergyInfo_SysPowerCycle = 4
	Devm_SysEnergyInfo_SysPowerCycle_ONEMONTH       Devm_SysEnergyInfo_SysPowerCycle = 5
)

// Enum value maps for Devm_SysEnergyInfo_SysPowerCycle.
var (
	Devm_SysEnergyInfo_SysPowerCycle_name = map[int32]string{
		0: "SysPowerCycle_FIFTEENMINUTES",
		1: "SysPowerCycle_THIRTYMINUTES",
		2: "SysPowerCycle_ONEHOUR",
		3: "SysPowerCycle_ONEDAY",
		4: "SysPowerCycle_ONEWEEK",
		5: "SysPowerCycle_ONEMONTH",
	}
	Devm_SysEnergyInfo_SysPowerCycle_value = map[string]int32{
		"SysPowerCycle_FIFTEENMINUTES": 0,
		"SysPowerCycle_THIRTYMINUTES":  1,
		"SysPowerCycle_ONEHOUR":        2,
		"SysPowerCycle_ONEDAY":         3,
		"SysPowerCycle_ONEWEEK":        4,
		"SysPowerCycle_ONEMONTH":       5,
	}
)

func (x Devm_SysEnergyInfo_SysPowerCycle) Enum() *Devm_SysEnergyInfo_SysPowerCycle {
	p := new(Devm_SysEnergyInfo_SysPowerCycle)
	*p = x
	return p
}

func (x Devm_SysEnergyInfo_SysPowerCycle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Devm_SysEnergyInfo_SysPowerCycle) Descriptor() protoreflect.EnumDescriptor {
	return file_huawei_devm_proto_enumTypes[3].Descriptor()
}

func (Devm_SysEnergyInfo_SysPowerCycle) Type() protoreflect.EnumType {
	return &file_huawei_devm_proto_enumTypes[3]
}

func (x Devm_SysEnergyInfo_SysPowerCycle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Devm_SysEnergyInfo_SysPowerCycle.Descriptor instead.
func (Devm_SysEnergyInfo_SysPowerCycle) EnumDescriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 5, 0}
}

type Devm_SysEnergyInfo_SysPowerMode int32

const (
	Devm_SysEnergyInfo_SysPowerMode_USERDEFINED Devm_SysEnergyInfo_SysPowerMode = 0
	Devm_SysEnergyInfo_SysPowerMode_STANDARD    Devm_SysEnergyInfo_SysPowerMode = 1
	Devm_SysEnergyInfo_SysPowerMode_BASIC       Devm_SysEnergyInfo_SysPowerMode = 2
	Devm_SysEnergyInfo_SysPowerMode_DEEP        Devm_SysEnergyInfo_SysPowerMode = 3
)

// Enum value maps for Devm_SysEnergyInfo_SysPowerMode.
var (
	Devm_SysEnergyInfo_SysPowerMode_name = map[int32]string{
		0: "SysPowerMode_USERDEFINED",
		1: "SysPowerMode_STANDARD",
		2: "SysPowerMode_BASIC",
		3: "SysPowerMode_DEEP",
	}
	Devm_SysEnergyInfo_SysPowerMode_value = map[string]int32{
		"SysPowerMode_USERDEFINED": 0,
		"SysPowerMode_STANDARD":    1,
		"SysPowerMode_BASIC":       2,
		"SysPowerMode_DEEP":        3,
	}
)

func (x Devm_SysEnergyInfo_SysPowerMode) Enum() *Devm_SysEnergyInfo_SysPowerMode {
	p := new(Devm_SysEnergyInfo_SysPowerMode)
	*p = x
	return p
}

func (x Devm_SysEnergyInfo_SysPowerMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Devm_SysEnergyInfo_SysPowerMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huawei_devm_proto_enumTypes[4].Descriptor()
}

func (Devm_SysEnergyInfo_SysPowerMode) Type() protoreflect.EnumType {
	return &file_huawei_devm_proto_enumTypes[4]
}

func (x Devm_SysEnergyInfo_SysPowerMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Devm_SysEnergyInfo_SysPowerMode.Descriptor instead.
func (Devm_SysEnergyInfo_SysPowerMode) EnumDescriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 5, 1}
}

type Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State int32

const (
	Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State_SUPPLY    Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State = 0
	Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State_NOTSUPPLY Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State = 1
	Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State_SLEEP     Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State = 2
	Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State_UNKNOWN   Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State = 3
)

// Enum value maps for Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State.
var (
	Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State_name = map[int32]string{
		0: "State_SUPPLY",
		1: "State_NOTSUPPLY",
		2: "State_SLEEP",
		3: "State_UNKNOWN",
	}
	Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State_value = map[string]int32{
		"State_SUPPLY":    0,
		"State_NOTSUPPLY": 1,
		"State_SLEEP":     2,
		"State_UNKNOWN":   3,
	}
)

func (x Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State) Enum() *Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State {
	p := new(Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State)
	*p = x
	return p
}

func (x Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State) Descriptor() protoreflect.EnumDescriptor {
	return file_huawei_devm_proto_enumTypes[5].Descriptor()
}

func (Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State) Type() protoreflect.EnumType {
	return &file_huawei_devm_proto_enumTypes[5]
}

func (x Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State.Descriptor instead.
func (Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State) EnumDescriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 6, 0, 0, 0, 0}
}

type Devm struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CpuInfos         *Devm_CpuInfos         `protobuf:"bytes,5,opt,name=cpuInfos,proto3" json:"cpuInfos,omitempty"`             //0x2a
	EthPortStaStss   *Devm_EthPortStaStss   `protobuf:"bytes,7,opt,name=ethPortStaStss,proto3" json:"ethPortStaStss,omitempty"` //0x3a
	MemoryInfos      *Devm_MemoryInfos      `protobuf:"bytes,15,opt,name=memoryInfos,proto3" json:"memoryInfos,omitempty"`      //0x7e
	Ports            *Devm_Ports            `protobuf:"bytes,20,opt,name=ports,proto3" json:"ports,omitempty"`
	TemperatureInfos *Devm_TemperatureInfos `protobuf:"bytes,35,opt,name=temperatureInfos,proto3" json:"temperatureInfos,omitempty"`
	SysEnergyInfo    *Devm_SysEnergyInfo    `protobuf:"bytes,36,opt,name=sysEnergyInfo,proto3" json:"sysEnergyInfo,omitempty"`
	PowerSupplys     *Devm_PowerSupplys     `protobuf:"bytes,38,opt,name=powerSupplys,proto3" json:"powerSupplys,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Devm) Reset() {
	*x = Devm{}
	mi := &file_huawei_devm_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Devm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm) ProtoMessage() {}

func (x *Devm) ProtoReflect() protoreflect.Message {
	mi := &file_huawei_devm_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm.ProtoReflect.Descriptor instead.
func (*Devm) Descriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0}
}

func (x *Devm) GetCpuInfos() *Devm_CpuInfos {
	if x != nil {
		return x.CpuInfos
	}
	return nil
}

func (x *Devm) GetEthPortStaStss() *Devm_EthPortStaStss {
	if x != nil {
		return x.EthPortStaStss
	}
	return nil
}

func (x *Devm) GetMemoryInfos() *Devm_MemoryInfos {
	if x != nil {
		return x.MemoryInfos
	}
	return nil
}

func (x *Devm) GetPorts() *Devm_Ports {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Devm) GetTemperatureInfos() *Devm_TemperatureInfos {
	if x != nil {
		return x.TemperatureInfos
	}
	return nil
}

func (x *Devm) GetSysEnergyInfo() *Devm_SysEnergyInfo {
	if x != nil {
		return x.SysEnergyInfo
	}
	return nil
}

func (x *Devm) GetPowerSupplys() *Devm_PowerSupplys {
	if x != nil {
		return x.PowerSupplys
	}
	return nil
}

type Devm_CpuInfos struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	CpuInfo       []*Devm_CpuInfos_CpuInfo `protobuf:"bytes,1,rep,name=cpuInfo,proto3" json:"cpuInfo,omitempty"` //0x1a
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Devm_CpuInfos) Reset() {
	*x = Devm_CpuInfos{}
	mi := &file_huawei_devm_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Devm_CpuInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_CpuInfos) ProtoMessage() {}

func (x *Devm_CpuInfos) ProtoReflect() protoreflect.Message {
	mi := &file_huawei_devm_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_CpuInfos.ProtoReflect.Descriptor instead.
func (*Devm_CpuInfos) Descriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Devm_CpuInfos) GetCpuInfo() []*Devm_CpuInfos_CpuInfo {
	if x != nil {
		return x.CpuInfo
	}
	return nil
}

type Devm_EthPortStaStss struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	EthPortStaSts []*Devm_EthPortStaStss_EthPortStaSts `protobuf:"bytes,1,rep,name=ethPortStaSts,proto3" json:"ethPortStaSts,omitempty"` //0x0a
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Devm_EthPortStaStss) Reset() {
	*x = Devm_EthPortStaStss{}
	mi := &file_huawei_devm_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Devm_EthPortStaStss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_EthPortStaStss) ProtoMessage() {}

func (x *Devm_EthPortStaStss) ProtoReflect() protoreflect.Message {
	mi := &file_huawei_devm_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_EthPortStaStss.ProtoReflect.Descriptor instead.
func (*Devm_EthPortStaStss) Descriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Devm_EthPortStaStss) GetEthPortStaSts() []*Devm_EthPortStaStss_EthPortStaSts {
	if x != nil {
		return x.EthPortStaSts
	}
	return nil
}

type Devm_MemoryInfos struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	MemoryInfo    []*Devm_MemoryInfos_MemoryInfo `protobuf:"bytes,1,rep,name=memoryInfo,proto3" json:"memoryInfo,omitempty"` //0x0e
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Devm_MemoryInfos) Reset() {
	*x = Devm_MemoryInfos{}
	mi := &file_huawei_devm_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Devm_MemoryInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_MemoryInfos) ProtoMessage() {}

func (x *Devm_MemoryInfos) ProtoReflect() protoreflect.Message {
	mi := &file_huawei_devm_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_MemoryInfos.ProtoReflect.Descriptor instead.
func (*Devm_MemoryInfos) Descriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Devm_MemoryInfos) GetMemoryInfo() []*Devm_MemoryInfos_MemoryInfo {
	if x != nil {
		return x.MemoryInfo
	}
	return nil
}

type Devm_Ports struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Port          []*Devm_Ports_Port     `protobuf:"bytes,1,rep,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Devm_Ports) Reset() {
	*x = Devm_Ports{}
	mi := &file_huawei_devm_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Devm_Ports) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_Ports) ProtoMessage() {}

func (x *Devm_Ports) ProtoReflect() protoreflect.Message {
	mi := &file_huawei_devm_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_Ports.ProtoReflect.Descriptor instead.
func (*Devm_Ports) Descriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Devm_Ports) GetPort() []*Devm_Ports_Port {
	if x != nil {
		return x.Port
	}
	return nil
}

type Devm_TemperatureInfos struct {
	state           protoimpl.MessageState                   `protogen:"open.v1"`
	TemperatureInfo []*Devm_TemperatureInfos_TemperatureInfo `protobuf:"bytes,1,rep,name=temperatureInfo,proto3" json:"temperatureInfo,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Devm_TemperatureInfos) Reset() {
	*x = Devm_TemperatureInfos{}
	mi := &file_huawei_devm_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Devm_TemperatureInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_TemperatureInfos) ProtoMessage() {}

func (x *Devm_TemperatureInfos) ProtoReflect() protoreflect.Message {
	mi := &file_huawei_devm_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_TemperatureInfos.ProtoReflect.Descriptor instead.
func (*Devm_TemperatureInfos) Descriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Devm_TemperatureInfos) GetTemperatureInfo() []*Devm_TemperatureInfos_TemperatureInfo {
	if x != nil {
		return x.TemperatureInfo
	}
	return nil
}

type Devm_SysEnergyInfo struct {
	state           protoimpl.MessageState           `protogen:"open.v1"`
	SysAveragePower string                           `protobuf:"bytes,1,opt,name=sysAveragePower,proto3" json:"sysAveragePower,omitempty"`
	SysCurrentPower string                           `protobuf:"bytes,2,opt,name=sysCurrentPower,proto3" json:"sysCurrentPower,omitempty"`
	SysPowerCycle   Devm_SysEnergyInfo_SysPowerCycle `protobuf:"varint,3,opt,name=sysPowerCycle,proto3,enum=huawei_devm.Devm_SysEnergyInfo_SysPowerCycle" json:"sysPowerCycle,omitempty"`
	SysPowerMode    Devm_SysEnergyInfo_SysPowerMode  `protobuf:"varint,4,opt,name=sysPowerMode,proto3,enum=huawei_devm.Devm_SysEnergyInfo_SysPowerMode" json:"sysPowerMode,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Devm_SysEnergyInfo) Reset() {
	*x = Devm_SysEnergyInfo{}
	mi := &file_huawei_devm_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Devm_SysEnergyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_SysEnergyInfo) ProtoMessage() {}

func (x *Devm_SysEnergyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_huawei_devm_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_SysEnergyInfo.ProtoReflect.Descriptor instead.
func (*Devm_SysEnergyInfo) Descriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Devm_SysEnergyInfo) GetSysAveragePower() string {
	if x != nil {
		return x.SysAveragePower
	}
	return ""
}

func (x *Devm_SysEnergyInfo) GetSysCurrentPower() string {
	if x != nil {
		return x.SysCurrentPower
	}
	return ""
}

func (x *Devm_SysEnergyInfo) GetSysPowerCycle() Devm_SysEnergyInfo_SysPowerCycle {
	if x != nil {
		return x.SysPowerCycle
	}
	return Devm_SysEnergyInfo_SysPowerCycle_FIFTEENMINUTES
}

func (x *Devm_SysEnergyInfo) GetSysPowerMode() Devm_SysEnergyInfo_SysPowerMode {
	if x != nil {
		return x.SysPowerMode
	}
	return Devm_SysEnergyInfo_SysPowerMode_USERDEFINED
}

type Devm_PowerSupplys struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	PowerSupply   []*Devm_PowerSupplys_PowerSupply `protobuf:"bytes,1,rep,name=powerSupply,proto3" json:"powerSupply,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Devm_PowerSupplys) Reset() {
	*x = Devm_PowerSupplys{}
	mi := &file_huawei_devm_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Devm_PowerSupplys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_PowerSupplys) ProtoMessage() {}

func (x *Devm_PowerSupplys) ProtoReflect() protoreflect.Message {
	mi := &file_huawei_devm_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_PowerSupplys.ProtoReflect.Descriptor instead.
func (*Devm_PowerSupplys) Descriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Devm_PowerSupplys) GetPowerSupply() []*Devm_PowerSupplys_PowerSupply {
	if x != nil {
		return x.PowerSupply
	}
	return nil
}

type Devm_CpuInfos_CpuInfo struct {
	state                 protoimpl.MessageState                     `protogen:"open.v1"`
	EntIndex              uint32                                     `protobuf:"varint,1,opt,name=entIndex,proto3" json:"entIndex,omitempty"`                   //0x08
	Interval              uint32                                     `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`                   //0x10
	OvloadThreshold       uint32                                     `protobuf:"varint,3,opt,name=ovloadThreshold,proto3" json:"ovloadThreshold,omitempty"`     //0x18
	Position              string                                     `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`                    //0x22
	SystemCpuUsage        uint32                                     `protobuf:"varint,5,opt,name=systemCpuUsage,proto3" json:"systemCpuUsage,omitempty"`       //0x28
	UnovloadThreshold     uint32                                     `protobuf:"varint,6,opt,name=unovloadThreshold,proto3" json:"unovloadThreshold,omitempty"` //0x30
	MonitorNumber         uint32                                     `protobuf:"varint,7,opt,name=monitorNumber,proto3" json:"monitorNumber,omitempty"`
	MonitorCycle          uint32                                     `protobuf:"varint,8,opt,name=monitorCycle,proto3" json:"monitorCycle,omitempty"`
	OvloadStateChangeTime string                                     `protobuf:"bytes,9,opt,name=ovloadStateChangeTime,proto3" json:"ovloadStateChangeTime,omitempty"`
	CurrentOvloadState    Devm_CpuInfos_CpuInfo_CurrentOverloadState `protobuf:"varint,10,opt,name=currentOvloadState,proto3,enum=huawei_devm.Devm_CpuInfos_CpuInfo_CurrentOverloadState" json:"currentOvloadState,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Devm_CpuInfos_CpuInfo) Reset() {
	*x = Devm_CpuInfos_CpuInfo{}
	mi := &file_huawei_devm_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Devm_CpuInfos_CpuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_CpuInfos_CpuInfo) ProtoMessage() {}

func (x *Devm_CpuInfos_CpuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_huawei_devm_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_CpuInfos_CpuInfo.ProtoReflect.Descriptor instead.
func (*Devm_CpuInfos_CpuInfo) Descriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Devm_CpuInfos_CpuInfo) GetEntIndex() uint32 {
	if x != nil {
		return x.EntIndex
	}
	return 0
}

func (x *Devm_CpuInfos_CpuInfo) GetInterval() uint32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *Devm_CpuInfos_CpuInfo) GetOvloadThreshold() uint32 {
	if x != nil {
		return x.OvloadThreshold
	}
	return 0
}

func (x *Devm_CpuInfos_CpuInfo) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *Devm_CpuInfos_CpuInfo) GetSystemCpuUsage() uint32 {
	if x != nil {
		return x.SystemCpuUsage
	}
	return 0
}

func (x *Devm_CpuInfos_CpuInfo) GetUnovloadThreshold() uint32 {
	if x != nil {
		return x.UnovloadThreshold
	}
	return 0
}

func (x *Devm_CpuInfos_CpuInfo) GetMonitorNumber() uint32 {
	if x != nil {
		return x.MonitorNumber
	}
	return 0
}

func (x *Devm_CpuInfos_CpuInfo) GetMonitorCycle() uint32 {
	if x != nil {
		return x.MonitorCycle
	}
	return 0
}

func (x *Devm_CpuInfos_CpuInfo) GetOvloadStateChangeTime() string {
	if x != nil {
		return x.OvloadStateChangeTime
	}
	return ""
}

func (x *Devm_CpuInfos_CpuInfo) GetCurrentOvloadState() Devm_CpuInfos_CpuInfo_CurrentOverloadState {
	if x != nil {
		return x.CurrentOvloadState
	}
	return Devm_CpuInfos_CpuInfo_Unoverload
}

type Devm_EthPortStaStss_EthPortStaSts struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IfName        uint32                 `protobuf:"varint,1,opt,name=ifName,proto3" json:"ifName,omitempty"`               //0x08
	ReceiveByte   uint64                 `protobuf:"varint,2,opt,name=receiveByte,proto3" json:"receiveByte,omitempty"`     //0x10
	ReceivePacket uint64                 `protobuf:"varint,3,opt,name=receivePacket,proto3" json:"receivePacket,omitempty"` //0x18
	SendByte      uint64                 `protobuf:"varint,4,opt,name=sendByte,proto3" json:"sendByte,omitempty"`           //0x20
	SendPacket    uint64                 `protobuf:"varint,5,opt,name=sendPacket,proto3" json:"sendPacket,omitempty"`       //0x28
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Devm_EthPortStaStss_EthPortStaSts) Reset() {
	*x = Devm_EthPortStaStss_EthPortStaSts{}
	mi := &file_huawei_devm_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Devm_EthPortStaStss_EthPortStaSts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_EthPortStaStss_EthPortStaSts) ProtoMessage() {}

func (x *Devm_EthPortStaStss_EthPortStaSts) ProtoReflect() protoreflect.Message {
	mi := &file_huawei_devm_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_EthPortStaStss_EthPortStaSts.ProtoReflect.Descriptor instead.
func (*Devm_EthPortStaStss_EthPortStaSts) Descriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Devm_EthPortStaStss_EthPortStaSts) GetIfName() uint32 {
	if x != nil {
		return x.IfName
	}
	return 0
}

func (x *Devm_EthPortStaStss_EthPortStaSts) GetReceiveByte() uint64 {
	if x != nil {
		return x.ReceiveByte
	}
	return 0
}

func (x *Devm_EthPortStaStss_EthPortStaSts) GetReceivePacket() uint64 {
	if x != nil {
		return x.ReceivePacket
	}
	return 0
}

func (x *Devm_EthPortStaStss_EthPortStaSts) GetSendByte() uint64 {
	if x != nil {
		return x.SendByte
	}
	return 0
}

func (x *Devm_EthPortStaStss_EthPortStaSts) GetSendPacket() uint64 {
	if x != nil {
		return x.SendPacket
	}
	return 0
}

type Devm_MemoryInfos_MemoryInfo struct {
	state                 protoimpl.MessageState                           `protogen:"open.v1"`
	DoMemoryFree          uint32                                           `protobuf:"varint,1,opt,name=doMemoryFree,proto3" json:"doMemoryFree,omitempty"`            //0x08
	DoMemoryTotal         uint32                                           `protobuf:"varint,2,opt,name=doMemoryTotal,proto3" json:"doMemoryTotal,omitempty"`          //0x10
	DoMemoryUsage         uint32                                           `protobuf:"varint,3,opt,name=doMemoryUsage,proto3" json:"doMemoryUsage,omitempty"`          //0x18
	DoMemoryUse           uint32                                           `protobuf:"varint,4,opt,name=doMemoryUse,proto3" json:"doMemoryUse,omitempty"`              //0x20
	EntIndex              uint32                                           `protobuf:"varint,5,opt,name=entIndex,proto3" json:"entIndex,omitempty"`                    //0x28
	OsMemoryFree          uint32                                           `protobuf:"varint,6,opt,name=osMemoryFree,proto3" json:"osMemoryFree,omitempty"`            //0x30
	OsMemoryTotal         uint32                                           `protobuf:"varint,7,opt,name=osMemoryTotal,proto3" json:"osMemoryTotal,omitempty"`          //0x38
	OsMemoryUsage         uint32                                           `protobuf:"varint,8,opt,name=osMemoryUsage,proto3" json:"osMemoryUsage,omitempty"`          //0x40
	OsMemoryUse           uint32                                           `protobuf:"varint,9,opt,name=osMemoryUse,proto3" json:"osMemoryUse,omitempty"`              //0x48
	OvloadThreshold       uint32                                           `protobuf:"varint,10,opt,name=ovloadThreshold,proto3" json:"ovloadThreshold,omitempty"`     //0x50
	Position              string                                           `protobuf:"bytes,11,opt,name=position,proto3" json:"position,omitempty"`                    //0x5a
	SimpleMemoryFree      uint32                                           `protobuf:"varint,12,opt,name=simpleMemoryFree,proto3" json:"simpleMemoryFree,omitempty"`   //0x60
	SimpleMemoryTotal     uint32                                           `protobuf:"varint,13,opt,name=simpleMemoryTotal,proto3" json:"simpleMemoryTotal,omitempty"` //0x68
	SimpleMemoryUsage     uint32                                           `protobuf:"varint,14,opt,name=simpleMemoryUsage,proto3" json:"simpleMemoryUsage,omitempty"` //0x70
	SimpleMemoryUse       uint32                                           `protobuf:"varint,15,opt,name=simpleMemoryUse,proto3" json:"simpleMemoryUse,omitempty"`     //0x78
	UnovloadThreshold     uint32                                           `protobuf:"varint,16,opt,name=unovloadThreshold,proto3" json:"unovloadThreshold,omitempty"` //0x80 01
	OvloadStateChangeTime string                                           `protobuf:"bytes,17,opt,name=ovloadStateChangeTime,proto3" json:"ovloadStateChangeTime,omitempty"`
	CurrentOvloadState    Devm_MemoryInfos_MemoryInfo_CurrentOverloadState `protobuf:"varint,18,opt,name=currentOvloadState,proto3,enum=huawei_devm.Devm_MemoryInfos_MemoryInfo_CurrentOverloadState" json:"currentOvloadState,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Devm_MemoryInfos_MemoryInfo) Reset() {
	*x = Devm_MemoryInfos_MemoryInfo{}
	mi := &file_huawei_devm_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Devm_MemoryInfos_MemoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_MemoryInfos_MemoryInfo) ProtoMessage() {}

func (x *Devm_MemoryInfos_MemoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_huawei_devm_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_MemoryInfos_MemoryInfo.ProtoReflect.Descriptor instead.
func (*Devm_MemoryInfos_MemoryInfo) Descriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *Devm_MemoryInfos_MemoryInfo) GetDoMemoryFree() uint32 {
	if x != nil {
		return x.DoMemoryFree
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetDoMemoryTotal() uint32 {
	if x != nil {
		return x.DoMemoryTotal
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetDoMemoryUsage() uint32 {
	if x != nil {
		return x.DoMemoryUsage
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetDoMemoryUse() uint32 {
	if x != nil {
		return x.DoMemoryUse
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetEntIndex() uint32 {
	if x != nil {
		return x.EntIndex
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetOsMemoryFree() uint32 {
	if x != nil {
		return x.OsMemoryFree
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetOsMemoryTotal() uint32 {
	if x != nil {
		return x.OsMemoryTotal
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetOsMemoryUsage() uint32 {
	if x != nil {
		return x.OsMemoryUsage
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetOsMemoryUse() uint32 {
	if x != nil {
		return x.OsMemoryUse
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetOvloadThreshold() uint32 {
	if x != nil {
		return x.OvloadThreshold
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *Devm_MemoryInfos_MemoryInfo) GetSimpleMemoryFree() uint32 {
	if x != nil {
		return x.SimpleMemoryFree
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetSimpleMemoryTotal() uint32 {
	if x != nil {
		return x.SimpleMemoryTotal
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetSimpleMemoryUsage() uint32 {
	if x != nil {
		return x.SimpleMemoryUsage
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetSimpleMemoryUse() uint32 {
	if x != nil {
		return x.SimpleMemoryUse
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetUnovloadThreshold() uint32 {
	if x != nil {
		return x.UnovloadThreshold
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetOvloadStateChangeTime() string {
	if x != nil {
		return x.OvloadStateChangeTime
	}
	return ""
}

func (x *Devm_MemoryInfos_MemoryInfo) GetCurrentOvloadState() Devm_MemoryInfos_MemoryInfo_CurrentOverloadState {
	if x != nil {
		return x.CurrentOvloadState
	}
	return Devm_MemoryInfos_MemoryInfo_Unoverload
}

type Devm_Ports_Port struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	OpticalInfo   *Devm_Ports_Port_OpticalInfo `protobuf:"bytes,8,opt,name=opticalInfo,proto3" json:"opticalInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Devm_Ports_Port) Reset() {
	*x = Devm_Ports_Port{}
	mi := &file_huawei_devm_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Devm_Ports_Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_Ports_Port) ProtoMessage() {}

func (x *Devm_Ports_Port) ProtoReflect() protoreflect.Message {
	mi := &file_huawei_devm_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_Ports_Port.ProtoReflect.Descriptor instead.
func (*Devm_Ports_Port) Descriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 3, 0}
}

func (x *Devm_Ports_Port) GetOpticalInfo() *Devm_Ports_Port_OpticalInfo {
	if x != nil {
		return x.OpticalInfo
	}
	return nil
}

type Devm_Ports_Port_OpticalInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BiasCurrent   string                 `protobuf:"bytes,1,opt,name=biasCurrent,proto3" json:"biasCurrent,omitempty"`
	ManuDate      string                 `protobuf:"bytes,2,opt,name=manuDate,proto3" json:"manuDate,omitempty"`
	Position      string                 `protobuf:"bytes,15,opt,name=position,proto3" json:"position,omitempty"`
	RxPower       string                 `protobuf:"bytes,16,opt,name=rxPower,proto3" json:"rxPower,omitempty"`
	Temperature   string                 `protobuf:"bytes,17,opt,name=temperature,proto3" json:"temperature,omitempty"`
	TxPower       string                 `protobuf:"bytes,20,opt,name=txPower,proto3" json:"txPower,omitempty"`
	Voltage       string                 `protobuf:"bytes,23,opt,name=voltage,proto3" json:"voltage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Devm_Ports_Port_OpticalInfo) Reset() {
	*x = Devm_Ports_Port_OpticalInfo{}
	mi := &file_huawei_devm_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Devm_Ports_Port_OpticalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_Ports_Port_OpticalInfo) ProtoMessage() {}

func (x *Devm_Ports_Port_OpticalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_huawei_devm_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_Ports_Port_OpticalInfo.ProtoReflect.Descriptor instead.
func (*Devm_Ports_Port_OpticalInfo) Descriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 3, 0, 0}
}

func (x *Devm_Ports_Port_OpticalInfo) GetBiasCurrent() string {
	if x != nil {
		return x.BiasCurrent
	}
	return ""
}

func (x *Devm_Ports_Port_OpticalInfo) GetManuDate() string {
	if x != nil {
		return x.ManuDate
	}
	return ""
}

func (x *Devm_Ports_Port_OpticalInfo) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *Devm_Ports_Port_OpticalInfo) GetRxPower() string {
	if x != nil {
		return x.RxPower
	}
	return ""
}

func (x *Devm_Ports_Port_OpticalInfo) GetTemperature() string {
	if x != nil {
		return x.Temperature
	}
	return ""
}

func (x *Devm_Ports_Port_OpticalInfo) GetTxPower() string {
	if x != nil {
		return x.TxPower
	}
	return ""
}

func (x *Devm_Ports_Port_OpticalInfo) GetVoltage() string {
	if x != nil {
		return x.Voltage
	}
	return ""
}

type Devm_TemperatureInfos_TemperatureInfo struct {
	state              protoimpl.MessageState                      `protogen:"open.v1"`
	Position           string                                      `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	EntIndex           uint32                                      `protobuf:"varint,2,opt,name=entIndex,proto3" json:"entIndex,omitempty"`
	PcbName            string                                      `protobuf:"bytes,3,opt,name=pcbName,proto3" json:"pcbName,omitempty"`
	I2C                uint32                                      `protobuf:"varint,4,opt,name=i2c,proto3" json:"i2c,omitempty"`
	Address            string                                      `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Channel            uint32                                      `protobuf:"varint,6,opt,name=channel,proto3" json:"channel,omitempty"`
	CpuTemperature     uint32                                      `protobuf:"varint,7,opt,name=cpuTemperature,proto3" json:"cpuTemperature,omitempty"`
	State              Devm_TemperatureInfos_TemperatureInfo_State `protobuf:"varint,8,opt,name=state,proto3,enum=huawei_devm.Devm_TemperatureInfos_TemperatureInfo_State" json:"state,omitempty"`
	CurrentTemperature string                                      `protobuf:"bytes,9,opt,name=currentTemperature,proto3" json:"currentTemperature,omitempty"`
	MinorAlmThreshold  string                                      `protobuf:"bytes,10,opt,name=minorAlmThreshold,proto3" json:"minorAlmThreshold,omitempty"`
	MajorAlmThreshold  string                                      `protobuf:"bytes,11,opt,name=majorAlmThreshold,proto3" json:"majorAlmThreshold,omitempty"`
	FatalAlmThreshold  string                                      `protobuf:"bytes,12,opt,name=fatalAlmThreshold,proto3" json:"fatalAlmThreshold,omitempty"`
	MinorFanThreshold  string                                      `protobuf:"bytes,13,opt,name=minorFanThreshold,proto3" json:"minorFanThreshold,omitempty"`
	MajorFanThreshold  string                                      `protobuf:"bytes,14,opt,name=majorFanThreshold,proto3" json:"majorFanThreshold,omitempty"`
	SensorName         string                                      `protobuf:"bytes,15,opt,name=sensorName,proto3" json:"sensorName,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Devm_TemperatureInfos_TemperatureInfo) Reset() {
	*x = Devm_TemperatureInfos_TemperatureInfo{}
	mi := &file_huawei_devm_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Devm_TemperatureInfos_TemperatureInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_TemperatureInfos_TemperatureInfo) ProtoMessage() {}

func (x *Devm_TemperatureInfos_TemperatureInfo) ProtoReflect() protoreflect.Message {
	mi := &file_huawei_devm_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_TemperatureInfos_TemperatureInfo.ProtoReflect.Descriptor instead.
func (*Devm_TemperatureInfos_TemperatureInfo) Descriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 4, 0}
}

func (x *Devm_TemperatureInfos_TemperatureInfo) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *Devm_TemperatureInfos_TemperatureInfo) GetEntIndex() uint32 {
	if x != nil {
		return x.EntIndex
	}
	return 0
}

func (x *Devm_TemperatureInfos_TemperatureInfo) GetPcbName() string {
	if x != nil {
		return x.PcbName
	}
	return ""
}

func (x *Devm_TemperatureInfos_TemperatureInfo) GetI2C() uint32 {
	if x != nil {
		return x.I2C
	}
	return 0
}

func (x *Devm_TemperatureInfos_TemperatureInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Devm_TemperatureInfos_TemperatureInfo) GetChannel() uint32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *Devm_TemperatureInfos_TemperatureInfo) GetCpuTemperature() uint32 {
	if x != nil {
		return x.CpuTemperature
	}
	return 0
}

func (x *Devm_TemperatureInfos_TemperatureInfo) GetState() Devm_TemperatureInfos_TemperatureInfo_State {
	if x != nil {
		return x.State
	}
	return Devm_TemperatureInfos_TemperatureInfo_State_UNKNOWN
}

func (x *Devm_TemperatureInfos_TemperatureInfo) GetCurrentTemperature() string {
	if x != nil {
		return x.CurrentTemperature
	}
	return ""
}

func (x *Devm_TemperatureInfos_TemperatureInfo) GetMinorAlmThreshold() string {
	if x != nil {
		return x.MinorAlmThreshold
	}
	return ""
}

func (x *Devm_TemperatureInfos_TemperatureInfo) GetMajorAlmThreshold() string {
	if x != nil {
		return x.MajorAlmThreshold
	}
	return ""
}

func (x *Devm_TemperatureInfos_TemperatureInfo) GetFatalAlmThreshold() string {
	if x != nil {
		return x.FatalAlmThreshold
	}
	return ""
}

func (x *Devm_TemperatureInfos_TemperatureInfo) GetMinorFanThreshold() string {
	if x != nil {
		return x.MinorFanThreshold
	}
	return ""
}

func (x *Devm_TemperatureInfos_TemperatureInfo) GetMajorFanThreshold() string {
	if x != nil {
		return x.MajorFanThreshold
	}
	return ""
}

func (x *Devm_TemperatureInfos_TemperatureInfo) GetSensorName() string {
	if x != nil {
		return x.SensorName
	}
	return ""
}

type Devm_PowerSupplys_PowerSupply struct {
	state             protoimpl.MessageState                           `protogen:"open.v1"`
	Position          string                                           `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	EntIndex          uint32                                           `protobuf:"varint,2,opt,name=entIndex,proto3" json:"entIndex,omitempty"`
	PowerEnvironments *Devm_PowerSupplys_PowerSupply_PowerEnvironments `protobuf:"bytes,6,opt,name=powerEnvironments,proto3" json:"powerEnvironments,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Devm_PowerSupplys_PowerSupply) Reset() {
	*x = Devm_PowerSupplys_PowerSupply{}
	mi := &file_huawei_devm_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Devm_PowerSupplys_PowerSupply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_PowerSupplys_PowerSupply) ProtoMessage() {}

func (x *Devm_PowerSupplys_PowerSupply) ProtoReflect() protoreflect.Message {
	mi := &file_huawei_devm_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_PowerSupplys_PowerSupply.ProtoReflect.Descriptor instead.
func (*Devm_PowerSupplys_PowerSupply) Descriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 6, 0}
}

func (x *Devm_PowerSupplys_PowerSupply) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *Devm_PowerSupplys_PowerSupply) GetEntIndex() uint32 {
	if x != nil {
		return x.EntIndex
	}
	return 0
}

func (x *Devm_PowerSupplys_PowerSupply) GetPowerEnvironments() *Devm_PowerSupplys_PowerSupply_PowerEnvironments {
	if x != nil {
		return x.PowerEnvironments
	}
	return nil
}

type Devm_PowerSupplys_PowerSupply_PowerEnvironments struct {
	state            protoimpl.MessageState                                              `protogen:"open.v1"`
	PowerEnvironment []*Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment `protobuf:"bytes,1,rep,name=powerEnvironment,proto3" json:"powerEnvironment,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments) Reset() {
	*x = Devm_PowerSupplys_PowerSupply_PowerEnvironments{}
	mi := &file_huawei_devm_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_PowerSupplys_PowerSupply_PowerEnvironments) ProtoMessage() {}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments) ProtoReflect() protoreflect.Message {
	mi := &file_huawei_devm_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_PowerSupplys_PowerSupply_PowerEnvironments.ProtoReflect.Descriptor instead.
func (*Devm_PowerSupplys_PowerSupply_PowerEnvironments) Descriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 6, 0, 0}
}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments) GetPowerEnvironment() []*Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment {
	if x != nil {
		return x.PowerEnvironment
	}
	return nil
}

type Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment struct {
	state           protoimpl.MessageState                                                 `protogen:"open.v1"`
	PemIndex        uint32                                                                 `protobuf:"varint,1,opt,name=pemIndex,proto3" json:"pemIndex,omitempty"`
	State           Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State `protobuf:"varint,2,opt,name=state,proto3,enum=huawei_devm.Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State" json:"state,omitempty"`
	VoltageValue    string                                                                 `protobuf:"bytes,3,opt,name=voltageValue,proto3" json:"voltageValue,omitempty"`
	ElectricalValue string                                                                 `protobuf:"bytes,4,opt,name=electricalValue,proto3" json:"electricalValue,omitempty"`
	TemperValue     string                                                                 `protobuf:"bytes,5,opt,name=temperValue,proto3" json:"temperValue,omitempty"`
	ActualPower     string                                                                 `protobuf:"bytes,6,opt,name=actualPower,proto3" json:"actualPower,omitempty"`
	RatedPower      string                                                                 `protobuf:"bytes,7,opt,name=ratedPower,proto3" json:"ratedPower,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment) Reset() {
	*x = Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment{}
	mi := &file_huawei_devm_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment) ProtoMessage() {}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment) ProtoReflect() protoreflect.Message {
	mi := &file_huawei_devm_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment.ProtoReflect.Descriptor instead.
func (*Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment) Descriptor() ([]byte, []int) {
	return file_huawei_devm_proto_rawDescGZIP(), []int{0, 6, 0, 0, 0}
}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment) GetPemIndex() uint32 {
	if x != nil {
		return x.PemIndex
	}
	return 0
}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment) GetState() Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State {
	if x != nil {
		return x.State
	}
	return Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State_SUPPLY
}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment) GetVoltageValue() string {
	if x != nil {
		return x.VoltageValue
	}
	return ""
}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment) GetElectricalValue() string {
	if x != nil {
		return x.ElectricalValue
	}
	return ""
}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment) GetTemperValue() string {
	if x != nil {
		return x.TemperValue
	}
	return ""
}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment) GetActualPower() string {
	if x != nil {
		return x.ActualPower
	}
	return ""
}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment) GetRatedPower() string {
	if x != nil {
		return x.RatedPower
	}
	return ""
}

var File_huawei_devm_proto protoreflect.FileDescriptor

const file_huawei_devm_proto_rawDesc = "" +
	"\n" +
	"\x11huawei-devm.proto\x12\vhuawei_devm\"\xd2&\n" +
	"\x04Devm\x126\n" +
	"\bcpuInfos\x18\x05 \x01(\v2\x1a.huawei_devm.Devm.CpuInfosR\bcpuInfos\x12H\n" +
	"\x0eethPortStaStss\x18\a \x01(\v2 .huawei_devm.Devm.EthPortStaStssR\x0eethPortStaStss\x12?\n" +
	"\vmemoryInfos\x18\x0f \x01(\v2\x1d.huawei_devm.Devm.MemoryInfosR\vmemoryInfos\x12-\n" +
	"\x05ports\x18\x14 \x01(\v2\x17.huawei_devm.Devm.PortsR\x05ports\x12N\n" +
	"\x10temperatureInfos\x18# \x01(\v2\".huawei_devm.Devm.TemperatureInfosR\x10temperatureInfos\x12E\n" +
	"\rsysEnergyInfo\x18$ \x01(\v2\x1f.huawei_devm.Devm.SysEnergyInfoR\rsysEnergyInfo\x12B\n" +
	"\fpowerSupplys\x18& \x01(\v2\x1e.huawei_devm.Devm.PowerSupplysR\fpowerSupplys\x1a\xc7\x04\n" +
	"\bCpuInfos\x12<\n" +
	"\acpuInfo\x18\x01 \x03(\v2\".huawei_devm.Devm.CpuInfos.CpuInfoR\acpuInfo\x1a\xfc\x03\n" +
	"\aCpuInfo\x12\x1a\n" +
	"\bentIndex\x18\x01 \x01(\rR\bentIndex\x12\x1a\n" +
	"\binterval\x18\x02 \x01(\rR\binterval\x12(\n" +
	"\x0fovloadThreshold\x18\x03 \x01(\rR\x0fovloadThreshold\x12\x1a\n" +
	"\bposition\x18\x04 \x01(\tR\bposition\x12&\n" +
	"\x0esystemCpuUsage\x18\x05 \x01(\rR\x0esystemCpuUsage\x12,\n" +
	"\x11unovloadThreshold\x18\x06 \x01(\rR\x11unovloadThreshold\x12$\n" +
	"\rmonitorNumber\x18\a \x01(\rR\rmonitorNumber\x12\"\n" +
	"\fmonitorCycle\x18\b \x01(\rR\fmonitorCycle\x124\n" +
	"\x15ovloadStateChangeTime\x18\t \x01(\tR\x15ovloadStateChangeTime\x12g\n" +
	"\x12currentOvloadState\x18\n" +
	" \x01(\x0e27.huawei_devm.Devm.CpuInfos.CpuInfo.CurrentOverloadStateR\x12currentOvloadState\"4\n" +
	"\x14CurrentOverloadState\x12\x0e\n" +
	"\n" +
	"Unoverload\x10\x00\x12\f\n" +
	"\bOverload\x10\x01\x1a\x94\x02\n" +
	"\x0eEthPortStaStss\x12T\n" +
	"\rethPortStaSts\x18\x01 \x03(\v2..huawei_devm.Devm.EthPortStaStss.EthPortStaStsR\rethPortStaSts\x1a\xab\x01\n" +
	"\rEthPortStaSts\x12\x16\n" +
	"\x06ifName\x18\x01 \x01(\rR\x06ifName\x12 \n" +
	"\vreceiveByte\x18\x02 \x01(\x04R\vreceiveByte\x12$\n" +
	"\rreceivePacket\x18\x03 \x01(\x04R\rreceivePacket\x12\x1a\n" +
	"\bsendByte\x18\x04 \x01(\x04R\bsendByte\x12\x1e\n" +
	"\n" +
	"sendPacket\x18\x05 \x01(\x04R\n" +
	"sendPacket\x1a\xa7\a\n" +
	"\vMemoryInfos\x12H\n" +
	"\n" +
	"memoryInfo\x18\x01 \x03(\v2(.huawei_devm.Devm.MemoryInfos.MemoryInfoR\n" +
	"memoryInfo\x1a\xcd\x06\n" +
	"\n" +
	"MemoryInfo\x12\"\n" +
	"\fdoMemoryFree\x18\x01 \x01(\rR\fdoMemoryFree\x12$\n" +
	"\rdoMemoryTotal\x18\x02 \x01(\rR\rdoMemoryTotal\x12$\n" +
	"\rdoMemoryUsage\x18\x03 \x01(\rR\rdoMemoryUsage\x12 \n" +
	"\vdoMemoryUse\x18\x04 \x01(\rR\vdoMemoryUse\x12\x1a\n" +
	"\bentIndex\x18\x05 \x01(\rR\bentIndex\x12\"\n" +
	"\fosMemoryFree\x18\x06 \x01(\rR\fosMemoryFree\x12$\n" +
	"\rosMemoryTotal\x18\a \x01(\rR\rosMemoryTotal\x12$\n" +
	"\rosMemoryUsage\x18\b \x01(\rR\rosMemoryUsage\x12 \n" +
	"\vosMemoryUse\x18\t \x01(\rR\vosMemoryUse\x12(\n" +
	"\x0fovloadThreshold\x18\n" +
	" \x01(\rR\x0fovloadThreshold\x12\x1a\n" +
	"\bposition\x18\v \x01(\tR\bposition\x12*\n" +
	"\x10simpleMemoryFree\x18\f \x01(\rR\x10simpleMemoryFree\x12,\n" +
	"\x11simpleMemoryTotal\x18\r \x01(\rR\x11simpleMemoryTotal\x12,\n" +
	"\x11simpleMemoryUsage\x18\x0e \x01(\rR\x11simpleMemoryUsage\x12(\n" +
	"\x0fsimpleMemoryUse\x18\x0f \x01(\rR\x0fsimpleMemoryUse\x12,\n" +
	"\x11unovloadThreshold\x18\x10 \x01(\rR\x11unovloadThreshold\x124\n" +
	"\x15ovloadStateChangeTime\x18\x11 \x01(\tR\x15ovloadStateChangeTime\x12m\n" +
	"\x12currentOvloadState\x18\x12 \x01(\x0e2=.huawei_devm.Devm.MemoryInfos.MemoryInfo.CurrentOverloadStateR\x12currentOvloadState\"4\n" +
	"\x14CurrentOverloadState\x12\x0e\n" +
	"\n" +
	"Unoverload\x10\x00\x12\f\n" +
	"\bOverload\x10\x01\x1a\xe8\x02\n" +
	"\x05Ports\x120\n" +
	"\x04port\x18\x01 \x03(\v2\x1c.huawei_devm.Devm.Ports.PortR\x04port\x1a\xac\x02\n" +
	"\x04Port\x12J\n" +
	"\vopticalInfo\x18\b \x01(\v2(.huawei_devm.Devm.Ports.Port.OpticalInfoR\vopticalInfo\x1a\xd7\x01\n" +
	"\vOpticalInfo\x12 \n" +
	"\vbiasCurrent\x18\x01 \x01(\tR\vbiasCurrent\x12\x1a\n" +
	"\bmanuDate\x18\x02 \x01(\tR\bmanuDate\x12\x1a\n" +
	"\bposition\x18\x0f \x01(\tR\bposition\x12\x18\n" +
	"\arxPower\x18\x10 \x01(\tR\arxPower\x12 \n" +
	"\vtemperature\x18\x11 \x01(\tR\vtemperature\x12\x18\n" +
	"\atxPower\x18\x14 \x01(\tR\atxPower\x12\x18\n" +
	"\avoltage\x18\x17 \x01(\tR\avoltage\x1a\xfa\x06\n" +
	"\x10TemperatureInfos\x12\\\n" +
	"\x0ftemperatureInfo\x18\x01 \x03(\v22.huawei_devm.Devm.TemperatureInfos.TemperatureInfoR\x0ftemperatureInfo\x1a\x87\x06\n" +
	"\x0fTemperatureInfo\x12\x1a\n" +
	"\bposition\x18\x01 \x01(\tR\bposition\x12\x1a\n" +
	"\bentIndex\x18\x02 \x01(\rR\bentIndex\x12\x18\n" +
	"\apcbName\x18\x03 \x01(\tR\apcbName\x12\x10\n" +
	"\x03i2c\x18\x04 \x01(\rR\x03i2c\x12\x18\n" +
	"\aaddress\x18\x05 \x01(\tR\aaddress\x12\x18\n" +
	"\achannel\x18\x06 \x01(\rR\achannel\x12&\n" +
	"\x0ecpuTemperature\x18\a \x01(\rR\x0ecpuTemperature\x12N\n" +
	"\x05state\x18\b \x01(\x0e28.huawei_devm.Devm.TemperatureInfos.TemperatureInfo.StateR\x05state\x12.\n" +
	"\x12currentTemperature\x18\t \x01(\tR\x12currentTemperature\x12,\n" +
	"\x11minorAlmThreshold\x18\n" +
	" \x01(\tR\x11minorAlmThreshold\x12,\n" +
	"\x11majorAlmThreshold\x18\v \x01(\tR\x11majorAlmThreshold\x12,\n" +
	"\x11fatalAlmThreshold\x18\f \x01(\tR\x11fatalAlmThreshold\x12,\n" +
	"\x11minorFanThreshold\x18\r \x01(\tR\x11minorFanThreshold\x12,\n" +
	"\x11majorFanThreshold\x18\x0e \x01(\tR\x11majorFanThreshold\x12\x1e\n" +
	"\n" +
	"sensorName\x18\x0f \x01(\tR\n" +
	"sensorName\"\xad\x01\n" +
	"\x05State\x12\x11\n" +
	"\rState_UNKNOWN\x10\x00\x12\x10\n" +
	"\fState_NORMAL\x10\x01\x12\x0f\n" +
	"\vState_MINOR\x10\x02\x12\x0f\n" +
	"\vState_MAJOR\x10\x03\x12\x0f\n" +
	"\vState_FATAL\x10\x04\x12\x12\n" +
	"\x0eState_ABNORMAL\x10\x05\x12\x0f\n" +
	"\vState_UPPER\x10\x06\x12\x0f\n" +
	"\vState_LOWER\x10\a\x12\x16\n" +
	"\x12State_NOTSUPPORTED\x10\b\x1a\xc3\x04\n" +
	"\rSysEnergyInfo\x12(\n" +
	"\x0fsysAveragePower\x18\x01 \x01(\tR\x0fsysAveragePower\x12(\n" +
	"\x0fsysCurrentPower\x18\x02 \x01(\tR\x0fsysCurrentPower\x12S\n" +
	"\rsysPowerCycle\x18\x03 \x01(\x0e2-.huawei_devm.Devm.SysEnergyInfo.SysPowerCycleR\rsysPowerCycle\x12P\n" +
	"\fsysPowerMode\x18\x04 \x01(\x0e2,.huawei_devm.Devm.SysEnergyInfo.SysPowerModeR\fsysPowerMode\"\xbe\x01\n" +
	"\rSysPowerCycle\x12 \n" +
	"\x1cSysPowerCycle_FIFTEENMINUTES\x10\x00\x12\x1f\n" +
	"\x1bSysPowerCycle_THIRTYMINUTES\x10\x01\x12\x19\n" +
	"\x15SysPowerCycle_ONEHOUR\x10\x02\x12\x18\n" +
	"\x14SysPowerCycle_ONEDAY\x10\x03\x12\x19\n" +
	"\x15SysPowerCycle_ONEWEEK\x10\x04\x12\x1a\n" +
	"\x16SysPowerCycle_ONEMONTH\x10\x05\"v\n" +
	"\fSysPowerMode\x12\x1c\n" +
	"\x18SysPowerMode_USERDEFINED\x10\x00\x12\x19\n" +
	"\x15SysPowerMode_STANDARD\x10\x01\x12\x16\n" +
	"\x12SysPowerMode_BASIC\x10\x02\x12\x15\n" +
	"\x11SysPowerMode_DEEP\x10\x03\x1a\xc3\x06\n" +
	"\fPowerSupplys\x12L\n" +
	"\vpowerSupply\x18\x01 \x03(\v2*.huawei_devm.Devm.PowerSupplys.PowerSupplyR\vpowerSupply\x1a\xe4\x05\n" +
	"\vPowerSupply\x12\x1a\n" +
	"\bposition\x18\x01 \x01(\tR\bposition\x12\x1a\n" +
	"\bentIndex\x18\x02 \x01(\rR\bentIndex\x12j\n" +
	"\x11powerEnvironments\x18\x06 \x01(\v2<.huawei_devm.Devm.PowerSupplys.PowerSupply.PowerEnvironmentsR\x11powerEnvironments\x1a\xb0\x04\n" +
	"\x11PowerEnvironments\x12y\n" +
	"\x10powerEnvironment\x18\x01 \x03(\v2M.huawei_devm.Devm.PowerSupplys.PowerSupply.PowerEnvironments.PowerEnvironmentR\x10powerEnvironment\x1a\x9f\x03\n" +
	"\x10PowerEnvironment\x12\x1a\n" +
	"\bpemIndex\x18\x01 \x01(\rR\bpemIndex\x12i\n" +
	"\x05state\x18\x02 \x01(\x0e2S.huawei_devm.Devm.PowerSupplys.PowerSupply.PowerEnvironments.PowerEnvironment.StateR\x05state\x12\"\n" +
	"\fvoltageValue\x18\x03 \x01(\tR\fvoltageValue\x12(\n" +
	"\x0felectricalValue\x18\x04 \x01(\tR\x0felectricalValue\x12 \n" +
	"\vtemperValue\x18\x05 \x01(\tR\vtemperValue\x12 \n" +
	"\vactualPower\x18\x06 \x01(\tR\vactualPower\x12\x1e\n" +
	"\n" +
	"ratedPower\x18\a \x01(\tR\n" +
	"ratedPower\"R\n" +
	"\x05State\x12\x10\n" +
	"\fState_SUPPLY\x10\x00\x12\x13\n" +
	"\x0fState_NOTSUPPLY\x10\x01\x12\x0f\n" +
	"\vState_SLEEP\x10\x02\x12\x11\n" +
	"\rState_UNKNOWN\x10\x03B\\ZZgithub.com/influxdata/telegraf/plugins/parsers/huawei_grpc_gpb/telemetry_proto/huawei_devmb\x06proto3"

var (
	file_huawei_devm_proto_rawDescOnce sync.Once
	file_huawei_devm_proto_rawDescData []byte
)

func file_huawei_devm_proto_rawDescGZIP() []byte {
	file_huawei_devm_proto_rawDescOnce.Do(func() {
		file_huawei_devm_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_huawei_devm_proto_rawDesc), len(file_huawei_devm_proto_rawDesc)))
	})
	return file_huawei_devm_proto_rawDescData
}

var file_huawei_devm_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_huawei_devm_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_huawei_devm_proto_goTypes = []any{
	(Devm_CpuInfos_CpuInfo_CurrentOverloadState)(0),                             // 0: huawei_devm.Devm.CpuInfos.CpuInfo.CurrentOverloadState
	(Devm_MemoryInfos_MemoryInfo_CurrentOverloadState)(0),                       // 1: huawei_devm.Devm.MemoryInfos.MemoryInfo.CurrentOverloadState
	(Devm_TemperatureInfos_TemperatureInfo_State)(0),                            // 2: huawei_devm.Devm.TemperatureInfos.TemperatureInfo.State
	(Devm_SysEnergyInfo_SysPowerCycle)(0),                                       // 3: huawei_devm.Devm.SysEnergyInfo.SysPowerCycle
	(Devm_SysEnergyInfo_SysPowerMode)(0),                                        // 4: huawei_devm.Devm.SysEnergyInfo.SysPowerMode
	(Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment_State)(0), // 5: huawei_devm.Devm.PowerSupplys.PowerSupply.PowerEnvironments.PowerEnvironment.State
	(*Devm)(nil),                                            // 6: huawei_devm.Devm
	(*Devm_CpuInfos)(nil),                                   // 7: huawei_devm.Devm.CpuInfos
	(*Devm_EthPortStaStss)(nil),                             // 8: huawei_devm.Devm.EthPortStaStss
	(*Devm_MemoryInfos)(nil),                                // 9: huawei_devm.Devm.MemoryInfos
	(*Devm_Ports)(nil),                                      // 10: huawei_devm.Devm.Ports
	(*Devm_TemperatureInfos)(nil),                           // 11: huawei_devm.Devm.TemperatureInfos
	(*Devm_SysEnergyInfo)(nil),                              // 12: huawei_devm.Devm.SysEnergyInfo
	(*Devm_PowerSupplys)(nil),                               // 13: huawei_devm.Devm.PowerSupplys
	(*Devm_CpuInfos_CpuInfo)(nil),                           // 14: huawei_devm.Devm.CpuInfos.CpuInfo
	(*Devm_EthPortStaStss_EthPortStaSts)(nil),               // 15: huawei_devm.Devm.EthPortStaStss.EthPortStaSts
	(*Devm_MemoryInfos_MemoryInfo)(nil),                     // 16: huawei_devm.Devm.MemoryInfos.MemoryInfo
	(*Devm_Ports_Port)(nil),                                 // 17: huawei_devm.Devm.Ports.Port
	(*Devm_Ports_Port_OpticalInfo)(nil),                     // 18: huawei_devm.Devm.Ports.Port.OpticalInfo
	(*Devm_TemperatureInfos_TemperatureInfo)(nil),           // 19: huawei_devm.Devm.TemperatureInfos.TemperatureInfo
	(*Devm_PowerSupplys_PowerSupply)(nil),                   // 20: huawei_devm.Devm.PowerSupplys.PowerSupply
	(*Devm_PowerSupplys_PowerSupply_PowerEnvironments)(nil), // 21: huawei_devm.Devm.PowerSupplys.PowerSupply.PowerEnvironments
	(*Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment)(nil), // 22: huawei_devm.Devm.PowerSupplys.PowerSupply.PowerEnvironments.PowerEnvironment
}
var file_huawei_devm_proto_depIdxs = []int32{
	7,  // 0: huawei_devm.Devm.cpuInfos:type_name -> huawei_devm.Devm.CpuInfos
	8,  // 1: huawei_devm.Devm.ethPortStaStss:type_name -> huawei_devm.Devm.EthPortStaStss
	9,  // 2: huawei_devm.Devm.memoryInfos:type_name -> huawei_devm.Devm.MemoryInfos
	10, // 3: huawei_devm.Devm.ports:type_name -> huawei_devm.Devm.Ports
	11, // 4: huawei_devm.Devm.temperatureInfos:type_name -> huawei_devm.Devm.TemperatureInfos
	12, // 5: huawei_devm.Devm.sysEnergyInfo:type_name -> huawei_devm.Devm.SysEnergyInfo
	13, // 6: huawei_devm.Devm.powerSupplys:type_name -> huawei_devm.Devm.PowerSupplys
	14, // 7: huawei_devm.Devm.CpuInfos.cpuInfo:type_name -> huawei_devm.Devm.CpuInfos.CpuInfo
	15, // 8: huawei_devm.Devm.EthPortStaStss.ethPortStaSts:type_name -> huawei_devm.Devm.EthPortStaStss.EthPortStaSts
	16, // 9: huawei_devm.Devm.MemoryInfos.memoryInfo:type_name -> huawei_devm.Devm.MemoryInfos.MemoryInfo
	17, // 10: huawei_devm.Devm.Ports.port:type_name -> huawei_devm.Devm.Ports.Port
	19, // 11: huawei_devm.Devm.TemperatureInfos.temperatureInfo:type_name -> huawei_devm.Devm.TemperatureInfos.TemperatureInfo
	3,  // 12: huawei_devm.Devm.SysEnergyInfo.sysPowerCycle:type_name -> huawei_devm.Devm.SysEnergyInfo.SysPowerCycle
	4,  // 13: huawei_devm.Devm.SysEnergyInfo.sysPowerMode:type_name -> huawei_devm.Devm.SysEnergyInfo.SysPowerMode
	20, // 14: huawei_devm.Devm.PowerSupplys.powerSupply:type_name -> huawei_devm.Devm.PowerSupplys.PowerSupply
	0,  // 15: huawei_devm.Devm.CpuInfos.CpuInfo.currentOvloadState:type_name -> huawei_devm.Devm.CpuInfos.CpuInfo.CurrentOverloadState
	1,  // 16: huawei_devm.Devm.MemoryInfos.MemoryInfo.currentOvloadState:type_name -> huawei_devm.Devm.MemoryInfos.MemoryInfo.CurrentOverloadState
	18, // 17: huawei_devm.Devm.Ports.Port.opticalInfo:type_name -> huawei_devm.Devm.Ports.Port.OpticalInfo
	2,  // 18: huawei_devm.Devm.TemperatureInfos.TemperatureInfo.state:type_name -> huawei_devm.Devm.TemperatureInfos.TemperatureInfo.State
	21, // 19: huawei_devm.Devm.PowerSupplys.PowerSupply.powerEnvironments:type_name -> huawei_devm.Devm.PowerSupplys.PowerSupply.PowerEnvironments
	22, // 20: huawei_devm.Devm.PowerSupplys.PowerSupply.PowerEnvironments.powerEnvironment:type_name -> huawei_devm.Devm.PowerSupplys.PowerSupply.PowerEnvironments.PowerEnvironment
	5,  // 21: huawei_devm.Devm.PowerSupplys.PowerSupply.PowerEnvironments.PowerEnvironment.state:type_name -> huawei_devm.Devm.PowerSupplys.PowerSupply.PowerEnvironments.PowerEnvironment.State
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_huawei_devm_proto_init() }
func file_huawei_devm_proto_init() {
	if File_huawei_devm_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_huawei_devm_proto_rawDesc), len(file_huawei_devm_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_huawei_devm_proto_goTypes,
		DependencyIndexes: file_huawei_devm_proto_depIdxs,
		EnumInfos:         file_huawei_devm_proto_enumTypes,
		MessageInfos:      file_huawei_devm_proto_msgTypes,
	}.Build()
	File_huawei_devm_proto = out.File
	file_huawei_devm_proto_goTypes = nil
	file_huawei_devm_proto_depIdxs = nil
}
