syntax = "proto3";
// Automatically generated by goyang https://github.com/openconfig/goyang
// compiled 2017-08-09T07:03:53Z
// do not delete the next line
// goyang-version 1
// module "huawei-devm"
// revision "2017-03-23"
// revision "2013-01-01"
// namespace "http://www.huawei.com/netconf/vrp/huawei-devm"

package huawei_devm;

option go_package = "github.com/influxdata/telegraf/plugins/parsers/huawei_grpc_gpb/telemetry_proto/huawei_devm";

message Devm {
  message CpuInfos {
    message CpuInfo {
      uint32 entIndex = 1;  //0x08
      uint32 interval = 2;  //0x10
      uint32 ovloadThreshold = 3;   //0x18
      string position = 4;   //0x22
      uint32 systemCpuUsage = 5;  //0x28
      uint32 unovloadThreshold = 6;   //0x30
      uint32 monitorNumber = 7;
      uint32 monitorCycle = 8;
      string ovloadStateChangeTime = 9;
      enum CurrentOverloadState {
         Unoverload = 0;
         Overload = 1;
      };
      CurrentOverloadState currentOvloadState = 10;
    }
    repeated CpuInfo cpuInfo = 1;  //0x1a
  }
  CpuInfos cpuInfos = 5; //0x2a
  message EthPortStaStss {
    message EthPortStaSts {
      uint32 ifName = 1;  //0x08
      uint64 receiveByte = 2;   //0x10
      uint64 receivePacket = 3; //0x18
      uint64 sendByte = 4;   //0x20
      uint64 sendPacket = 5; //0x28
    }
    repeated EthPortStaSts ethPortStaSts = 1;  //0x0a
  }
  EthPortStaStss ethPortStaStss = 7;  //0x3a
  message MemoryInfos {
    message MemoryInfo {
      uint32 doMemoryFree = 1;  //0x08
      uint32 doMemoryTotal = 2;  //0x10
      uint32 doMemoryUsage = 3;  //0x18
      uint32 doMemoryUse = 4;   //0x20
      uint32 entIndex = 5;  //0x28
      uint32 osMemoryFree = 6;   //0x30
      uint32 osMemoryTotal = 7;  //0x38
      uint32 osMemoryUsage = 8;  //0x40
      uint32 osMemoryUse = 9;   //0x48
      uint32 ovloadThreshold = 10; //0x50
      string position = 11;  //0x5a
      uint32 simpleMemoryFree = 12;  //0x60
      uint32 simpleMemoryTotal = 13;  //0x68
      uint32 simpleMemoryUsage = 14;  //0x70
      uint32 simpleMemoryUse = 15;  //0x78
      uint32 unovloadThreshold = 16;  //0x80 01
      string ovloadStateChangeTime = 17;
      enum CurrentOverloadState {
         Unoverload = 0;
         Overload = 1;
      };
      CurrentOverloadState currentOvloadState = 18;
    }
    repeated MemoryInfo memoryInfo = 1; //0x0e
  }
  MemoryInfos memoryInfos = 15;  //0x7e
  
  message Ports {
    message Port {
      message OpticalInfo {
        string biasCurrent = 1;
        string manuDate = 2;
        string position = 15;
        string rxPower = 16;
        string temperature = 17;
        string txPower = 20;
        string voltage = 23;
      }
      OpticalInfo opticalInfo = 8;
    }
    repeated Port port = 1;
  }
  Ports ports = 20;
  message TemperatureInfos {
      message TemperatureInfo {
         string position = 1;
         uint32 entIndex = 2;
         string pcbName = 3;
         uint32 i2c = 4;
         string address = 5;
         uint32 channel = 6;
         uint32 cpuTemperature = 7;
         enum State {
            State_UNKNOWN = 0;
            State_NORMAL = 1;
            State_MINOR = 2;
            State_MAJOR = 3;
            State_FATAL = 4;
            State_ABNORMAL = 5;
            State_UPPER = 6;
            State_LOWER = 7;
            State_NOTSUPPORTED = 8;
         };
         State state = 8;
         string currentTemperature = 9;
         string minorAlmThreshold = 10;
         string majorAlmThreshold = 11;
         string fatalAlmThreshold = 12;
         string minorFanThreshold = 13;
         string majorFanThreshold = 14;
         string sensorName = 15;
      }
      repeated TemperatureInfo temperatureInfo = 1;
   }
   TemperatureInfos temperatureInfos = 35;

  message SysEnergyInfo {
    string sysAveragePower = 1 [json_name = "sysAveragePower"];
    string sysCurrentPower = 2 [json_name = "sysCurrentPower"];
    enum SysPowerCycle {
       SysPowerCycle_FIFTEENMINUTES = 0;
       SysPowerCycle_THIRTYMINUTES = 1;
       SysPowerCycle_ONEHOUR = 2;
       SysPowerCycle_ONEDAY = 3;
       SysPowerCycle_ONEWEEK = 4;
       SysPowerCycle_ONEMONTH = 5;
    };
    SysPowerCycle sysPowerCycle = 3 [json_name = "sysPowerCycle"];
    enum SysPowerMode {
       SysPowerMode_USERDEFINED = 0;
       SysPowerMode_STANDARD = 1;
       SysPowerMode_BASIC = 2;
       SysPowerMode_DEEP = 3;
    };
    SysPowerMode sysPowerMode = 4 [json_name = "sysPowerMode"];
  }
  SysEnergyInfo sysEnergyInfo = 36 [json_name = "sysEnergyInfo"];
  
  message PowerSupplys {
    message PowerSupply {
       string position = 1 [json_name = "position"];
       uint32 entIndex = 2 [json_name = "entIndex"];
       message PowerEnvironments {
          message PowerEnvironment {
             uint32 pemIndex = 1 [json_name = "pemIndex"];
             enum State {
                State_SUPPLY = 0;
                State_NOTSUPPLY = 1;
                State_SLEEP = 2;
                State_UNKNOWN = 3;
             };
             State state = 2 [json_name = "state"];
             string voltageValue = 3 [json_name = "voltageValue"];
             string electricalValue = 4 [json_name = "electricalValue"];
             string temperValue = 5 [json_name = "temperValue"];
             string actualPower = 6 [json_name = "actualPower"];
             string ratedPower = 7 [json_name = "ratedPower"];
          }
          repeated PowerEnvironment powerEnvironment = 1 [json_name = "powerEnvironment"];
       }
       PowerEnvironments powerEnvironments = 6 [json_name = "powerEnvironments"];
    }
    repeated PowerSupply powerSupply = 1 [json_name = "powerSupply"];
  }
  PowerSupplys powerSupplys = 38 [json_name = "powerSupplys"];
}

// Do not delete the lines below, they preserve tag information for goyang.
// goyang-tag Devm cpuInfos/CpuInfos 9
// goyang-tag Devm ethPortStaStss/EthPortStaStss 7
// goyang-tag Devm memoryInfos/MemoryInfos 17
// goyang-tag Devm sysEnergyInfo 36
// goyang-tag Devm powerSupplys/PowerSupplys 38
// goyang-tag Devm_CpuInfos cpuInfo/CpuInfo[] 1
// goyang-tag Devm_CpuInfos_CpuInfo entIndex/uint32 1
// goyang-tag Devm_CpuInfos_CpuInfo interval/uint32 2
// goyang-tag Devm_CpuInfos_CpuInfo ovloadThreshold/uint32 3
// goyang-tag Devm_CpuInfos_CpuInfo position/string 4
// goyang-tag Devm_CpuInfos_CpuInfo systemCpuUsage/uint32 5
// goyang-tag Devm_CpuInfos_CpuInfo unovloadThreshold/uint32 6
// goyang-tag Devm_CpuInfos_CpuInfo monitorNumber/uint32 7
// goyang-tag Devm_CpuInfos_CpuInfo monitorCycle/uint32 8
// goyang-tag Devm_CpuInfos_CpuInfo ovloadStateChangeTime/string 9
// goyang-tag Devm_CpuInfos_CpuInfo currentOvloadState/CurrentOverloadState 10
// goyang-tag Devm_MemoryInfos memoryInfo/MemoryInfo[] 1
// goyang-tag Devm_MemoryInfos_MemoryInfo doMemoryFree/uint32 1
// goyang-tag Devm_MemoryInfos_MemoryInfo doMemoryTotal/uint32 2
// goyang-tag Devm_MemoryInfos_MemoryInfo doMemoryUsage/uint32 3
// goyang-tag Devm_MemoryInfos_MemoryInfo doMemoryUse/uint32 4
// goyang-tag Devm_MemoryInfos_MemoryInfo entIndex/uint32 5
// goyang-tag Devm_MemoryInfos_MemoryInfo osMemoryFree/uint32 6
// goyang-tag Devm_MemoryInfos_MemoryInfo osMemoryTotal/uint32 7
// goyang-tag Devm_MemoryInfos_MemoryInfo osMemoryUsage/uint32 8
// goyang-tag Devm_MemoryInfos_MemoryInfo osMemoryUse/uint32 9
// goyang-tag Devm_MemoryInfos_MemoryInfo ovloadThreshold/uint32 10
// goyang-tag Devm_MemoryInfos_MemoryInfo position/string 11
// goyang-tag Devm_MemoryInfos_MemoryInfo simpleMemoryFree/uint32 12
// goyang-tag Devm_MemoryInfos_MemoryInfo simpleMemoryTotal/uint32 13
// goyang-tag Devm_MemoryInfos_MemoryInfo simpleMemoryUsage/uint32 14
// goyang-tag Devm_MemoryInfos_MemoryInfo simpleMemoryUse/uint32 15
// goyang-tag Devm_MemoryInfos_MemoryInfo unovloadThreshold/uint32 16
// goyang-tag Devm_MemoryInfos_MemoryInfo ovloadStateChangeTime/string 17
// goyang-tag Devm_MemoryInfos_MemoryInfo CurrentOverloadState/CurrentOverloadState 18
// goyang-tag Devm_EthPortStaStss ethPortStaSts/EthPortStaSts[] 1
// goyang-tag Devm_EthPortStaStss_EthPortStaSts ifName/uint32 1
// goyang-tag Devm_EthPortStaStss_EthPortStaSts receiveByte/uint64 2
// goyang-tag Devm_EthPortStaStss_EthPortStaSts receivePacket/uint64 3
// goyang-tag Devm_EthPortStaStss_EthPortStaSts sendByte/uint64 4
// goyang-tag Devm_EthPortStaStss_EthPortStaSts sendPacket/uint64 5
// goyang-tag Devm_SysEnergyInfo sysEnergyInfo[] 1
// goyang-tag Devm_SysEnergyInfo_SysEnergyInfo sysAveragePower/string 1
// goyang-tag Devm_SysEnergyInfo_SysEnergyInfo sysCurrentPower/string 2
// goyang-tag Devm_SysEnergyInfo_SysEnergyInfo sysPowerCycle/SysPowerCycle 3
// goyang-tag Devm_SysEnergyInfo_SysEnergyInfo sysPowerMode/SysPowerMode 4
// goyang-tag Devm_PowerSupplys powerSupplys/PowerSupplys[] 1
// goyang-tag Devm_PowerSupplys_PowerSupply position/string 1
// goyang-tag Devm_PowerSupplys_PowerSupply entIndex/uint32 2
// goyang-tag Devm_PowerSupplys_PowerSupply powerEnvironments/PowerEnvironments 6
