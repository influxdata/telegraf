syntax = "proto3";

package proto;

option go_package = "../proto";

message Diskio {

  message Fields {
    double io_time = 1;
    double iops_in_progress = 2;
    double merged_reads = 3;
    double merged_writes = 4;
    double read_bytes = 5;
    double read_time = 6;
    double reads = 7;
    double weighted_io_time = 8;
    double write_bytes = 9;
    double write_time = 10;
    double writes = 11;
  }

  Fields fields = 1;
  string name = 2;

  message Tags {
    string host = 1;
    string name = 2;
  }

  Tags tags = 3;
  double timestamp = 4;
}

message Glog {
  message Fields {
    string log_level = 1;
    string logcode = 2;
    string message = 3;
    string timestamp = 4;
  }

  Fields fields = 1;
  string name = 2;

  message Tags {
    string host = 1;
    string source = 2;
    string path = 3;
  }

  Tags tags = 3;
  double timestamp = 4;
}

message LTE {
  message Fields {
    string cell_id = 1;
    double dl_bandwidth = 2;
    double earfcn = 3;
    double freq_band_ind = 4;
    string is_tdd = 5;
    double mmc = 6;
    double mnc = 7;
    double pc_id = 8;
    string rsrp = 9;
    double rsrq = 10;
    double rssi = 11;
    double sinr = 12;
    double srxlev = 13;
    string state = 14;
    double ul_bandwidth = 15;
  }

  Fields fields = 1;
  string name = 2;

  message Tags {
    string host = 1;
    string path = 2;
  }

  Tags tags = 3;
  double timestamp = 4;
}

message Wireless {
  message Fields {
    int64 status = 1;
    int64 link = 2;
    int64 level = 3;
    int64 noise = 4;
    int64 nwid = 5;
    int64 crypt = 6;
    int64 frag = 7;
    int64 retry = 8;
    int64 misc = 9;
    int64 missed_beacon = 10;
  }

  Fields fields = 1;
  string name = 2;

  message Tags {
    string host = 1;
    string interface = 2;
  }

  Tags tags = 3;
  double timestamp = 4;
}

message SMART {
  message Fields {
    double exit_status = 1;
    bool health_ok = 2;
    double temp_c = 3;
  }

  Fields fields = 1;
  string name = 2;

  message TAGS {
    string device = 1;
    string host = 2;
    string model = 3;
    string serial_no = 4;
  }

  TAGS tags = 3;
  double timestamp = 4;
}


message Tegrastats {
  message Fields {
    double ao_temp = 1;
    double ape = 2;
    double aux_temp = 3;
    double cpu1freq = 4;
    double cpu1proc = 5;
    double cpu2freq = 6;
    double cpu2proc = 7;
    double cpu_temp = 8;
    double emcfreq = 9;
    double emcfreqproc = 10;
    double gpu_temp = 11;
    double gr3dfreq = 12;
    double gr3dfreqproc = 13;
    double mts_bg = 14;
    double mts_fg = 15;
    double largest_free_block_count = 16;
    double ram_total = 17;
    double ram_used = 18;
    double swap_cached = 19;
    double swap_total = 20;
    double swap_used = 21;
    double thermal_temp = 22;
    double vdd_cpu_gpu_cv_avg_miliwats = 23;
    double vdd_cpu_gpu_cv_current_miliwats = 24;
    double vdd_in_avg_miliwats = 25;
    double vdd_in_current_miliwats = 26;
    double vdd_soc_avg_miliwats = 27;
    double vdd_soc_current_miliwats = 28;
    double largest_free_block_size_mb = 29;
    double nvdec = 30;
    double nvdec1 = 31;
    double nvenc = 32;
    double nvenc1 = 33;
    double nvjpg = 34;
  }

  Fields fields = 1;
  string name = 2;

  message Tags {
    string host = 1;
    string path = 2;
  }

  Tags tags = 3;
  double timestamp = 4;
}


message CPU {
  message Fields {
    double usage_guest = 1;
    double usage_guest_nice = 2;
    double usage_idle = 3;
    double usage_iowait = 4;
    double usage_irq = 5;
    double usage_nice = 6;
    double usage_softirq = 7;
    double usage_steal = 8;
    double usage_system = 9;
    double usage_user = 10;
  }

  Fields fields = 1;
  string name = 2;

  message Tags {
    string cpu = 1;
    string host = 2;
  }

  Tags tags = 3;
  double timestamp = 4;
}

message Kernel {
  message Fields {
    int64 boot_time = 1;
    int64 context_switches = 2;
    int64 entropy_avail = 3;
    int64 interrupts = 4;
    int64 processes_forked = 5;
  }

  message Tags {
    string host = 1;
  }

  string name = 1;
  Fields fields = 2;
  Tags tags = 3;
  double timestamp = 4;
}

message LinuxSysctlFs {
  message Fields {
    double aio_max_nr = 1;
    double aio_nr = 2;
    double dentry_age_limit = 3;
    double dentry_nr = 4;
    double dentry_unused_nr = 5;
    double dentry_want_pages = 6;
    double file_max = 7;
    double file_nr = 8;
    double inode_free_nr = 9;
    double inode_nr = 10;
    double inode_preshrink_nr = 11;
  }

  Fields fields = 1;
  string name = 2;

  message Tags {
    string host = 1;
  }

  Tags tags = 3;
  double timestamp = 4;
}

message System {

  message Fields {
    double load1 = 1;
    double load15 = 2;
    double load5 = 3;
    int64 n_cpus = 4;
    int64 uptime = 5;
  }

  Fields fields = 1;
  string name = 2;

  message Tags {
    string host = 1;
    string vpn_ip = 2;
  }

  Tags tags = 3;
  double timestamp = 4;
}

message Net {
  message Fields {
    int64 bytes_recv = 1;
    int64 bytes_sent = 2;
    int64 drop_in = 3;
    int64 drop_out = 4;
    int64 err_in = 5;
    int64 err_out = 6;
    int64 packets_recv = 7;
    int64 packets_sent = 8;
    int64 icmp_inaddrmaskreps = 9;
    int64 icmp_inaddrmasks = 10;
    int64 icmp_incsumerrors = 11;
    int64 icmp_indestunreachs = 12;
    int64 icmp_inechoreps = 13;
    int64 icmp_inechos = 14;
    int64 icmp_inerrors = 15;
    int64 icmp_inmsgs = 16;
    int64 icmp_inparmprobs = 17;
    int64 icmp_inredirects = 18;
    int64 icmp_insrcquenchs = 19;
    int64 icmp_intimeexcds = 20;
    int64 icmp_intimestampreps = 21;
    int64 icmp_intimestamps = 22;
    int64 icmp_outaddrmaskreps = 23;
    int64 icmp_outaddrmasks = 24;
    int64 icmp_outdestunreachs = 25;
    int64 icmp_outechoreps = 26;
    int64 icmp_outechos = 27;
    int64 icmp_outerrors = 28;
    int64 icmp_outmsgs = 29;
    int64 icmp_outparmprobs = 30;
    int64 icmp_outredirects = 31;
    int64 icmp_outsrcquenchs = 32;
    int64 icmp_outtimeexcds = 33;
    int64 icmp_outtimestampreps = 34;
    int64 icmp_outtimestamps = 35;
    int64 ip_defaultttl = 36;
    int64 ip_forwarding = 37;
    int64 ip_forwdatagrams = 38;
    int64 ip_fragcreates = 39;
    int64 ip_fragfails = 40;
    int64 ip_fragoks = 41;
    int64 ip_inaddrerrors = 42;
    int64 ip_indelivers = 43;
    int64 ip_indiscards = 44;
    int64 ip_inhdrerrors = 45;
    int64 ip_inreceives = 46;
    int64 ip_inunknownprotos = 47;
    int64 ip_outdiscards = 48;
    int64 ip_outnoroutes = 49;
    int64 ip_outrequests = 50;
    int64 ip_reasmfails = 51;
    int64 ip_reasmoks = 52;
    int64 ip_reasmreqds = 53;
    int64 ip_reasmtimeout = 54;
    int64 tcp_activeopens = 55;
    int64 tcp_attemptfails = 56;
    int64 tcp_currestab = 57;
    int64 tcp_estabresets = 58;
    int64 tcp_incsumerrors = 59;
    int64 tcp_inerrs = 60;
    int64 tcp_insegs = 61;
    int64 tcp_maxconn = 62;
    int64 tcp_outrsts = 63;
    int64 tcp_outsegs = 64;
    int64 tcp_passiveopens = 65;
    int64 tcp_retranssegs = 66;
    int64 tcp_rtoalgorithm = 67;
    int64 tcp_rtomax = 68;
    int64 tcp_rtomin = 69;
    int64 udp_ignoredmulti = 70;
    int64 udp_incsumerrors = 71;
    int64 udp_indatagrams = 72;
    int64 udp_inerrors = 73;
    int64 udp_noports = 74;
    int64 udp_outdatagrams = 75;
    int64 udp_rcvbuferrors = 76;
    int64 udp_sndbuferrors = 77;
    int64 udplite_ignoredmulti = 78;
    int64 udplite_incsumerrors = 79;
    int64 udplite_indatagrams = 80;
    int64 udplite_inerrors = 81;
    int64 udplite_noports = 82;
    int64 udplite_outdatagrams = 83;
    int64 udplite_rcvbuferrors = 84;
    int64 udplite_sndbuferrors = 85;
  }

  Fields fields = 1;
  string name = 2;

  message Tags {
    string host = 1;
    string interface = 2;
  }

  Tags tags = 3;
  double timestamp = 4;
}

message Interrupts {

  message Fields {
    int64 CPU0 = 1;
    int64 CPU1 = 2;
    int64 CPU2 = 3;
    int64 CPU3 = 4;
    int64 CPU4 = 5;
    int64 CPU5 = 6;
    int64 total = 7;
  }

  Fields fields = 1;
  string name = 2;

  message Tags {
    string device = 1;
    string host = 2;
    string irq = 3;
    string type = 4;
  }

  Tags tags = 3;
  double timestamp = 4;
}

message Mem {

  message Fields {
    int64 active = 1;
    int64 available = 2;
    double available_percent = 3;
    int64 buffered = 4;
    int64 cached = 5;
    int64 commit_limit = 6;
    int64 committed_as = 7;
    int64 dirty = 8;
    int64 free = 9;
    int64 high_free = 10;
    int64 high_total = 11;
    int64 huge_page_size = 12;
    int64 huge_pages_free = 13;
    int64 huge_pages_total = 14;
    int64 inactive = 15;
    int64 low_free = 16;
    int64 low_total = 17;
    int64 mapped = 18;
    int64 page_tables = 19;
    int64 shared = 20;
    int64 slab = 21;
    int64 sreclaimable = 22;
    int64 sunreclaim = 23;
    int64 swap_cached = 24;
    int64 swap_free = 25;
    int64 swap_total = 26;
    int64 total = 27;
    int64 used = 28;
    double used_percent = 29;
    int64 vmalloc_chunk = 30;
    int64 vmalloc_total = 31;
    int64 vmalloc_used = 32;
    int64 write_back = 33;
    int64 write_back_tmp = 34;
  }

  Fields fields = 1;
  string name = 2;

  message Tags {
    string host = 1;
  }

  Tags tags = 3;
  double timestamp = 4;
}

message Disk {
  message Fields {
    int64 free = 1;
    int64 inodes_free = 2;
    int64 inodes_total = 3;
    int64 inodes_used = 4;
    int64 total = 5;
    int64 used = 6;
    double used_percent = 7;
  }

  Fields fields = 1;
  string name = 2;

  message Tags {
    string device = 1;
    string fstype = 2;
    string host = 3;
    string mode = 4;
    string path = 5;
  }

  Tags tags = 3;
  double timestamp = 4;
}

message Swap {
  message Fields {
    int64 free = 1;
    int64 total = 2;
    int64 used = 3;
    double used_percent = 4;
  }

  Fields fields = 1;
  string name = 2;

  message Tags {
    string host = 1;
  }

  Tags tags = 3;
  double timestamp = 4;
}


message Processes {
  message Fields {
    int64 blocked = 1;
    int64 dead = 2;
    int64 idle = 3;
    int64 paging = 4;
    int64 running = 5;
    int64 sleeping = 6;
    int64 stopped = 7;
    int64 total = 8;
    int64 total_threads = 9;
    int64 unknown = 10;
    int64 zombies = 11;
  }

  Fields fields = 1;
  string name = 2;

  message Tags {
    string host = 1;
  }

  Tags tags = 3;
  double timestamp = 4;
}

message DockerBlkio {

  message Fields {
    int64 io_service_bytes_recursive_async = 2;
    int64 io_service_bytes_recursive_read = 3;
    int64 io_service_bytes_recursive_sync = 4;
    int64 io_service_bytes_recursive_total = 5;
    int64 io_service_bytes_recursive_write = 6;
    int64 io_serviced_recursive_async = 7;
    int64 io_serviced_recursive_read = 8;
    int64 io_serviced_recursive_sync = 9;
    int64 io_serviced_recursive_total = 10;
    int64 io_serviced_recursive_write = 11;
  }

  Fields fields = 1;
  string name = 2;

  message Tags {
    string container_image = 1;
    string container_name = 2;
    string container_status = 3;
    string container_version = 4;
    string device = 5;
    string engine_host = 6;
    string host = 7;
    string server_version = 8;
  }

  Tags tags = 3;
  double timestamp = 4;
}

message DockerStats {
  message FIELDS {
    int64 n_containers = 1;
    int64 n_containers_paused = 2;
    int64 n_containers_running = 3;
    int64 n_containers_stopped = 4;
    int64 n_cpus = 5;
    int64 n_goroutines = 6;
    int64 n_images = 7;
    int64 n_listener_events = 8;
    int64 n_used_file_descriptors = 9;
    int64 memory_total = 10;
  }

  FIELDS fields = 1;
  string name = 2;

  message TAGS {
    string engine_host = 1;
    string host = 2;
    string server_version = 3;
  }

  TAGS tags = 3;
  double timestamp = 4;
}


message DockerMem {
  message Fields {
    double usage_percent = 1;
  }

  Fields fields = 2;
  string name = 3;

  message Tags {
    string container_image = 1;
    string container_name = 2;
    string container_status = 3;
    string container_version = 4;
    string engine_host = 5;
    string host = 6;
    string server_version = 7;
  }

  Tags tags = 4;
  double timestamp = 5;
}

message DockerCpu {
  message Fields {
    double usage_percent = 6;
    int64 usage_system = 7;
    int64 usage_total = 8;
  }

  Fields fields = 1;
  string name = 2;

  message Tags {
    string container_image = 1;
    string container_name = 2;
    string container_status = 3;
    string container_version = 4;
    string cpu = 5;
    string engine_host = 6;
    string host = 7;
    string server_version = 8;
  }

  Tags tags = 3;
  double timestamp = 4;
}


message DockerNet {
  message Fields {
    int64 rx_bytes = 2;
    int64 rx_dropped = 3;
    int64 rx_errors = 4;
    int64 rx_packets = 5;
    int64 tx_bytes = 6;
    int64 tx_dropped = 7;
    int64 tx_errors = 8;
    int64 tx_packets = 9;
  }

  Fields fields = 1;
  string name = 2;

  message Tags {
    string container_image = 1;
    string container_name = 2;
    string container_status = 3;
    string container_version = 4;
    string engine_host = 5;
    string host = 6;
    string network = 7;
    string server_version = 8;
  }

  Tags tags = 3;
  double timestamp = 4;
}

message Netstat {

  message Fields {
    double tcp_close = 1;
    double tcp_close_wait = 2;
    double tcp_closing = 3;
    double tcp_established = 4;
    double tcp_fin_wait1 = 5;
    double tcp_fin_wait2 = 6;
    double tcp_last_ack = 7;
    double tcp_listen = 8;
    double tcp_none = 9;
    double tcp_syn_recv = 10;
    double tcp_syn_sent = 11;
    double tcp_time_wait = 12;
    double udp_socket = 13;
  }

  Fields fields = 1;
  string name = 2;

  message Tags {
    string host = 1;
  }

  Tags tags = 3;
  double timestamp = 4;
}

message GPS {

  message Fields {
    double lat = 1;
    double lon = 2;
    double heading = 3;
    double pdop = 4;
  }

  message Tags {
    string host = 1;
  }

  Fields fields = 1;
  string name = 2;
  Tags tags = 3;
  double timestamp = 4;
}

message Uploader {
  message Fields {
    string auth_token_status = 1;
    string initialized = 2;
    string uploading_status = 3;
  }

  message Tags {
    string host = 1;
    string url = 2;
  }

  Fields fields = 1; // DEPRECATED - use fields_map instead
  string name = 2;
  Tags tags = 3;
  double timestamp = 4;
  map<string, string> fields_map = 5;
}

message UploaderStats {

  message Fields {
    int64 complete = 1;
    int64 error = 2;
    int64 in_queue = 3;
    int64 part = 4;
  }

  message Tags {
    string host = 1;
    string url = 2;
  }

  Fields fields = 1;
  string name = 2;
  Tags tags = 3;
  double timestamp = 4;
}


message DetectNet {

  message Fields {
    string detection_sent = 1;
    string frames_loaded = 2;
    string frames_proccessed = 3;
    string initialized = 4;
    string net_processed = 5;
    string tracker_processed = 6;
  }

  message Tags {
    string host = 1;
    string url = 2;
  }

  Fields fields = 1;  // DEPRECATED - use fields_map instead
  string name = 2;
  Tags tags = 3;
  double timestamp = 4;
  map<string, string> fields_map = 5;
}

message SegNet {

  message Fields {
    string data_sent = 1;
    string detection_loaded = 2;
    string frames_loaded = 3;
    string frames_proccessed = 4;
    string initialized = 5;
    string net_processed = 6;
  }

  message Tags {
    string host = 1;
    string url = 2;
  }

  Fields fields = 1;  // DEPRECATED - use fields_map instead
  string name = 2;
  Tags tags = 3;
  double timestamp = 4;
  map<string, string> fields_map = 5;
}

message PPCorrection {
  message Fields {
    string initialized = 1;
    string dynamic_key = 2;
    string SPARTN_correction = 3;
    string RTCM_correction = 4;
    string GNSS_data = 5;
  }

  message Tags {
    string host = 1;
    string url = 2;
  }

  Fields fields = 1;  // DEPRECATED - use fields_map instead
  string name = 2;
  Tags tags = 3;
  double timestamp = 4;
  map<string, string> fields_map = 5;
}

message Able {
  message Fields {
    string alpr_loaded = 1;
    string context_frame_loaded = 2;
    string frame_gps_time_diff_ok = 3;
    string frame_model_time_diff_ok = 4;
    string gps_active = 5;
    string gps_time_status = 6;
    string initialized = 7;
    string lpr_frames_loaded = 8;
    string model_data_loaded = 9;
    string route_loaded = 10;
    string homography_loaded = 11;
  }

  message Tags {
    string host = 1;
    string url = 2;
  }

  Fields fields = 1;  // DEPRECATED - use fields_map instead
  string name = 2;
  Tags tags = 3;
  double timestamp = 4;
  map<string, string> fields_map = 5;
}

message CameraControl {

  message Fields {
    string autoexposure_status = 1;
    string initialized = 2;
    string pipeline_status = 3;
  }

  message Tags {
    string host = 1;
    string url = 2;
  }

  Fields fields = 1;  // DEPRECATED - use fields_map instead
  string name = 2;
  Tags tags = 3;
  double timestamp = 4;
  map<string, string> fields_map = 5;
}

message EventDataCutter {
  message Tags {
    string host = 1;
  }

  string name = 1;
  Tags tags = 2;
  double timestamp = 3;
  map<string, string> fields_map = 4;
}

message EventDataCutterStats {
  message Tags {
    string host = 1;
  }

  string name = 1;
  Tags tags = 2;
  double timestamp = 3;
  map<string, int64> fields_map = 4;
}

message Recorder {
  message Tags {
    string host = 1;
  }

  string name = 1;
  Tags tags = 2;
  double timestamp = 3;
  map<string, string> fields_map = 4;
}

message Influx {
  repeated Kernel kernel = 1;
  repeated LinuxSysctlFs linux_sysctl_fs = 2;
  repeated System system = 3;
  repeated Net net = 4;
  repeated Interrupts interrupts = 5;
  repeated Mem mem = 6;
  repeated Disk disk = 7;
  repeated Processes processes = 8;
  repeated CPU cpu = 9;
  repeated Swap swap = 10;
  repeated Tegrastats tegrastats = 11;
  repeated DockerBlkio dockerBlkio = 12;
  repeated DockerNet dockerNet = 13;
  repeated DockerCpu dockerCpu = 14;
  repeated DockerMem dockerMem = 15;
  repeated DockerStats dockerStats = 16;
  repeated SMART smart = 17;
  repeated LTE lte = 18;
  repeated Glog glog = 19;
  repeated Diskio diskio = 20;
  repeated Netstat netstat = 21;
  repeated GPS gps = 22;
  repeated Able able = 23;
  repeated CameraControl cameraControl = 24;
  repeated SegNet segNet = 25;
  repeated DetectNet detectnet = 26;
  repeated Uploader uploader = 27;
  repeated UploaderStats uploader_stats = 28;
  repeated Wireless wireless = 29;
  repeated PPCorrection ppCorrection = 30;
  repeated EventDataCutter eventDataCutter = 31;
  repeated EventDataCutterStats eventDataCutterStats = 32;
  repeated Recorder recorder = 33;
}


