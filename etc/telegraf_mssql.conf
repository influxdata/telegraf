# Telegraf configuration

# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.

# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.

# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.

# Global tags can be specified here in key="value" format.
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"

# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "5s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf will cache metric_buffer_limit metrics for each output, and will
  ## flush this buffer on a successful write.
  metric_buffer_limit = 10000
  ## Flush the buffer whenever full, regardless of flush_interval.
  flush_buffer_when_full = true

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "0s"

  ## Default flushing interval for all outputs. You shouldn't set this below
  ## interval. Maximum flush_interval will be flush_interval + flush_jitter
  flush_interval = "5s"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "0s"

  ## Logging configuration:
  ## Run telegraf in debug mode
  debug = false
  ## Run telegraf in quiet mode
  quiet = false
  ## Specify the log file name. The empty string means to log to stdout.
  logfile = ""

  ## Override default hostname, if empty use os.Hostname()
  hostname = ""


###############################################################################
#                                  OUTPUTS                                    #
###############################################################################
# Configuration for influxdb server to send metrics to
[[outputs.influxdb]]
  urls = ["http://cgysamd01:8086"]
  database = "telegraf"
  precision = "s"
  timeout = "5s"
  
[[outputs.file]]
  files = ["stdout"]
  data_format = "influx"

###############################################################################
#                                  INPUTS                                     #
###############################################################################
[[inputs.sqlquery]]
  interval = "60s"
  connection_url = "sqlserver://CGYRT-SQLP06?database=WhatsUp&user id=TECKCOMINCO\\sclosso3-admin&password=Win020Grin"
  [[inputs.sqlquery.query]]
    name = "WrlsAPStatisticsCombinedWithIdent"
    query = """
    SELECT [IdentSSID] as tag_SSID
          ,[IdentDataRate] as tag_DataRate
          ,[WrlsAPIdentificationID]
          ,DATEADD(mi, DATEDIFF(mi, GETDATE(), GETUTCDATE()), [PollTime]) as timestamp
          ,[ClientCountAvg]
          ,[ClientCountMin]
          ,[ClientCountMax]
          ,[RSSIAvg]
          ,[RSSIMin]
          ,[RSSIMax]
          ,[SnRAvg]
          ,[SnRMin]
          ,[SnRMax]
          ,[BytesReceivedAvg]
          ,[BytesReceivedMin]
          ,[BytesReceivedMax]
          ,[BytesSentAvg]
          ,[BytesSentMin]
          ,[BytesSentMax]
          ,[TimeDelta]
          ,[DataType]
      FROM [WhatsUp].[dbo].[WrlsAPStatisticsCombinedWithIdent]
      WHERE PollTime > DATEADD(second, -60, SYSDATETIME())
      
    """
  

