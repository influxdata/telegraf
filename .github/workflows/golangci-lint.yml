name: golangci-lint
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    # Trigger every day at 16:00 UTC
    - cron: '0 16 * * *'
permissions:
  contents: read # to fetch code (actions/checkout)
  pull-requests: read # to fetch pull requests (golangci/golangci-lint-action)

jobs:
  golangci:
    name: lint-codebase
    strategy:
      matrix:
        include:
          - GOOS: linux
          - GOOS: windows
          - GOOS: darwin
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: '1.20'
      - uses: actions/checkout@v3
      - name: golangci-lint
        env:
          ACTIONS_RUNNER_DEBUG: true
          ACTIONS_STEP_DEBUG: true
          GOOS: ${{ matrix.GOOS }}
          GL_DEBUG: "autogen_exclude,bin_salt,config_reader,enabled_linters,env,exclude_rules,exec,filename_unadjuster,goenv,linter,linters_context,lintersdb,loader,max_from_linter,max_same_issues,pkgcache,runner,severity_rules,skip_dirs,source_code,stopwatch,tab_printer,test,text_printer,goanalysis/analyze,goanalysis/issues/cache,goanalysis/memory,goanalysis/facts,goanalysis/cache,goanalysis/export,goanalysis/inherit"
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.52.2
          args: --timeout 30m0s --verbose --out-${NO_FUTURE}format tab
