version: 2

jobs:
  build:
    working_directory: ~/.go_workspace/src/github.com/influxdata/telegraf
    environment:
      GOPATH: /home/circleci/.go_workspace
    docker:
      - image: circleci/golang:1.8.3
    steps:
      - checkout
      - run: git submodule sync --recursive
      - run: git submodule update --recursive --init

      - run:
          name: Check that go fmt has been run.
          command: |
            fmtcount=`git ls-files | grep '.go$' | grep -v Godep | xargs gofmt -l 2>&1 | wc -l`
            if [ $fmtcount -gt 0 ]; then
              echo "run 'go fmt ./...' to format your source code."
              exit 1
            fi

      - run: make
      - run:
          name: Run the tests
          command: go vet ./...

      - run:
          name: Simple Integration Tests check that version was properly set
          command: |
            telegraf -version
            tmpdir=$(mktemp -d)
            telegraf -sample-config > $tmpdir/config.toml
            telegraf -config $tmpdir/config.toml \
              -test -input-filter cpu:mem

  deploy:
    working_directory: ~/.go_workspace/src/github.com/influxdata/telegraf
    environment:
      GOPATH: /home/circleci/.go_workspace
    machine:
      enabled: true
    steps:
      - checkout
      - run: git submodule sync --recursive
      - run: git submodule update --recursive --init
      - run:
          command: |
            sudo apt-get install -y rpm python-boto
            ./scripts/build.py --release --package --platform=linux --arch=amd64
workflows:
    version: 2
    build-and-deploy:
      jobs:
        - build
        - deploy:
            requires:
              - build
